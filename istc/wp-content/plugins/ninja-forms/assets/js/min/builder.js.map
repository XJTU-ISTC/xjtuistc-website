{"version":3,"sources":["../lib/almond.js","views/app/menuItem.js","views/app/menu.js","views/app/menuButtons.js","views/app/mobileMenuButton.js","views/app/header.js","views/app/subHeader.js","views/app/formTitle.js","views/app/builderHeader.js","views/app/main.js","views/app/mobileMenuItem.js","views/app/mobileMenu.js","views/app/drawer/contentEmpty.js","views/app/drawer.js","views/app/drawer/mergeTagItem.js","views/app/drawer/mergeTagsSection.js","models/app/mergeTagModel.js","models/app/mergeTagCollection.js","views/app/drawer/mergeTagsContent.js","views/app/builder.js","controllers/app/remote.js","controllers/app/drawer.js","views/app/drawer/headerDefault.js","views/app/drawer/footerDefault.js","models/app/drawerModel.js","models/app/drawerCollection.js","views/fields/drawer/stagedField.js","views/fields/drawer/stagingEmpty.js","views/fields/drawer/stagingCollection.js","models/fields/stagingModel.js","models/fields/stagingCollection.js","views/fields/drawer/typeSection.js","views/fields/drawer/typeSectionCollection.js","views/fields/drawer/addField.js","views/app/drawer/itemSettingCollection.js","views/app/drawer/itemSettingGroup.js","views/app/drawer/itemSettingGroupCollection.js","views/app/drawer/editSettings.js","views/app/drawer/headerEditSettings.js","views/actions/drawer/typeButton.js","views/actions/drawer/typeCollection.js","views/actions/drawer/addAction.js","views/app/drawer/contentViewChangesItem.js","views/app/drawer/contentViewChanges.js","views/app/drawer/headerViewChanges.js","views/app/drawer/settingError.js","views/app/drawer/itemSetting.js","views/app/drawer/contentNewForm.js","views/app/drawer/headerNewForm.js","controllers/app/drawerConfig.js","views/app/drawer/defaultSettingsTitle.js","models/app/domainModel.js","models/app/domainCollection.js","views/fields/mainHeader.js","views/fields/subHeader.js","views/app/itemControls.js","views/fields/fieldItem.js","views/fields/mainContentEmpty.js","views/fields/mainContentFieldCollection.js","views/fields/drawer/addSavedField.js","views/fields/drawer/settingsTitle.js","views/actions/mainHeader.js","views/actions/subHeader.js","views/actions/actionItem.js","views/actions/mainContentEmpty.js","views/actions/mainContent.js","views/advanced/mainHeader.js","views/advanced/subHeader.js","views/advanced/settingItem.js","views/advanced/mainContent.js","controllers/app/domainConfig.js","models/app/appModel.js","controllers/app/data.js","controllers/app/drawerToggleSettingGroup.js","controllers/app/updateDB.js","models/app/formModel.js","controllers/app/formData.js","controllers/app/previewLink.js","controllers/app/menuButtons.js","models/app/changeModel.js","models/app/changeCollection.js","controllers/app/trackChanges.js","controllers/app/undoChanges.js","controllers/app/publishResponse.js","controllers/app/changeDomain.js","controllers/app/pushstate.js","controllers/app/hotkeys.js","controllers/app/cleanState.js","controllers/app/coreUndo.js","controllers/app/cloneModelDeep.js","controllers/app/getSettingChildView.js","controllers/app/changeSettingDefault.js","views/app/drawer/typeSettingFieldset.js","models/app/settingModel.js","models/app/settingCollection.js","controllers/app/fieldset.js","controllers/app/toggleSetting.js","controllers/app/itemControls.js","controllers/app/mergeTags.js","controllers/app/itemSettingFill.js","controllers/app/confirmPublish.js","controllers/app/rte.js","controllers/app/changeMenu.js","controllers/app/mobile.js","controllers/app/notices.js","controllers/app/unloadCheck.js","controllers/app/fieldContentsFilters.js","models/app/typeModel.js","models/app/typeCollection.js","models/app/settingGroupModel.js","models/app/settingGroupCollection.js","models/fields/typeSectionModel.js","models/fields/typeSectionCollection.js","controllers/fields/types.js","controllers/fields/fieldTypeDrag.js","controllers/fields/stagingDrag.js","controllers/fields/staging.js","controllers/fields/stagingSortable.js","controllers/fields/filterTypes.js","controllers/fields/sortable.js","models/fields/fieldModel.js","models/fields/fieldCollection.js","controllers/fields/data.js","models/app/optionRepeaterModel.js","models/app/optionRepeaterCollection.js","views/app/drawer/optionRepeaterError.js","views/app/drawer/optionRepeaterOption.js","views/app/drawer/optionRepeaterEmpty.js","views/app/drawer/optionRepeaterComposite.js","controllers/app/optionRepeater.js","controllers/fields/editActive.js","controllers/fields/fieldSettings.js","controllers/fields/fieldCreditCard.js","controllers/fields/fieldPassword.js","controllers/fields/fieldQuantity.js","controllers/fields/fieldShipping.js","controllers/fields/key.js","controllers/fields/notices.js","controllers/fields/mobile.js","controllers/fields/savedFields.js","controllers/fields/fieldDatepicker.js","controllers/fields/fieldDisplayCalc.js","controllers/actions/types.js","models/actions/actionModel.js","models/actions/actionCollection.js","controllers/actions/data.js","controllers/actions/actionSettings.js","controllers/actions/editActive.js","controllers/actions/addActionTypes.js","controllers/actions/typeDrag.js","controllers/actions/droppable.js","models/actions/typeModel.js","models/actions/typeCollection.js","controllers/actions/filterTypes.js","controllers/actions/newsletterList.js","controllers/advanced/types.js","models/advanced/settingsModel.js","controllers/advanced/data.js","controllers/advanced/formSettings.js","controllers/advanced/editActive.js","controllers/advanced/clickEdit.js","controllers/advanced/calculations.js","controllers/loadControllers.js","views/loadViews.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","view","Marionette","ItemView","extend","tagName","template","initialize","this","listenTo","nfRadio","channel","render","model","on","onRender","$el","children","unwrap","setElement","events","click a","clickAppMenu","trigger","templateHelpers","renderDashicons","dashicons","renderClasses","classes","currentDomain","request","get","renderUrl","url","formModel","renderTarget","renderDisabled","disabled","appMenuItemView","CollectionView","childView","onShow","el","find","bounceIcon","that","renderPublish","publishWidth","_","html","maybeDisabled","maybeRenderCancel","viewChanges","click .publish","click .viewChanges","clickPublish","clickViewChanges","changeModel","effect","times","click .nf-mobile-menu","clickMobileMenu","builderEl","toggleClass","appMenuCollectionView","appMenuButtonsView","mobileMenuButtonView","LayoutView","regions","menu","buttons","mobileMenuButton","appDomainCollection","show","collection","click #nf-logo","clickLogo","renderTitle","formData","appHeaderView","appSubHeaderView","formTitleView","app","formTitle","appSub","changeSubHeader","formSettings","subHeaderView","header","content","reply","getMainEl","parent","perfectScrollbar","disableSelection","contentView","mobileDashicon","mobileMenuItemView","CompositeView","attachHtml","collectionView","append","click .nf-publish","drawerEmptyView","footer","getEl","loadContent","emptyContent","drawerID","data","drawer","headerView","footerView","empty","click .nf-toggle-drawer","clickToggleDrawer","onBeforeDestroy","off","clickTag","active","mergeTagItemView","fieldCollection","updateFields","set","Backbone","Model","defaults","exclude","mergeTagModel","Collection","mergeTagsSectionView","MergeTagCollection","getMergeTagsView","reRender","settingModel","mergeTagCollection","defaultGroups","where","default_group","useMergeTags","each","remove","include","models","sectionModel","add","mainView","mobileMenuView","drawerView","mergeTagsContentView","menuDrawer","mergeTagsContent","getBuilderEl","getBuilderView","mergeTags","mergeTagsClone","clone","click .nf-open-drawer","click .nf-change-domain","click .nf-close-drawer","openDrawer","closeDrawer","changeDomain","addListener","dataModel","listen","updateSetting","clickExtra","getRemote","settingView","srcElement","addClass","remote","parentValue","action","security","nfAdmin","ajaxNonce","post","ajaxurl","response","JSON","parse","options","controller","clickOpenDrawer","toggleDrawerSize","getClosedDrawerPos","preventClose","enableClose","maybePreventClose","objPreventClose","filterFocused","currentDrawer","removeClass","rightClosed","drawerEl","css","right","checkCloseDrawerPos","setInterval","clearInterval","target","currentDomainID","hasFocus","checkOpenDrawerPos","focusFilter","filterEl","focus","closedPos","width","keys","key","getPreventClose","clearFilter","blurFilter","keyup .nf-filter","input .nf-filter","focus input","changeFilter","maybeChangeFilter","keyCode","addObject","trim","val","blur","getFocus","drawerDisabled","defaultHeaderView","defaultFooterView","getHeaderView","getFooterView","drawerModel","click .dashicons-dismiss","removeStagedField","stagedFieldView","stagedFieldsEmptyView","emptyView","getStagedFieldsEl","sortable","placeholder","helper","tolerance","over","ui","out","receive","update","start","stop","draggable","opacity","connectToSortable","height","element","left","top","stagingModel","comparator","bindAll","getTypeSection","dragging","scroll","click .nf-item","keydown .nf-item","mousedown .nf-item","clickFieldType","mousedownFieldType","maybeClickFieldType","renderFieldTypes","fieldTypes","type","nicename","icon","renderType","savedField","isSavedField","fieldTypeSectionView","drawerStagingView","StagingCollection","fieldTypeSectionCollectionView","staging","primary","secondary","filterFieldTypes","removeFieldTypeFilter","savedCollection","primaryCollection","fieldTypeSectionCollection","secondaryCollection","stagingCollection","filteredSectionCollection","reset","childViewOptions","getChildView","itemSettingCollectionView","settings","click .toggle","clickToggleGroup","renderLabel","label","groupLabel","renderArrowDir","display","itemSettingGroupView","itemSettingGroupCollectionView","settingTitle","settingGroups","groupCollection","titleView","maybeRenderTitle","title","renderTypeNicename","domainID","clickAddAction","window","open","image","section","renderStyle","actionTypeButtonView","renderNicename","slug","actionTypeCollectionView","filteractionTypes","removeactionTypeFilter","installedActions","availableActions","filteredInstalled","filteredAvailable","click .undoSingle","undoSingle","viewChangesItem","className","click .undoChanges","clickUndoChanges","settingErrorView","error","renderOnChange","renderError","refresh","drawerOpened","drawerClosed","onBeforeRender","next","jBox","maxWidth","theme","closeOnClick","mask","input","autoNumeric","aSep","thousandsSeparator","aDec","decimalPoint","aSign","format","console","log","onAttach","renderVisible","renderSetting","setting","renderLabelClasses","use_merge_tags","renderTooltip","help","renderMergeTags","hide_merge_tags","renderPlaceholder","change .setting","keyup .setting","click .setting","click .extra","changeSetting","keyUpSetting","clickSetting","itemSettingView","formName","formSubmit","titleSettingModel","addSubmitSettingModel","submitButtons","findWhere","drawerCollection","addFieldView","editSettingsView","editSettingsHeaderView","addActionView","viewChangesView","viewChangesHeaderView","newFormView","newFormHeaderView","mobileItemControlsView","getContentView","getDrawerCollection","getDrawer","defaultSettingsTitleView","hotkeys","getSettingsTitleView","domainModel","hide","click .nf-edit-settings","singletap .nf-edit-settings","click .nf-delete","click .nf-duplicate","clickEdit","singleTapEdit","clickDelete","clickDuplicateField","itemControlsView","itemControls","touch","hasClass","ClassyWiggle","degrees","delay","editActive","renderRequired","required","getFieldID","isNumeric","renderIcon","click","singletap","swipeleft","swiperight","tapend","maybeClickEdit","maybeTapEdit","swipeLeft","startEvnt","closest","swipeRight","droppable","accept","hoverClass","item","drop","mainContentFieldView","mainContentFieldEmptyView","reorderOnSort","getSortableEl","initSortable","destroySortable","containment","cancel","renderAddButton","button","click .nf-button","clickAddSavedField","addSavedFieldView","renderjBoxContent","addSaved","addSavedjBox","destroy","unset","silent","position","x","y","outside","onCreated","setContent","attach","displayName","isSaved","realType","renderSavedStar","star","actionCollection","maybeDeactivate","change input","changeToggle","renderToggle","actionLabel","actionView","activeClass","settingItem","fieldsMainHeaderView","fieldsSubHeaderView","fieldsMainContentFieldCollectionView","fieldsSettingsTitleView","actionsMainHeaderView","actionsSubHeaderView","actionsMainContentView","settingsMainHeaderView","settingsSubHeaderView","settingsMainContentView","Esc","Ctrl+Shift+n","Ctrl+Shift+a","Ctrl+Shift+s","Alt+Ctrl+t","up","down","Shift+return","getMainHeaderView","getSubHeaderView","getMainContentView","fieldContentsData","fieldContentsLoadFilters","sortedArray","without","first","fieldContentsView","fieldContentsViewFilters","Ctrl+Shift+f","previewurl","getDomainCollection","getDomainModel","loading","changeStatus","appModel","clean","mobile","isMobile","getData","getSetting","getCurrentDomain","getCurrentDrawer","updateCurrentDomain","updateCurrentDrawer","currentDrawerID","toggleSettingGroup","errors","updateDB","jsAction","fieldContentsSaveDataFilters","stringify","removedIDs","fields","field","parent_id","deleted_fields","actions","deleted_actions","autoClose","form","exception","preloadedFormData","getFormModel","disablePreview","enablePreview","changePreviewNicename","appDomains","preview","publish","changeCollection","parseInt","cid","ChangeModel","registerChange","getCollection","maybeResetCollection","changes","dashicon","undoChanges","sort","change","undoAll","publishResponse","new_ids","newID","oldID","forms","history","replaceState","changeAppDomain","preventChange","enableChange","objPreventChange","maybePreventChange","changePushState","pushState","location","href","reExp","toString","newUrl","changeHotkeys","addNewField","addNewAction","changeDomainFields","changeDomainActions","changeDomainSettings","document","hotkey","msg","fieldsDomain","actionsDomain","settingsDomain","ignoreAttributes","setAppClean","attr","changedAttributes","changedAttr","after","undoChangeSetting","undoAddObject","undoRemoveObject","undoDuplicateObject","undoSortFields","undoAddListOption","undoRemoveListOption","undoSortListOptions","fieldModel","before","maybeRemoveChange","objectModel","newIDs","results","objectCollection","objModels","optionModel","cloneModelDeep","attributes","copy","constructor","newModel","getSettingChildView","settingChildView","object","maybePreventUI","objectType","updateKey","keyModel","fieldsetView","settingCollection","createSettingsCollection","settingTypeModel","clickDuplicate","tmpID","tagSectionCollection","tagSection","tags","fieldTags","tag","getFieldKeyFormat","calcTags","calcCollection","calc","currentElement","initMergeTags","clickMergeTag","addFieldTags","deleteFieldTags","updateCalcTags","updateCurrentElement","updateCurrentSetting","getSectionModel","replaceFieldKey","mergeTagsView","jBoxes","closeOnEsc","maxHeight","onOpen","prev","onClose","tagModel","currentValue","currentPos","caret","newPos","substr","summernote","fieldID","openMergeTags","returnMergeTags","preventDefault","currentModel","upMergeTags","changeActiveTag","downMergeTags","dir","inc","currentIndex","nextModel","userInfo","system","updateOpen","newKey","oldTag","oldKey","_previousAttributes","settingName","oldVal","re","RegExp","newVal","beforeRenderSetting","confirmPublish","order","initSettingModel","destroySetting","meta_image_frame","icons","align","alignCenter","alignJustify","alignLeft","alignRight","indent","outdent","bold","close","code","eraser","italic","link","unlink","magic","minus","orderedlist","redo","square","table","underline","undo","unorderedlist","currentContext","initRTE","linkButton","context","mediaButton","toolbar","codemirror","lineNumbers","callbacks","onBlur","editor","getValue","updateDataModel","prettifyHtml","removeRTE","linkDropdown","buttonGroup","contents","tooltip","clickLinkButton","toggle","dropdown","mergeTagsButton","openMediaManager","invoke","wp","media","frames","text","media_attachment","state","toJSON","insertMedia","range","textEl","urlEl","isNewWindowEl","isNewWindow","filename","editFormText","changeMenu","formPublish","isNewForm","highlightAddNew","appendEditForm","form_id","isNaN","closeMobileMenu","addNotice","closeNotice","notices","appDefaults","color","zIndex","constructOnInit","stack","animation","mobileDefaults","offset","desktopDefaults","openNotice","bind","maybePrompt","viewFilters","saveFilters","loadFilters","addViewFilter","addSaveFilter","addLoadFilter","getViewFilters","getSaveFilters","getLoadFilters","priority","typeModel","settingGroupModel","typeSectionModel","fieldTypeCollection","fieldTypeSettingGroupCollection","fieldTypeSections","fieldTypeData","group","groupTmp","fieldType","alias","parentType","settingDefaults","getFieldType","getTypeCollection","getTypeSections","getSavedFields","addStagedField","startDrag","stopDrag","getCurrentDraggableHelperClone","mainEl","style","setProperty","draggableHelperClone","stagedFields","num","getStagingCollection","sortStagedFields","clearStagedFields","beforeCloseDrawer","now","tmpField","sortableEl","search","pos","addActiveClass","removeActiveClass","receiveStagedFields","overStagedFields","outStagedFields","startStagedFields","stopStagedFields","stagedFieldsEl","currentHelper","helperClone","filtered","filterCollection","toLowerCase","filter","found","receiveFieldsSortable","overfieldsSortable","outFieldsSortable","stopFieldsSortable","startFieldsSortable","updateFieldsSortable","addField","insertedAt","fieldWidth","dragFieldID","dragModel","oldPos","objectDomain","updateFieldKey","tmpNum","removeField","getFieldCollection","getField","getTmpFieldID","deleteField","sortFields","savedType","updateFieldSetting","changeErrors","size","errorsFound","opt","listOptionModel","addOption","ErrorView","columns","renderErrors","hasErrors","keyup","changeOption","deleteOption","keyupOption","maybeAddOption","isEmptyObject","getColumns","renderOptions","column","option","selected","listOptionView","listEmptyView","listOptionCollection","optionCollection","handle","forcePlaceholderSize","renderHeaders","col","renderFieldsetClasses","click .nf-add-new","clickAddOption","listCompositeView","updateOptionSortable","stopOptionSortable","startOptionSortable","triggerDataModel","modelData","new","newOrder","clearEditActive","fieldSettings","getSettingModel","dropCreditCardField","stageCreditCardField","newField","dropField","stageField","field_slug","productFields","getProductFields","addMask","newFieldKey","updateLabel","keyUp","keyExists","changed","setError","slugify","separator","testKey","startWiggle","stopWiggle","initWiggle","updateField","modified","modelClone","fieldData","created_at","formID","newType","newTypeDefaults","typeCollection","typeSections","addDatepicker","pikadayResponsive","settingGroupCollection","actionTypeData","actionType","getType","getInstalledActions","getAvailableActions","actionModel","addAction","removeAction","getAction","getTmpID","deleteAction","actionSettings","dropActionType","type_slug","actionTypeModel","filterActionTypes","newInstalled","newAvailable","defaultFields","clickListUpdate","maybeRenderFields","maybeRenderGroups","registerFieldsListener","registerGroupsListener","updateFieldMapping","updateInterestGroups","updateLists","lists","always","selectedList","list","groups","formSettingTypeData","settingType","settingsModel","getSettings","getSettingCollection","updateCalc","sortCalc","checkName","checkEQ","checkAllCalcs","nameExists","eq","errorSelfRef","errorFutureCalc","calcs","match","calculations","targetCalc","selfRef","futureCalc","Remote","Drawer","DrawerConfig","DomainConfig","AppData","DrawerToggleSettingGroup","UpdateDB","FormData","PreviewLink","AppMenuButtons","AppTrackChanges","AppUndoChanges","AppPublishResponse","AppChangeDomain","Pushstate","Hotkeys","CleanState","CoreUndo","CloneModelDeep","DrawerSettingChildView","ChangeSettingDefault","Fieldset","ToggleSetting","ItemControls","MergeTags","ItemSettingFill","ConfirmPublish","RTE","ChangeMenu","AppMobile","AppNotices","AppUnloadCheck","FieldContentsFilters","FieldTypes","FieldTypeDrag","FieldStagingDrag","StagedFieldsData","StagedFieldsSortable","DrawerFilterFieldTypes","MainContentFieldsSortable","FieldData","OptionRepeater","FieldsEditActive","FieldSettings","FieldCreditCard","FieldPassword","FieldQuantity","FieldShipping","FieldKey","Notices","FieldsMobile","SavedFields","FieldDatepicker","FieldDisplayCalc","ActionTypes","ActionData","ActionSettings","ActionEditActive","ActionAddTypes","ActionTypeDrag","ActionDroppable","ActionFilterTypes","ActionNewsletterList","SettingTypes","SettingData","FormSettings","SettingsEditActive","SettingsClickEdit","AdvancedCalculations","fieldItemView","getFieldItem","Radio","ready","$","BuilderView","LoadControllers","LoadViews","NinjaForms","Application","onStart","ninjaForms"],"mappings":"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CA,8BACA,0BACA,iCACA,gCACA,mCACA,qCACA,mCACA,mCACA,mCACA,yBACA,6BACA,4BACA,iCACA,qCACA,sCAKA,4BACA,2BACA,qCACA,iCACA,qCACA,+BACA,gCACA,kCACA,qCAKA,6BACA,4BACA,oCACA,kCACA,iCACA,qCAEA,SAIA+jC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAGA,GAAAj3B,IAAAtL,WAAA7B,OAAA+B,QACAG,WAAA,WAIA,GAAA6+B,GACA,GAAAf,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAE,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAK,GACA,GAAAG,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAQA,GAAAX,GACA,GAAAoB,GAEA,GAAAR,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAnB,GACA,GAAAE,GACA,GAAAH,GACA,GAAAuB,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GACA,GAAAC,GAIA,GAAAS,IACA,GAAAR,IACA,GAAAC,IACA,GAAAC,IACA,GAAAC,IACA,GAAAC,IACA,GAAAC,IACA,GAAAC,IACA,GAAAC,IAIA,GAAAE,IACA,GAAAE,IACA,GAAAD,IACA,GAAAE,IACA,GAAAC,IACA,GAAAC,IAKA,GAAAhE,GACA,GAAAoC,GACA,GAAAjC,GACA,GAAAiB,GACA,GAAAC,KAIA,OAAAt0B,MCvQAlR,EAAA,mBAAA,0BAAA,SAAAooC,GACA,GAAAl3B,GAAAtL,WAAA7B,OAAA+B,QACAG,WAAA,WAEAG,EAAAC,QAAA,SAAA+E,MAAA,gBAAAlF,KAAAmiC,eAGAA,aAAA,SAAA9hC,GACA,MAAA6hC,KAKA,OAAAl3B,IAEA,IAAA9K,GAAAkH,SAAAg7B,KCtBA5iC,QAAA2kB,UAAAke,MAAA,SAAAC,GACAzoC,GAAA,oBAAA,8BAAA,mBAAA,SAAA0oC,EAAAC,EAAAC,GAEA,GAAAC,GAAAhjC,WAAAijC,YAAA/iC,QAEAG,WAAA,SAAAgL,GAEA7K,EAAAC,QAAA,OAAAY,QAAA,yBAAAf,KAEA,IAAAwiC,EAEAtiC,GAAAC,QAAA,OAAAY,QAAA,wBAAAf,MAGAE,EAAAC,QAAA,OAAAY,QAAA,mBAAAf,KACA,IAAAyiC,EAEAviC,GAAAC,QAAA,OAAAY,QAAA,kBAAAf,OAGA4iC,QAAA,WACA,GAAAL,EAEAriC,GAAAC,QAAA,OAAAY,QAAA,iBAAAf,SAIA6iC,EAAA,GAAAH,EACAG,GAAA7zB,YAGAlV,EAAA,OAAA;ApK5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjbpIA,ADqIA;ACplEA,ADmEA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA,ADkDA;ACjhBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA,AD0CA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;AClzGA,AD0GA;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA,AD4DA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtIA,ADuIA;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA,AD+EA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA,ADaA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA,ADmDA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA,ADYA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA,AD4CA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfpSA,ADqSA;ACpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA,ADgBA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA,AD+BA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA,ADuFA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA,ADoFA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjjDA,ADkDA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA,ADoCA;ACnpBA,ADqBA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA,ADwEA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA,ADmBA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClxEA,ADyEA;ACxpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3FA,AD4FA;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxrCA,ADsCA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1FA,AD2FA;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnlUA,ADmUA;AClUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzSA,AD0SA;ACzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbtIA,ADuIA;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvprIA,ADsIA;ACrttTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA,ADoEA;ACnnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA,AD2DA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjnHA,ADoHA;ACnjQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxxnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA,ADqBA;ACpvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA,ADqCA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA,AD8CA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjGA,ADkGA;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADgEA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA,ADiDA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA,ADgCA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACznRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA,ADwBA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"builder.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-menu-item',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t// Listen for clicks on our app menu.\n\t\tevents: {\n\t\t\t'click a': 'clickAppMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click on a menu item, fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * We pass this.model so that we know what item was clicked.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\te event\n\t\t * @return return\n\t\t */\n\t\tclickAppMenu: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e, this.model );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t\t\t\t * If we have any dashicons in our model, render them.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDashicons: function() {\n\t\t\t\t\tif ( this.dashicons ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons ' + this.dashicons + '\"></span>'\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Render classes for our menu item, including active.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\t\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tif ( currentDomain.get( 'id' ) == this.id ) {\n\t\t\t\t\t\tclasses += ' active';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its url.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderUrl: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t\t\t\treturn this.url + formModel.get( 'id' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '#';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its target.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderTarget: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn '_blank';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '_self';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * If our menu item is disabled, output 'disabled'\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\tif ( this.disabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Collection view that takes our app menu items and renders an individual view for each.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menu',['views/app/menuItem'], function( appMenuItemView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: appMenuItemView,\n\n\t\t/**\n\t\t * When we show this view, get rid of the extra <div> tag added by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( 'li:last' ).unwrap();\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders the action buttons to the right of the app menu. i.e. Publish\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/menuButtons',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'span',\n\t\ttemplate: '#nf-tmpl-app-header-action-button',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:loading', this.render, this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.bounceIcon, this );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\t/**\n\t    \t\t * Render our Publish button. If we're loading, render the loading version.\n\t    \t\t *\n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\trenderPublish: function() {\n\t    \t\t\tif ( that.publishWidth ) {\n\t    \t\t\t\tthis.publishWidth = 'style=\"width:' + that.publishWidth + 'px !important\"';\n\t    \t\t\t} else {\n\t    \t\t\t\tthis.publishWidth = '';\n\t    \t\t\t}\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'loading' ) ) {\n\t    \t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-add-header-publish-loading' ).html() );\n\t    \t\t\t} else {\n\t    \t\t\t\tvar template = _.template( jQuery( '#nf-tmpl-app-header-publish-button' ).html() );\n\t    \t\t\t}\n\t    \t\t\treturn template( this );\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app state is clean, disable publish.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\t/**\n\t    \t\t * If our app isn't clean, render our 'viewChanges' button.\n\t    \t\t * @since  version\n\t    \t\t * @return {[type]} [description]\n\t    \t\t */\n\t    \t\tmaybeRenderCancel: function() {\n\t    \t\t\tif ( ! nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\tvar viewChanges = _.template( jQuery( '#nf-tmpl-app-header-view-changes' ).html() );\n\t    \t\t\t\treturn viewChanges( this );\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar publishEL = jQuery( this.el ).find( '.publish' );\n\t\t\t// this.publishWidth = jQuery( publishEL ).outerWidth( true );\n\t\t},\n\n\t\t/**\n\t\t * Listen for clicks on the Publish or view changes button.\n\t\t * @type {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click .publish': 'clickPublish',\n\t\t\t'click .viewChanges': 'clickViewChanges'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:publish', e );\n\t\t},\n\n\t\t/**\n\t\t * When we click view changes, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickViewChanges: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:viewChanges', e );\n\t\t},\n\n\t\tbounceIcon: function( changeModel ) {\n\t\t\tjQuery( this.el ).find( '.dashicons-backup' ).effect( 'bounce', { times: 3 }, 600 );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders the action buttons to the right of the app menu. i.e. Publish\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/mobileMenuButton',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'span',\n\t\ttemplate: '#nf-tmpl-mobile-menu-button',\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\t/**\n\t    \t\t * If our app state is clean, disable button.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Listen for clicks on the mobile menu button.\n\t\t * @type {Object}\n\t\t */\n\t\tevents: {\n\t\t\t'click .nf-mobile-menu': 'clickMobileMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickMobileMenu: function( e) {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).toggleClass( 'nf-menu-expand' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main application header. Includes links to all of our domains.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/header',['views/app/menu', 'views/app/menuButtons', 'views/app/mobileMenuButton'], function( appMenuCollectionView, appMenuButtonsView, mobileMenuButtonView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-app-header',\n\n\t\tregions: {\n\t\t\t// Menu is our main app menu.\n\t\t\tmenu: '.nf-app-menu',\n\t\t\t// Buttons represents the 'view changes' and 'Publish' buttons.\n\t\t\tbuttons: '.nf-app-buttons',\n\t\t\tmobileMenuButton: '.nf-mobile-menu-button'\n\t\t},\n\n\t\t/**\n\t\t * Since this is a layout region, we need to fill the two areas: menu and buttons whenever we show this view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// Get our domains\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// show the menu area using the appropriate view, passing our domain collection.\n\t\t\tthis.menu.show( new appMenuCollectionView( { collection: appDomainCollection } ) );\n\t\t\tthis.buttons.show( new appMenuButtonsView() );\n\t\t\tthis.mobileMenuButton.show( new mobileMenuButtonView() );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click #nf-logo': 'clickLogo'\n\t\t},\n\n\t\tclickLogo: function( e ) {\n\t\t\t\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Renders our sub-header. i.e. add new field, add new action, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our form title.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/formTitle',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-header-form-title',\n\n\t\tinitialize: function() {\n\t\t\t// When we change the model (to disable it, for example), re-render.\n\t\t\tthis.model.on( 'change:title', this.render, this );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderTitle: function(){\n\t    \t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t    \t\t\treturn formData.get( 'settings' ).get( 'title' );\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our builder header.\n *\n * This is a layout view and handles two regions:\n * app - menu/buttons\n * subapp - title, add new field, etc.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builderHeader',['views/app/header', 'views/app/subHeader', 'views/app/formTitle'], function( appHeaderView, appSubHeaderView, formTitleView ) {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: \"div\",\n\t\ttemplate: \"#nf-tmpl-header\",\n\n\t\tregions: {\n\t\t\tapp: \"#nf-app-header\",\n\t\t\tformTitle: \"#nf-app-form-title\",\n\t\t\tappSub: \"#nf-app-sub-header\"\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changeSubHeader );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.app.show( new appHeaderView() );\n\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tvar formSettings = formData.get( 'settings' );\n\t\t\tthis.formTitle.show( new formTitleView( { model: formSettings } ) );\n\n\t\t\tthis.changeSubHeader();\n\t\t},\n\n\t\tchangeSubHeader: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar subHeaderView = currentDomain.get( 'getSubHeaderView' ).call( currentDomain );\n\t\t\tthis.appSub.show( subHeaderView );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/main',[], function() {\n\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main',\n\n\t\tregions: {\n\t\t\theader: '#nf-main-header',\n\t\t\tcontent: '#nf-main-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:mainEl', this.getMainEl, this );\n\t\t\t\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'cancel:changes', this.render );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t\t\tjQuery( this.el ).parent().disableSelection();\n\t\t\t}\n\t\t\tnfRadio.channel( 'main' ).trigger( 'show:main' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t// var headerView = currentDomain.get( 'getMainHeaderView' ).call( currentDomain );\n\t\t\t// this.header.show( headerView );\n\t\t\tvar contentView = currentDomain.get( 'getMainContentView' ).call( currentDomain );\n\t\t\tthis.content.show( contentView );\n\n\t\t\tnfRadio.channel( 'main' ).trigger( 'render:main' );\n\t\t},\n\n\t\tgetMainEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/mobileMenuItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mobile-menu-item',\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\t// Listen for clicks on our app menu.\n\t\tevents: {\n\t\t\t'click a': 'clickAppMenu'\n\t\t},\n\n\t\t/**\n\t\t * When we click on a menu item, fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * We pass this.model so that we know what item was clicked.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\te event\n\t\t * @return return\n\t\t */\n\t\tclickAppMenu: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e, this.model );\n\t\t},\n\n\t\t/**\n\t\t * These functions are available to templates, and help us to remove logic from template files.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t\t\t\t * If we have any dashicons in our model, render them.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDashicons: function() {\n\t\t\t\t\tif ( this.mobileDashicon ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons ' + this.mobileDashicon + '\"></span>'\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * Render classes for our menu item, including active.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = this.classes;\n\t\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tif ( currentDomain.get( 'id' ) == this.id ) {\n\t\t\t\t\t\tclasses += ' active';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its url.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderUrl: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t\t\t\treturn this.url + formModel.get( 'id' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '#';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * If our menu is a link (like preview), render its target.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderTarget: function() {\n\t\t\t\t\tif ( '' != this.url ) {\n\t\t\t\t\t\treturn '_blank';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '_self';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * If our menu item is disabled, output 'disabled'\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @return string\n\t\t\t\t */\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\tif ( this.disabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Single item view used for the menu drawer.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/mobileMenu',['views/app/mobileMenuItem'], function( mobileMenuItemView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mobile-menu',\n\t\tchildView: mobileMenuItemView,\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes on the app 'clean' state. When it changes, re-render.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.render, this );\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.secondary' ).append( childView.el );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\t/**\n\t    \t\t * If our app state is clean, disable button.\n\t    \t\t * \n\t    \t\t * @since  3.0\n\t    \t\t * @return string\n\t    \t\t */\n\t    \t\tmaybeDisabled: function() {\n\t    \t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t    \t\t\t\treturn 'disabled';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-publish': 'clickPublish'\n\t\t},\n\n\t\t/**\n\t\t * When we click publish, trigger a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:publish', e );\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).toggleClass( 'nf-menu-expand' );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","/**\n * Empty drawer content view.\n * Called before we close the drawer.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-empty'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders our drawer region\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer',['views/app/drawer/contentEmpty'], function( drawerEmptyView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer',\n\n\t\tregions: {\n\t\t\theader: '#nf-drawer-header',\n\t\t\tcontent: '#nf-drawer-content',\n\t\t\tfooter: '#nf-drawer-footer'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerEl', this.getEl, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'load:drawerContent', this.loadContent, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'empty:drawerContent', this.emptyContent, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( this.el ).parent().perfectScrollbar();\n\t\t\t}\n\t\t    // jQuery( this.el ).parent().disableSelection();\n\t\t},\n\n\t\tloadContent: function( drawerID, data ) {\n\t\t\tvar drawer = nfRadio.channel( 'app' ).request( 'get:drawer', drawerID );\n\t\t\tvar contentView = drawer.get( 'getContentView' ).call( drawer, data );\n\t\t\tvar headerView = drawer.get( 'getHeaderView' ).call( drawer, data );\n\t\t\tvar footerView = drawer.get( 'getFooterView' ).call( drawer, data );\n\n\t\t\tthis.header.show( headerView );\n\t\t\tthis.content.show( contentView );\n\t\t\tthis.footer.show( footerView );\n\n\t\t},\n\n\t\temptyContent: function() {\n\t\t\tthis.header.empty();\n\t\t\tthis.content.empty();\n\t\t\tthis.footer.empty();\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-toggle-drawer': 'clickToggleDrawer'\n\t\t},\n\n\t\tclickToggleDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:toggleDrawerSize' );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Single item view used for merge tags.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'li',\n\n\t\ttemplate: '#nf-tmpl-merge-tags-item',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:active', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:active', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click a': 'clickTag'\n\t\t},\n\n\t\tclickTag: function( e ) {\n\t\t\tnfRadio.channel( 'mergeTags' ).trigger( 'click:mergeTag', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tif ( this.active ) {\n\t\t\t\t\t\treturn 'active';\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Merge tags popup section\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsSection',['views/app/drawer/mergeTagItem'], function( mergeTagItemView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttagName: 'div',\n\t\tchildView: mergeTagItemView,\n\t\ttemplate: '#nf-tmpl-merge-tags-section',\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = this.model.get( 'tags' );\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\t// var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t// fieldCollection.on( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( 'fields' == this.model.get( 'id' ) ) {\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tfieldCollection.off( 'all', this.updateFields, this );\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.merge-tags' ).append( childView.el );\n\t\t},\n\n\t\tupdateFields: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.model.set( 'tags', fieldCollection );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Model that represents our merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tactive: false,\n\t\t\texclude: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/mergeTagCollection',['models/app/mergeTagModel'], function( mergeTagModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: mergeTagModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Merge tags popup\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/mergeTagsContent',['views/app/drawer/mergeTagsSection', 'models/app/mergeTagCollection'], function( mergeTagsSectionView, MergeTagCollection ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-merge-tags-content',\n\t\tchildView: mergeTagsSectionView,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:view', this.getMergeTagsView, this );\n\t\t},\n\n\t\treRender: function( settingModel ) {\n\t\t\tvar mergeTagCollection = nfRadio.channel( 'mergeTags' ).request( 'get:collection' );\n\t\t\tvar defaultGroups = mergeTagCollection.where( { default_group: true } );\n\t\t\tthis.collection = new MergeTagCollection( defaultGroups );\n\t\t\tvar that = this;\n\t\t\tvar useMergeTags = settingModel.get( 'use_merge_tags' );\n\t\t\tif ( 'object' == typeof useMergeTags ) {\n\t\t\t\tif ( 'undefined' != typeof useMergeTags.exclude ) {\n\t\t\t\t\t_.each( useMergeTags.exclude, function( exclude ) {\n\t\t\t\t\t\tthat.collection.remove( exclude );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tif ( 'undefined' != typeof useMergeTags.include ) {\n\t\t\t\t\t_.each( mergeTagCollection.models, function( sectionModel ) {\n\t\t\t\t\t\tif ( -1 != useMergeTags.include.indexOf( sectionModel.get( 'id' ) ) ) {\n\t\t\t\t\t\t\t// console.log( sectionModel );\n\t\t\t\t\t\t\tthat.collection.add( sectionModel );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\n\t\tgetMergeTagsView: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Builder view.\n *\n * This layout view has regions that represent our application areas:\n * header\n * main\n * menuDrawer - Mobile side-menu\n * drawer\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/builder',['views/app/builderHeader', 'views/app/main', 'views/app/mobileMenu', 'views/app/drawer', 'views/app/drawer/mergeTagsContent'], function( headerView, mainView, mobileMenuView, drawerView, mergeTagsContentView ) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: \"#nf-tmpl-builder\",\n\t\tel: '#nf-builder',\n\n\t\tregions: {\n\t\t\theader: \"#nf-header\",\n\t\t\tmain: \"#nf-main\",\n\t\t\tmenuDrawer: \"#nf-menu-drawer\",\n\t\t\tdrawer: \"#nf-drawer\",\n\t\t\tmergeTagsContent: '.merge-tags-content'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Respond to requests asking for the builder dom element.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:builderEl', this.getBuilderEl, this );\n\t\t\t// Respond to requests asking for the builder view\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:builderView', this.getBuilderView, this );\n\t\t\t// Layout views aren't self-rendering.\n\t\t\tthis.render();\n\t\t\tvar mergeTags = nfRadio.channel( 'mergeTags' ).request( 'get:collection' );\n\t\t\tvar mergeTagsClone = mergeTags.clone();\n\t\t\tthis.mergeTagsContent.show( new mergeTagsContentView( { collection: mergeTagsClone } ) );\n\t\t\t// Show our header.\n\t\t\tthis.header.show( new headerView() );\n\t\t\t// Show our main content.\n\t\t\tthis.main.show( new mainView() );\n\t\t\t// Show our mobile menu\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tthis.menuDrawer.show( new mobileMenuView( { collection: appDomainCollection } ) );\n\t\t\t// Show our drawer.\n\t\t\tthis.drawer.show( new drawerView() );\n\n\t\t\t\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t\n\t\t},\n\n\t\tgetBuilderEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n\t\tgetBuilderView: function() {\n\t\t\treturn this;\n\t\t},\n\n\t\t// Listen for clicks\n\t\tevents: {\n\t\t\t'click .nf-open-drawer': 'openDrawer',\n\t\t\t'click .nf-change-domain': 'changeDomain',\n\t\t\t'click .nf-close-drawer': 'closeDrawer'\n\t\t},\n\n\t\t/**\n\t\t * Someone clicked to open a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:openDrawer', e );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to close a drawer, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:closeDrawer' );\n\t\t},\n\t\t/**\n\t\t * Someone clicked to change the domain, so fire a radio event.\n\t\t * This lets us separate the logic from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te \tevent\n\t\t * @return void\n\t\t */\n\t\tchangeDomain: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:menu', e );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","\ndefine( 'controllers/app/remote',[], function() {\n    return Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'setting' ), 'remote', this.addListener );\n        },\n\n        addListener: function( model, dataModel ) {\n\n            var listenTo = model.get( 'remote' ).listen;\n\n            // TODO: Change seems to be triggering twice on each update.\n            this.listenTo( nfRadio.channel( 'fieldSetting-' + listenTo ), 'update:setting', this.updateSetting );\n            this.listenTo( nfRadio.channel( 'actionSetting-' + listenTo ), 'update:setting', this.updateSetting );\n\n            this.listenTo( nfRadio.channel( 'setting-type-' + model.get( 'type' ) ), 'click:extra', this.clickExtra );\n\n            model.listenTo( nfRadio.channel( 'setting-remote' ), 'get:remote', this.getRemote, model );\n\n            // Auto-trigger get:remote on drawer load.\n            nfRadio.channel( 'setting-remote' ).trigger( 'get:remote', dataModel );\n        },\n\n        clickExtra: function( e, settingModel, dataModel, settingView ) {\n            jQuery( e.srcElement ).addClass( 'spin' );\n            nfRadio.channel( 'setting-remote' ).trigger( 'get:remote', dataModel );\n        },\n\n        updateSetting: function( dataModel, settingModel ) {\n            nfRadio.channel( 'setting-remote' ).trigger( 'get:remote', dataModel );\n        },\n\n        getRemote: function( dataModel ) {\n\n            var remote = this.get( 'remote' );\n\n            var data = {\n                parentValue: dataModel.get( remote.listen ),\n                action: remote.action,\n                security: ( remote.security ) ? remote.security : nfAdmin.ajaxNonce\n            };\n\n            // TODO: Disable setting and lock drawer while updating.\n            var that = this;\n            jQuery.post( ajaxurl, data, function( response ){\n                var response = JSON.parse( response );\n\n                if( 'textbox' == that.get( 'type' ) ) {\n                    dataModel.set( that.get('name'), response.value );\n                }\n\n                if( 'select' == that.get( 'type' ) ) {\n                    that.set( 'options', response.options );\n                    that.trigger( 'rerender' );\n                }\n            });\n        },\n\n    });\n} );\n","/**\n * Handles opening and closing our drawer. This is where we display settings for fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawer',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our drawer-related click events.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:openDrawer', this.clickOpenDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:closeDrawer', this.closeDrawer );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:toggleDrawerSize', this.toggleDrawerSize );\n\n\t\t\t// Reply to direct requests to open or close the drawer.\n\t\t\tnfRadio.channel( 'app' ).reply( 'open:drawer', this.openDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'close:drawer', this.closeDrawer, this );\n\n\t\t\t/*\n\t\t\t * When we close the drawer, we have to figure out what the right position should be.\n\t\t\t * This listens to requests from other parts of our app asking what the closed right position is.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:closedRightPos', this.getClosedDrawerPos, this );\n\t\t\t\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'prevent:close', this.preventClose, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'enable:close', this.enableClose, this );\n\t\t\t// Reply to requests for our disabled/enabled state.\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:preventClose', this.maybePreventClose, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent close' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventClose = {};\n\n\t\t\t/*\n\t\t\t *  Listen to focus events on the filter and stop our interval when it happens.\n\t\t\t *  This is to fix a bug that can cause the filter to gain focus every few seconds.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:focused', this.filterFocused );\n\t\t},\n\n\t\t/**\n\t\t * Handles closing our drawer\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tcloseDrawer: function() {\n\t\t\t// Get our current domain.\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tif ( ! currentDrawer || this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Triggers the before close drawer action on our current domain's drawer channel.\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'before:closeDrawer' );\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'before:closeDrawer' );\n\t\t\t\n\t\t\t// Send a message to our drawer to empty its contents.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'empty:drawerContent' );\n\n\t\t\t// To close our drawer, we have to add our closed class to the builder and remove the opened class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-closed' ).removeClass( 'nf-drawer-opened' );\n\t\t\tjQuery( builderEl ).removeClass( 'disable-main' );\n\n\t\t\t// Get the right position of our closed drawer. Should be container size in -px.\n\t\t\tvar rightClosed = this.getClosedDrawerPos();\n\n\t\t\t// Get our drawer element and give change the 'right' property to our closed position.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': rightClosed } );\n\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've closed the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is closed, we:\n\t\t\t * clear our interval\n\t\t\t * request that the app change it's current drawer to false\n\t\t\t * trigger a drawer closed message\n\t\t\t */\n\t\t\tthis.checkCloseDrawerPos = setInterval( function() {\n\t        \tif ( rightClosed == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkCloseDrawerPos );\n\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', false );\n\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'closed' );\n\t\t    \t\t// jQuery( drawerEl ).scrollTop( 0 );\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Click handler for our 'open drawer' event.\n\t\t * @since  3.0\n\t\t * @param  e jQuery event\n\t\t * @return void\n\t\t */\n\t\tclickOpenDrawer: function( e ) {\n\t\t\tvar drawerID = jQuery( e.target ).data( 'drawerid' );\n\t\t\tthis.openDrawer( drawerID );\n\t\t},\n\n\t\t/**\n\t\t * Open our drawer.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string drawerID \tID of the drawer we want to open.\n\t\t * @param  object data     \tOptional data that we want to pass to the drawer.\n\t\t * @return void\n\t\t */\n\t\topenDrawer: function( drawerID, data ) {\n\t\t\tif ( this.maybePreventClose() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If we haven't sent a data object, set the variable to an empty object.\n\t\t\tdata = data || {};\n\n\t\t\t/*\n\t\t\t * If we're dealing with something that has a model, set the proper active state.\n\t\t\t *\n\t\t\t * TODO: Make this more dynamic. I'm not sure that it fits in the drawer controller.\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof data.model ) {\n\t\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\t\tnfRadio.channel( currentDomainID ).request( 'clear:editActive' );\n\t\t\t\tdata.model.set( 'editActive', true );\n\t\t\t\tthis.dataModel = data.model;\n\t\t\t}\n\n\t\t\t// Send out a message requesting our drawer view to load the content for our drawer ID.\n\t\t\tnfRadio.channel( 'drawer' ).request( 'load:drawerContent', drawerID, data );\n\n\t\t\t// To open our drawer, we have to add our opened class to our builder element and remove the closed class.\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).addClass( 'nf-drawer-opened' ).removeClass( 'nf-drawer-closed' );\n\t\t\t\n\t\t\t// To open our drawer, we have to set the right position of our drawer to 0px.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).css( { 'right': '0px' } );\n\t\t\t\n\t\t\t// In order to access properties in 'this' context in our interval below, we have to set it here.\t\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Since jQuery can't bind to a CSS change, we poll every .15 seconds to see if we've opened the drawer.\n\t\t\t *\n\t\t\t * Once our drawer is opened, we:\n\t\t\t * clear our interval\n\t\t\t * focus our filter\n\t\t\t * request that the app update its current drawer to the one we opened\n\t\t\t * trigger a drawer opened message\n\t\t\t */\n\t\t\tthis.hasFocus = false;\n\n\t\t\tthis.checkOpenDrawerPos = setInterval( function() {\n\t        \tif ( '0px' == jQuery( drawerEl ).css( 'right' ) ) {\n\t        \t\tclearInterval( that.checkOpenDrawerPos );\n\t\t\t\t\tif ( ! that.hasFocus ) {\n\t\t        \t\tthat.focusFilter();\n\t\t\t\t\t\tthat.hasFocus = true;\n\t\t\t    \t\tnfRadio.channel( 'app' ).request( 'update:currentDrawer', drawerID );\n\t\t\t    \t\t// jQuery( drawerEl ).scrollTop( 0 );\n\t\t\t    \t\tnfRadio.channel( 'drawer' ).trigger( 'opened' );\n\t\t\t\t\t}   \t\t\n\t        \t}\n\t\t\t}, 150 );\n\t\t},\n\n\t\t/**\n\t\t * Toggle the drawer from half to full screen and vise-versa\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\ttoggleDrawerSize: function() {\n\t\t\t// Get our drawer element.\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\t// toggle our drawer size class.\n\t\t\tjQuery( drawerEl ).toggleClass( 'nf-drawer-expand' );\n\t\t},\n\n\t\t/**\n\t\t * Focus our filter\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        focusFilter: function() {\n        \t// Get our filter element\n        \tvar filterEl = nfRadio.channel( 'drawer' ).request( 'get:filterEl' );\n        \t// Focus\n        \tjQuery( filterEl ).focus();\n        },\n\n        /**\n         * Get the CSS right position (in px) of the closed drawer element.\n         * This is calculated by:\n         * getting the width of the builder element\n         * add 300 pixels\n         * make it negative\n         * \n         * @since  3.0\n         * @return void\n         */\n        getClosedDrawerPos: function() {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tvar closedPos = jQuery( builderEl ).width() + 300;\n\t\t\treturn '-' + closedPos + 'px';\n        },\n\n        /**\n         * Check to see if anything has registered a prevent close key.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventClose: function() {\n        \tif ( 0 == Object.keys( this.objPreventClose ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        preventClose: function( key ) {\n        \tthis.objPreventClose[ key ] = true;\n        \t/*\n        \t * When we disable closing the drawer, add the disable class.\n        \t */\n        \t// Get our current drawer.\n\t\t\tthis.dataModel.set( 'drawerDisabled', true );\n        },\n\n        /**\n         * Remove a previously registered prevent close key.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent close' setting.\n         * @return void\n         */\n        enableClose: function( key ) {\n        \tdelete this.objPreventClose[ key ];\n        \t /*\n        \t * When we remove all of our disables preventing closing the drawer, remove the disable class.\n        \t */\n        \tif ( ! this.maybePreventClose() ) {\n\t        \t// Get our current drawer.\n\t\t\t\tthis.dataModel.set( 'drawerDisabled', false );        \t\t\n        \t}\n        },\n\n        /**\n         * When we focus our filter, make sure that our open drawer interval is cleared.\n         * \n         * @since  3.0\n         * @return void\n         */\n        filterFocused: function() {\n        \tclearInterval( this.checkOpenDrawerPos );\n        },\n\n        getPreventClose: function() {\n        \treturn this.objPreventClose;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Default drawer header.\n *\n * Includes our filter/search and 'Done' button.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerDefault',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-default',\n\n\t\tinitialize: function() {\n\t\t\tif ( this.model ) {\n\t\t\t\t// Listen for our drawer being disabled.\n\t\t\t\tthis.model.on( 'change:drawerDisabled', this.render, this );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When we render, remove the extra div added by backbone and add listeners related to our filter.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// Remove extra wrapping div.\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t// Respond to requests related to our filter.\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'clear:filter', this.clearFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'blur:filter', this.blurFilter, this );\n\t\t\tnfRadio.channel( 'drawer' ).reply( 'get:filterEl', this.getEl, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( this.model ) {\n\t\t\t\tthis.model.off( 'change:drawerDisabled', this.render );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'keyup .nf-filter'\t: 'maybeChangeFilter',\n\t\t\t'input .nf-filter'\t: 'changeFilter',\n\t\t\t'focus input'\t\t: 'getFocus'\n\t\t},\n\n\t\t/**\n\t\t * When the filter text is changed, trigger an event on our current drawer.\n\t\t * This lets us keep the logic separate from the click event and view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tchangeFilter: function( e ) {\n\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\tnfRadio.channel( 'drawer-' + currentDrawer.get( 'id' ) ).trigger( 'change:filter', e.target.value, e );\n\t\t},\n\n\t\t/**\n\t\t * The user pressed a key. If it's the enter key, then run the change filter function.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te event\n\t\t * @return void\n\t\t */\n\t\tmaybeChangeFilter: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\te.addObject = true;\n\t\t\t\tthis.changeFilter( e );\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Clear our filter.\n\t\t *\n\t\t * This triggers 'input' on the field, which will trigger a change if necessary.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tclearFilter: function() {\n\t\t\tvar filterEl =  jQuery( this.el ).find( '.nf-filter' );\n\t\t\tif ( '' != jQuery.trim( filterEl.val() ) ) {\n\t\t\t\tfilterEl.val('');\n\t\t\t\tfilterEl.trigger( 'input' );\n\t\t\t\tfilterEl.focus();\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Fire the 'blur' event on our filter. Used to force a change event when the user tabs.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tblurFilter: function() {\n\t\t\tjQuery( this.el ).find( '.nf-filter' ).blur();\n\t\t},\n\n\t\t/**\n\t\t * Return our filter dom element.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return Object\n\t\t */\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).find( '.nf-filter' );\n\t\t},\n\n\t\tgetFocus: function() {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'filter:focused' );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\t// Get our current domain.\n\t\t\t\t\tif ( this.drawerDisabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Default drawer footer\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/footerDefault',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-empty'\n\t});\n\n\treturn view;\n} );\n","define( 'models/app/drawerModel',['views/app/drawer/headerDefault', 'views/app/drawer/footerDefault'], function( defaultHeaderView, defaultFooterView ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tgetHeaderView: function( data ) {\n\t\t\t\treturn new defaultHeaderView( data );\n\t\t\t},\n\n\t\t\tgetFooterView: function( data ) {\n\t\t\t\treturn new defaultFooterView( data );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds all of our drawer models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/drawerCollection',['models/app/drawerModel'], function( drawerModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: drawerModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/stagedField',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-field',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .dashicons-dismiss': 'removeStagedField'\n\t\t},\n\n\t\tremoveStagedField: function( el ) {\n\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'click:removeStagedField', el, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/stagingEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-staged-fields-empty',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/stagingCollection',['views/fields/drawer/stagedField', 'views/fields/drawer/stagingEmpty'], function( stagedFieldView, stagedFieldsEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: stagedFieldView,\n\t\temptyView: stagedFieldsEmptyView,\n\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:stagedFieldsEl', this.getStagedFieldsEl, this );\n\t\t},\n\n\t\tonShow: function() {\n\n\t\t\tthis.$el = jQuery( this.el ).parent();\n\t\t\tjQuery( this.$el ).find( 'span:first' ).unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tvar that = this;\n\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\tplaceholder: 'nf-staged-fields-sortable-placeholder',\n\t\t\t\thelper: 'clone',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'over:stagedFields', e, ui );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'out:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'receive:stagedFields', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'start:stagedFields', ui );\n\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stop:stagedFields', ui );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tjQuery( this.el ).parent().draggable( {\n\t\t\t\topacity: 0.9,\n\t\t\t\tconnectToSortable: '.nf-fields-sortable',\n\n\t\t\t\thelper: function( e ) {\n\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\treturn element;\n\t\t\t\t},\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:fieldStaging', this, ui );\n\t\t\t\t},\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:fieldStaging', this, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tgetStagedFieldsEl: function() {\n\t\t\treturn jQuery( this.el );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model for our staged field.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of staged fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/stagingCollection',['models/fields/stagingModel'], function( stagingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: stagingModel,\n\t\tcomparator: 'order'\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/drawer/typeSection',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-field-type-section',\n\n\t\tinitialize: function() {\n\t\t\t_.bindAll( this, 'render' );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeSection', this.getTypeSection, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.dragging = false;\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * If we're on a mobile device, we don't want to enable dragging for our field type buttons.\n\t\t\t */\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( this.el ).find( 'div.nf-field-type-draggable' ).draggable( {\n\t\t\t\t\topacity: 0.9,\n\t\t\t\t\ttolerance: 'intersect',\n\t\t\t\t\tscroll: false,\n\t\t\t\t\tconnectToSortable: '.nf-field-type-droppable',\n\n\t\t\t\t\thelper: function( e ) {\n\t\t\t\t\t\tvar width = jQuery( e.target ).parent().width();\n\t\t\t\t\t\tvar height = jQuery( e.target ).parent().height();\n\t\t\t\t\t\tvar element = jQuery( e.target ).parent().clone();\n\t\t\t\t\t\tvar left = width / 4;\n\t\t\t\t\t\tvar top = height / 2;\n\t\t\t\t\t\tjQuery( this ).draggable( 'option', 'cursorAt', { top: top, left: left } );\n\n\t\t\t\t\t\treturn element;\n\t\t\t\t\t},\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t\t}\n\n\t\t\t\t} ).disableSelection();\n\n\t\t\t\tjQuery( this.el ).find( '.nf-item' ).focus( function() {\n\t\t\t    \tjQuery( this ).addClass( 'active' );\n\t\t\t    } ).blur( function() {\n\t\t\t    \tjQuery( this ).removeClass( 'active' );\n\t\t\t    } );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickFieldType',\n\t\t\t'keydown .nf-item': 'maybeClickFieldType',\n\t\t\t'mousedown .nf-item': 'mousedownFieldType'\n\t\t},\n\n\t\tclickFieldType: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:fieldType', e );\n\t\t\t}\n\t\t},\n\n\t\tmousedownFieldType: function( e ) {\n\t\t\tjQuery( e.target).addClass( 'clicked' );\n\t\t\tsetTimeout( function() {\n\t\t\t\tjQuery( e.target ).removeClass( 'clicked' );\n\t\t\t}, 1500 );\n\t\t},\n\n\t\tmaybeClickFieldType: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tthis.clickFieldType( e );\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderFieldTypes: function() {\n\t\t\t        var html = '';\n\t\t\t        var that = this;\n\t\t\t        _.each( this.fieldTypes, function( id ) {\n\t\t\t            var type = nfRadio.channel( 'fields' ).request( 'get:type', id );\n\t\t\t            var nicename = type.get( 'nicename' );\n\t\t\t            var icon = type.get( 'icon' );\n\t\t\t            var renderType = _.template( jQuery( '#nf-tmpl-drawer-field-type-button' ).html() );\n\t\t\t            html += renderType( { id: id, nicename: nicename, icon: icon, type: type, savedField: that.isSavedField } );\n\t\t\t        } );\n\t\t\t        return html;\n\t\t\t\t},\n\n\t\t\t\tisSavedField: function() {\n\t\t\t\t\tif( this.type.get( 'savedField' ) ) {\n\t\t\t\t\t\treturn 'nf-saved';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetTypeSection: function() {\n\t\t\treturn this.el;\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/typeSectionCollection',['views/fields/drawer/typeSection'], function( fieldTypeSectionView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: fieldTypeSectionView,\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).find( '.nf-settings' ).unwrap();\n\t\t\tnfRadio.channel( 'fields' ).request( 'clear:editActive' );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/fields/drawer/addField',['views/fields/drawer/stagingCollection', 'models/fields/stagingCollection', 'views/fields/drawer/typeSectionCollection'], function( drawerStagingView, StagingCollection, fieldTypeSectionCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-field',\n\n\t\tregions: {\n\t\t\tstaging: '#nf-drawer-staging .nf-reservoir',\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:fieldTypes', this.filterFieldTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeFieldTypeFilter );\n\t\t\n\t\t\tthis.savedCollection = nfRadio.channel( 'fields' ).request( 'get:savedFields' );\n\t\t\tthis.primaryCollection = this.savedCollection;\n\n\t\t\tthis.fieldTypeSectionCollection = nfRadio.channel( 'fields' ).request( 'get:typeSections' );\n\t\t\tthis.secondaryCollection = this.fieldTypeSectionCollection;\n\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar stagingCollection = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tthis.staging.show( new drawerStagingView( { collection: stagingCollection } ) );\n\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilterFieldTypes: function( filteredSectionCollection ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.filteredSectionCollection = filteredSectionCollection;\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.filteredSectionCollection } ) );\n\t\t},\n\n\t\tremoveFieldTypeFilter: function () {\n\t\t\tthis.primary.show( new fieldTypeSectionCollectionView( { collection: this.savedCollection } ) );\n\t\t\tthis.secondary.show( new fieldTypeSectionCollectionView( { collection: this.fieldTypeSectionCollection } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingCollection',[], function() {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t},\n\n\t\tgetChildView: function( model ) {\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:settingChildView', model );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroup',['views/app/drawer/itemSettingCollection'], function( itemSettingCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-field-setting-group',\n\t\t\n\t\tregions: {\n\t\t\tsettings: '.nf-field-settings'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.model.on( 'change', this.render, this );\n\t\t\tthis.dataModel = data.dataModel;\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'display' ) ) {\n\t\t\t\tthis.settings.show( new itemSettingCollectionView( { collection: this.model.get( 'settings' ), dataModel: this.dataModel } ) );\n\t\t\t} else {\n\t\t\t\tthis.settings.empty();\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'render:settingGroup', this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .toggle': 'clickToggleGroup'\n\t\t},\n\n\t\tclickToggleGroup: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:toggleSettingGroup', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderLabel: function() {\n\t\t\t\t\tif ( '' != this.label ) {\n\t\t\t\t\t\tvar groupLabel = _.template( jQuery( '#nf-tmpl-drawer-content-edit-setting-group-label' ).html() );\n\t\t\t\t\t\treturn groupLabel( this );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderArrowDir: function() {\n\t\t\t\t\tif ( this.display ) {\n\t\t\t\t\t\treturn 'down';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 'right';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSettingGroupCollection',['views/app/drawer/itemSettingGroup'], function( itemSettingGroupView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\tchildView: itemSettingGroupView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","define( 'views/app/drawer/editSettings',['views/app/drawer/itemSettingGroupCollection'], function( itemSettingGroupCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-settings',\n\n\t\tregions: {\n\t\t\tsettingTitle: '.nf-setting-title',\n\t\t\tsettingGroups: '.nf-setting-groups'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.model;\n\t\t\tthis.groupCollection = data.groupCollection;\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar titleView = currentDomain.get( 'getSettingsTitleView' ).call( currentDomain, { model: this.model } );\n\n\t\t\tthis.settingTitle.show( titleView );\n\t\t\tthis.settingGroups.show( new itemSettingGroupCollectionView( { collection: this.groupCollection, dataModel: this.dataModel } ) );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\tmaybeRenderTitle: function() {\n\t    \t\t\tif ( 'undefined' !== typeof this.type ) {\n\t    \t\t\t\tvar title = _.template( jQuery( '#nf-tmpl-drawer-content-edit-settings-title' ).html() );\n\t    \t\t\t\treturn title( this );\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\n\t    \t\trenderTypeNicename: function() {\n\t    \t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tvar domainID = currentDomain.get( 'id' );\n\t    \t\t\tvar type = nfRadio.channel( domainID ).request( 'get:type', this.type );\n\t    \t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t});\n\n\treturn view;\n} );\n","/**\n * Edit Settings drawer header.\n *\n * Includes our 'Done' button.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerEditSettings',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-edit-settings',\n\n\t\tinitialize: function() {\n\t\t\tif ( this.model ) {\n\t\t\t\t// Listen for our drawer being disabled.\n\t\t\t\tthis.model.on( 'change:drawerDisabled', this.render, this );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tif ( this.model ) {\n\t\t\t\tthis.model.off( 'change:drawerDisabled', this.render );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderDisabled: function() {\n\t\t\t\t\t// Get our current domain.\n\t\t\t\t\tif ( this.drawerDisabled ) {\n\t\t\t\t\t\treturn 'disabled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Button to add an action to the form.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/typeButton',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-action-type-button',\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t\t\n\t\t\tjQuery( this.el ).disableSelection();\n\t\t\t\n\t\t\tif ( 'installed' == this.model.get( 'section') ) {\n\t\t\t\tvar that = this;\n\t\t\t\tjQuery( this.el ).draggable( {\n\t\t\t\t\topacity: 0.9,\n\t\t\t\t\ttolerance: 'intersect',\n\t\t\t\t\tscroll: false,\n\t\t\t\t\thelper: 'clone',\n\n\t\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = true;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'startDrag:type', this, ui );\n\t\t\t\t\t},\n\n\t\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t\tthat.dragging = false;\n\t\t\t\t\t\tnfRadio.channel( 'drawer-addAction' ).trigger( 'stopDrag:type', this, ui );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-item': 'clickAddAction'\n\t\t},\n\n\t\tclickAddAction: function( e ) {\n\t\t\tif ( ! this.dragging ) {\n\t\t\t\tif ( 'installed' == this.model.get( 'section' ) ) { // Is this an installed action?\n\t\t\t\t\tnfRadio.channel( 'actions' ).trigger( 'click:addAction', this.model );\n\t\t\t\t} else { // This isn't an installed action\n\t\t\t\t\twindow.open( this.model.get( 'link' ), '_blank' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-item';\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\tclasses += ' nf-has-img';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'installed' == this.section ) {\n\t\t\t\t\t\tclasses += ' nf-action-type';\n\t\t\t\t\t}\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderStyle: function() {\n\t\t\t\t\tif ( '' != jQuery.trim( this.image ) ) {\n\t\t\t\t\t\treturn \"style=\\\"background-image: url(\" + this.image + \");\\\"\"\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/drawer/typeCollection',['views/actions/drawer/typeButton'], function( actionTypeButtonView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-action-type-section',\n\t\tchildView: actionTypeButtonView,\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\trenderNicename: function() {\n\t\t\t\t\treturn that.collection.nicename;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\treturn that.collection.slug;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.action-types' ).append( childView.el );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Add action drawer.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/drawer/addAction',['views/actions/drawer/typeCollection'], function( actionTypeCollectionView ) {\n\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttemplate: '#nf-tmpl-drawer-content-add-action',\n\n\t\tregions: {\n\t\t\tprimary: '#nf-drawer-primary',\n\t\t\tsecondary: '#nf-drawer-secondary'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'filter:actionTypes', this.filteractionTypes );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'clear:filter', this.removeactionTypeFilter );\n\t\t\n\t\t\tthis.installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n\t\t\tthis.primaryCollection = this.installedActions;\n\n\t\t\tthis.availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n\t\t\tthis.secondaryCollection = this.availableActions;\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.primaryCollection } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.secondaryCollection } ) );\n\t\t},\n\n\t\tgetEl: function() {\n\t\t\treturn jQuery( this.el ).parent();\n\t\t},\n\n\t\tfilteractionTypes: function( filteredInstalled, filteredAvailable ) {\n\t\t\tthis.primary.reset();\n\t\t\tthis.secondary.reset();\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: filteredInstalled } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: filteredAvailable } ) );\n\t\t\t\n\t\t},\n\n\t\tremoveactionTypeFilter: function () {\n\t\t\tthis.primary.show( new actionTypeCollectionView( { collection: this.installedActions } ) );\n\t\t\tthis.secondary.show( new actionTypeCollectionView( { collection: this.availableActions } ) );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n","/**\n * Individual change item.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChangesItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-view-changes-item',\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:disabled', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:disabled', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this element, remove the extra wrapping <div> that backbone creates.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .undoSingle': 'undoSingle'\n\t\t},\n\n\t\tundoSingle: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoSingle', this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Changes collection view.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentViewChanges',['views/app/drawer/contentViewChangesItem'], function( viewChangesItem ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'table',\n        className: 'nf-changes',\n\t\tchildView: viewChangesItem\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Handles clicks on the 'view changes' button in the header.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerViewChanges',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-view-changes',\n\n\t\tevents: {\n\t\t\t'click .undoChanges': 'clickUndoChanges'\n\t\t},\n\n\t\tclickUndoChanges: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:undoChanges' );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Error view used for settings.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/settingError',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-error'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/itemSetting',['views/app/drawer/mergeTagsContent', 'views/app/drawer/settingError'], function( mergeTagsContentView, settingErrorView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\n\t\tregions: {\n\t\t\terror: '.nf-setting-error'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\t/*\n\t\t\t * Send out a request on the setting-type-{type} channel asking if we should render on dataModel change.\n\t\t\t * Defaults to true.\n\t\t\t * This lets specific settings, like RTEs, say that they don't want to be re-rendered when their data model changes.\n\t\t\t */\n\t\t\tvar renderOnChange = ( 'undefined' == typeof nfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).request( 'renderOnChange' ) ) ? true: nfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).request( 'renderOnChange' );\n\t\t\t\n\t\t\tif ( renderOnChange ) {\n\t\t\t\tthis.dataModel.on( 'change:' + this.model.get( 'name' ), this.render, this );\n\t\t\t}\n\n\t\t\tthis.model.on( 'change:error', this.renderError, this );\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\n            var remote = this.model.get( 'remote' );\n\t\t\tif( remote ) {\n\n                if( 'undefined' != typeof remote.refresh || remote.refresh ) {\n                    // Add 'update' icons\n                    var label = this.model.get('label');\n                    this.model.set('label', label + ' <a class=\"extra\"><span class=\"dashicons dashicons-update\"></span></a>');\n                }\n\n\t\t\t\tnfRadio.channel( 'setting' ).trigger( 'remote', this.model, this.dataModel, this );\n\t\t\t\tthis.model.on( 'rerender', this.render, this );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * When our drawer opens, send out a radio message on our setting type channel.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'opened', this.drawerOpened );\n\n\t\t\t/*\n\t\t\t * When our drawer closes, send out a radio message on our setting type channel.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.drawerClosed );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.dataModel.off( 'change:' + this.model.get( 'name' ), this.render );\n\t\t\tthis.model.off( 'change:error', this.renderError );\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( this.model.get( 'remote' ) ) {\n\t\t\t\tthis.model.off( 'rerender', this.render, this );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'destroy:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'destroy:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonBeforeRender: function() {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:renderSetting', this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'before:renderSetting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'before:renderSetting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.mergeTagsContentView = false;\n\t\t\tvar that = this;\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\n\t\t\tjQuery( this.el ).find( '.nf-help' ).each(function() {\n\t\t\t\tvar content = jQuery(this).next('.nf-help-text');\n\t\t\t\tjQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\tcontent: content,\n\t\t\t\t\tmaxWidth: 200,\n\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\tcloseOnClick: true\n\t\t\t\t})\n\t\t    });\n\n\t\t    if ( this.model.get( 'use_merge_tags' ) ) {\n\t\t    \tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\t\t    }\n\n\t\t\t/*\n\t\t\t * Apply Setting Field Masks\n\t\t\t */\n\t\t\tvar mask = this.model.get( 'mask' );\n\n\t\t\tif( typeof mask != \"undefined\" ){\n\n\t\t\t\tvar input = jQuery( this.$el ).find( 'input' );\n\n\t\t\t\tswitch( mask.type ){\n\t\t\t\t\tcase 'numeric':\n\t\t\t\t\t\tinput.autoNumeric({\n\t\t\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\t\t\taDec: decimalPoint\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'currency':\n\t\t\t\t\t\tinput.autoNumeric({\n\t\t\t\t\t\t\taSign: '$', // TODO: Use form setting\n\t\t\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\t\t\taDec: decimalPoint\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'custom':\n\t\t\t\t\t\tif( mask.format ) input.mask( mask.format )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// TODO: Error Logging.\n\t\t\t\t\t\tconsole.log( 'Notice: Mask type of \"' + mask.type + '\" is not supported.' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.renderError();\n\t\t},\n\n\t\tonShow: function() {\t\t\t\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'show:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'show:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonAttach: function() {\t\t\t\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'attach:setting', this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'attach:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\trenderError: function() {\n\t\t\tif ( this.model.get( 'error' ) ) {\n\t\t\t\tjQuery( this.el ).find( '.nf-setting' ).addClass( 'nf-error' );\n\t\t\t\tthis.error.show( new settingErrorView( { model: this.model } ) );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).find( '.nf-setting' ).removeClass( 'nf-error' );\n\t\t\t\tthis.error.empty();\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\n\t    \t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) != this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\n\t    \t\trenderSetting: function(){\n\t    \t\t\tif ( 'undefined' != typeof that.dataModel.get( this.name ) ) {\n\t    \t\t\t\tthis.value = that.dataModel.get( this.name );\n\t    \t\t\t} else if ( 'undefined' == typeof this.value ) {\n\t    \t\t\t\tthis.value = '';\n\t    \t\t\t}\n\n\t\t\t\t\tvar setting = _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html() );\n\n\t\t\t\t\treturn setting( this );\n\t\t\t\t},\n\n\t\t\t\trenderLabelClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\tclasses += ' has-merge-tags';\n\t\t\t\t\t}\n\t\t\t\t\tif ( 'rte' == this.type ) {\n\t\t\t\t\t\tclasses += ' rte';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting ';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += 'nf-' + this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' nf-one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags && ! this.hide_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderPlaceholder: function() {\n\t\t\t\t\tif ( this.placeholder ) {\n\t\t\t\t\t\treturn 'placeholder=\"' + this.placeholder + '\"';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeSetting',\n\t\t\t'keyup .setting': 'keyUpSetting',\n\t\t\t'click .setting': 'clickSetting',\n\t\t\t'click .extra': 'clickExtra'\n\t\t},\n\n\t\tchangeSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:setting', e, this.model, this.dataModel );\n\t\t},\n\n\t\tkeyUpSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'keyup:setting', e, this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'keyup:setting', e, this.model, this.dataModel );\n\t\t},\n\n\t\tclickSetting: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:setting', e, this.model, this.dataModel );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'click:setting', e, this.model, this.dataModel, this );\n\t\t},\n\n\t\tclickExtra: function( e ) {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'click:extra', e, this.model, this.dataModel, this );\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'name' ) ).trigger( 'click:extra', e, this.model, this.dataModel, this );\n\t\t},\n\n\t\tdrawerOpened: function() {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'drawer:opened', this.model, this.dataModel, this );\n\t\t},\n\n\t\tdrawerClosed: function() {\n\t\t\tnfRadio.channel( 'setting-type-' + this.model.get( 'type' ) ).trigger( 'drawer:closed', this.model, this.dataModel, this );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","/**\n * Changes collection view.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/contentNewForm',['views/app/drawer/itemSetting'], function( itemSettingView) {\n\tvar view = Marionette.LayoutView.extend( {\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-new-form',\n\n\t\tregions: {\n\t\t\tformName: '.new-form-name',\n\t\t\tformSubmit: '.new-form-submit'\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar titleSettingModel = nfRadio.channel( 'settings' ).request( 'get:settingModel', 'title' );\n\t\t\tvar addSubmitSettingModel = nfRadio.channel( 'settings' ).request( 'get:settingModel', 'add_submit' );\n\t\t\tvar dataModel = nfRadio.channel( 'settings' ).request( 'get:settings' );\n\t\t\tthis.formName.show( new itemSettingView( { model: titleSettingModel, dataModel: dataModel } ) );\n\t\t\t/*\n\t\t\t * If we don't have any submit buttons on the form, prompt the user to add one on publish.\n\t\t\t */\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tvar submitButtons = fieldCollection.findWhere( { type: 'submit' } );\n\t\t\tif ( 'undefined' == typeof submitButtons ) {\n\t\t\t\tthis.formSubmit.show( new itemSettingView( { model: addSubmitSettingModel, dataModel: dataModel } ) );\n\t\t\t} else {\n\t\t\t\tdataModel.set( 'add_submit', 0 );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .publish': 'clickPublish'\n\t\t},\n\n\t\tclickPublish: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:confirmPublish', e );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n\n","/**\n * Handles clicks on the 'view changes' button in the header.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/headerNewForm',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-header-new-form'\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app drawers.\n *\n * this.collection represents all of our registered drawers.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerConfig',[\n\t'models/app/drawerCollection',\n\t'views/fields/drawer/addField',\n\t'views/app/drawer/editSettings',\n\t'views/app/drawer/headerEditSettings',\n\t'views/actions/drawer/addAction',\n\t'views/app/drawer/contentViewChanges',\n\t'views/app/drawer/headerViewChanges',\n\t'views/app/drawer/contentNewForm',\n\t'views/app/drawer/headerNewForm'\n\t], function(\n\t\tdrawerCollection,\n\t\taddFieldView,\n\t\teditSettingsView,\n\t\teditSettingsHeaderView,\n\t\taddActionView,\n\t\tviewChangesView,\n\t\tviewChangesHeaderView,\n\t\tnewFormView,\n\t\tnewFormHeaderView,\n\t\tmobileItemControlsView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\n\t\t\tthis.collection = new drawerCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'addField',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addFieldView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'addAction',\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new addActionView( data );\n\t\t\t\t\t}\n\t\t\t\t},\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\tid: 'editSettings',\n\n\t\t\t\t\t/*\n\t\t\t\t\t * TODO: Add filtering when editing settings. For now, removing them from settings.\n\t\t\t\t\t */\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new editSettingsHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new editSettingsView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'viewChanges',\n\n\t\t\t\t\t// getHeaderView() is defined by default, but we need to override it for the viewChanges drawer.\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new viewChangesView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'newForm',\n\n\t\t\t\t\t// getHeaderView() is defined by default, but we need to override it for the newForm drawer.\n\t\t\t\t\tgetHeaderView: function( data ) {\n\t\t\t\t\t\treturn new newFormHeaderView( data );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetContentView: function( data ) {\n\t\t\t\t\t\treturn new newFormView( data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t// Listen for requests for our drawer collection.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawerCollection', this.getDrawerCollection, this );\n\t\t\t// Listen for requests for specific drawer models.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:drawer', this.getDrawer, this );\n\t\t},\n\n\t\tgetDrawerCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDrawer: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Default settings title view.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/drawer/defaultSettingsTitle',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-settings-title-default',\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderTypeNicename: function() {\n\t    \t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tvar domainID = currentDomain.get( 'id' );\n\t    \t\t\tvar type = nfRadio.channel( domainID ).request( 'get:type', this.type );\n\t    \t\t\tif ( 'undefined' != typeof type ) {\n\t    \t\t\t\treturn type.get( 'nicename' );\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t});\n\n\treturn view;\n} );\n","/**\n * Model for our individual domains.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainModel',['views/app/drawer/defaultSettingsTitle'], function( defaultSettingsTitleView ) {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdashicons: '',\n\t\t\tclasses: '',\n\t\t\tactive: false,\n\t\t\turl: '',\n\t\t\thotkeys: false,\n\t\t\tdisabled: false,\n\n\t\t\tgetSettingsTitleView: function( data ) {\n\t\t\t\treturn new defaultSettingsTitleView( data );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our domain models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/domainCollection',['models/app/domainModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel\n\t} );\n\treturn collection;\n} );\n","define( 'views/fields/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-fields',\n\n\t\tinitialize: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.listenTo( fieldCollection, 'add', this.render );\n\t\t\tthis.listenTo( fieldCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tif ( fieldCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-fields'\n\t});\n\n\treturn view;\n} );\n","/**\n * Renders an application menu item from a domain model.\n *\n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/app/itemControls',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-item-controls',\n\n\t\tinitialize: function() {\n\t\t\t// Listen for domain changes and re-render when we detect one.\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.render );\n\t\t},\n\n\t\t/**\n\t\t * When we render this view, remove the extra <div> tag created by backbone.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t\t// \n\t\t\tthis.currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-edit-settings': 'clickEdit',\n\t\t\t'singletap .nf-edit-settings': 'singleTapEdit',\n\t\t\t'click .nf-delete': 'clickDelete',\n\t\t\t'click .nf-duplicate': 'clickDuplicateField'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t},\n\n\t\tsingleTapEdit: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\tclickDelete: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:delete', e, this.model );\n\t\t},\n\n\t\tclickDuplicateField: function( e ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:duplicate', e, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/fieldItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-field',\n\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t\tthis.model.on( 'change:label', this.render, this );\n\t\t\tthis.model.on( 'change:required', this.render, this );\n\t\t\tthis.model.on( 'change:id', this.render, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t\tthis.model.off( 'change:label', this.render );\n\t\t\tthis.model.off( 'change:required', this.render );\n\t\t\tthis.model.off( 'change:id', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t\tjQuery( this.el ).disableSelection();\n\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( this.el ).on( 'taphold', function( e, touch ) {\n\t\t\t\t\tif ( ! jQuery( e.target ).hasClass( 'nf-edit-settings' ) ) {\n\t\t\t\t\t\tjQuery( this ).addClass( 'ui-sortable-helper drag-selected' );\n\t\t\t\t\t\tjQuery( this ).ClassyWiggle( 'start', { degrees: ['.65', '1', '.65', '0', '-.65', '-1', '-.65', '0'], delay: 50 } );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderClasses: function() {\n\t    \t\t\tvar classes = 'nf-field-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t    \t\t},\n\t    \t\trenderRequired: function() {\n\t    \t\t\tif ( 1 == this.required ) {\n\t    \t\t\t\treturn '<span class=\"required\">*</span>';\n\t    \t\t\t} else {\n\t    \t\t\t\treturn '';\n\t    \t\t\t}\n\t    \t\t},\n\t    \t\tgetFieldID: function() {\n\t\t\t\t\tif ( jQuery.isNumeric( this.id ) ) {\n\t\t\t\t\t\treturn 'field-' + this.id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.id;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trenderIcon: function() {\n\t\t\t\t\tvar type = nfRadio.channel( 'fields' ).request( 'get:type', this.type );\n\t\t\t\t\treturn '<span class=\"fa fa-' + type.get( 'icon' ) + '\"></span>';\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'maybeClickEdit',\n\t\t\t'singletap': 'maybeTapEdit',\n\t\t\t'swipeleft': 'swipeLeft',\n\t\t\t'swiperight': 'swipeRight',\n\t\t\t'tapend': 'tapend'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( ( jQuery( e.target ).parent().hasClass( 'nf-fields-sortable' ) || jQuery( e.target ).parent().hasClass( 'nf-field-wrap' ) ) && ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t},\n\n\t\tmaybeTapEdit: function( e ) {\n\t\t\tif ( jQuery( e.target ).parent().hasClass( 'nf-fields-sortable' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t},\n\n\t\tswipeLeft: function( e, touch ) {\n\t\t\tjQuery( touch.startEvnt.target ).closest( 'div' ).find( '.nf-item-duplicate' ).show();\n\t\t\tjQuery( touch.startEvnt.target ).closest( 'div' ).find( '.nf-item-delete' ).show();\n\t\t},\n\n\t\tswipeRight: function( e, touch ) {\n\t\t\tjQuery( touch.startEvnt.target ).closest( 'div' ).find( '.nf-item-duplicate' ).hide();\n\t\t\tjQuery( touch.startEvnt.target ).closest( 'div' ).find( '.nf-item-delete' ).hide();\n\t\t},\n\n\t\ttapend: function( e, touch ) {\n\t\t\tjQuery( this.el ).ClassyWiggle( 'stop' );\n\t\t\tjQuery( this.el ).removeClass( 'ui-sortable-helper drag-selected' );\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/fields/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-fields-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t\tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t}\n\t\t\tjQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\tjQuery( this.el ).parent().droppable( {\n\t\t\t\taccept: function( draggable ) {\n\t\t\t\t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/fields/mainContentFieldCollection',['views/fields/fieldItem', 'views/fields/mainContentEmpty'], function( mainContentFieldView, mainContentFieldEmptyView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'div',\n\t\temptyView: mainContentFieldEmptyView,\n\t\treorderOnSort: true,\n\n\t\tinitialize: function() {\n\t\t\tthis.childView = nfRadio.channel( 'views' ).request( 'get:fieldItem' );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:sortableEl', this.getSortableEl, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'init:sortable', this.initSortable, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'destroy:sortable', this.destroySortable, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tif ( this.collection.models.length > 0 ) {\n\t\t\t\tjQuery( this.el ).addClass( 'nf-field-type-droppable' ).addClass( 'nf-fields-sortable' );\n\t\t\t\tvar that = this;\n\t\t\t\t/* TODO: There's a bug with some Android phones and chrome. The fix below hasn't been implement.\n\n\t\t\t\t * Instantiate our sortable field list, but only if we aren't on a mobile device.\n\t\t\t\t *\n\t\t\t\t * On Android, our sortable list isn't scrollable if it's instantiated at render.\n\t\t\t\t * Instead, for mobile, we need to instantiate our sortable when the user tapholds and then\n\t\t\t\t * destroy it when the drag stops.\n\t\t\t\t */\n\t\t\t\t// if ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\t\tthis.initSortable();\n\t\t\t\t// }\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'app' ).trigger( 'render:fieldsSortable', this );\n\t\t},\n\n\t\tgetSortableEl: function() {\n\t\t\treturn this.el;\n\t\t},\n\n\t\tinitSortable: function() {\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tvar tolerance = 'pointer';\n\t\t\t} else {\n\t\t\t\tvar tolerance = 'intersect';\n\t\t\t}\n\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\tcontainment: '#nf-main',\n\t\t\t\thelper: 'clone',\n\t\t\t\tcancel: '.nf-item-controls',\n\t\t\t\tplaceholder: 'nf-fields-sortable-placeholder',\n\t\t\t\topacity: 0.95,\n\t\t\t\ttolerance: tolerance,\n\n\t\t\t\treceive: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'start:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:fieldsSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'stop:fieldsSortable', ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tdestroySortable: function() {\n\t\t\tjQuery( this.el ).sortable( 'destroy' );\n\t\t}\n\n\t} );\n\n\treturn view;\n} );\n\n","define( 'views/fields/drawer/addSavedField',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-add-saved-field',\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:addSavedLoading', this.renderAddButton, this );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.renderAddButton();\n\t\t},\n\n\t\trenderAddButton: function() {\n\t\t\tif ( this.model.get( 'addSavedLoading' ) ) {\n\t\t\t\tvar button = _.template( jQuery( '#nf-tmpl-add-saved-field-loading' ).html() );\n\t\t\t} else {\n\t\t\t\tvar button = _.template( jQuery( '#nf-tmpl-add-saved-field-button' ).html() );\n\t\t\t}\n\t\t\tjQuery( this.el ).find( '.add-button' ).html( button( this ) );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:addSavedLoading', this.render );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-button': 'clickAddSavedField'\n\t\t},\n\n\t\tclickAddSavedField: function( e ) {\n\t\t\tnfRadio.channel( 'drawer' ).trigger( 'click:addSavedField', e, this.model );\n\t\t}\n\t});\n\n\treturn view;\n} );\n\n","/**\n * Fields settings title view.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/fields/drawer/settingsTitle',['views/fields/drawer/addSavedField'], function( addSavedFieldView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-drawer-content-edit-settings-title-fields',\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:isSaved', this.render, this );\n\t\t\tthis.model.on( 'change:label', this.renderjBoxContent, this );\n\t\t},\n\n\t\tregions: {\n\t\t\taddSaved: '.nf-add-saved-field'\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:isSaved', this.render );\n\t\t\tthis.addSavedjBox.destroy();\n\t\t\tthis.model.unset( 'jBox', { silent: true } );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.renderjBoxContent();\n\t\t\tvar that = this;\n\t\t\tthis.addSavedjBox = new jBox( 'Tooltip', {\n\t\t\t\ttrigger: 'click',\n\t\t\t\ttitle: 'Add to Saved Fields',\n\t\t\t\tposition: {\n\t\t\t\t\tx:'left',\n\t\t\t\t\ty:'center'\n\t\t\t\t},\n\t\t\t\toutside:'x',\n\t\t\t\tcloseOnClick: 'body',\n\n\t\t\t\tonCreated: function() {\n\t\t\t\t\tthis.setContent( jQuery( that.el ).find( '.nf-add-saved-field' ) );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis.addSavedjBox.attach( jQuery( this.el ).find( '.dashicons') );\n\t\t\tthis.model.set( 'jBox', this.addSavedjBox, { silent: true } );\n\t\t},\n\n\t\trenderjBoxContent: function() {\n\t\t\tif ( this.addSaved ) {\n\t\t\t\tthis.addSaved.show( new addSavedFieldView( { model: this.model } ) );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t    \treturn {\n\t    \t\trenderTypeNicename: function() {\n\t    \t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\t\t\tvar domainID = currentDomain.get( 'id' );\n\t    \t\t\tvar type = nfRadio.channel( domainID ).request( 'get:type', this.type );\n\t    \t\t\tvar displayName = type.get( 'nicename' );\n\n\t    \t\t\tif ( this.isSaved ) {\n\t    \t\t\t\tvar realType = nfRadio.channel( domainID ).request( 'get:type', type.get( 'type' ) );\n\t    \t\t\t\tdisplayName += ' - ' + realType.get( 'nicename' );\n\t    \t\t\t}\n\t    \t\t\treturn displayName;\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\trenderSavedStar: function() {\n\t\t\t\t\tif ( this.isSaved ) {\n\t\t\t\t\t\tvar star = 'filled';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar star = 'empty';\n\t\t\t\t\t}\n\t\t\t\t\treturn '<span class=\"dashicons dashicons-star-' + star + '\"></span>'\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Add main header.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-actions',\n\n\t\tinitialize: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tthis.listenTo( actionCollection, 'add', this.render );\n\t\t\tthis.listenTo( actionCollection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\tif ( actionCollection.models.length == 0 ) {\n\t\t\t\tjQuery( this.el ).hide();\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).show();\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Actions subheader view.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-actions'\n\t});\n\n\treturn view;\n} );\n","/**\n * Single action table row\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/actionItem',['views/app/itemControls'], function( itemControlsView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-action-item',\n\t\t\n\t\tregions: {\n\t\t\titemControls: '.nf-item-controls'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:label', this.render, this );\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t\tthis.model.on( 'change:active', this.maybeDeactivate, this );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:label', this.render );\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t\tthis.model.off( 'change:active', this.maybeDeactivate );\n\t\t},\n\t\t\n\t\tonRender: function() {\n\t\t\tif ( this.model.get( 'editActive' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'active' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'active' );\n\t\t\t}\n\n\t\t\tthis.maybeDeactivate();\n\t\t\t\n\t\t\tthis.itemControls.show( new itemControlsView( { model: this.model } ) );\n\t\t},\n\n\t\tmaybeDeactivate: function() {\n\t\t\tif ( 0 == this.model.get( 'active' ) ) {\n\t\t\t\tjQuery( this.el ).addClass( 'deactivated' );\n\t\t\t} else {\n\t\t\t\tjQuery( this.el ).removeClass( 'deactivated' );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change input': 'changeToggle',\n\t\t\t'click': 'maybeClickEdit'\n\t\t},\n\n\t\tmaybeClickEdit: function( e ) {\n\t\t\tif ( 'TR' == jQuery( e.target ).parent().prop( 'tagName' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', e, this.model );\n\t\t\t}\n\t\t},\n\n\t\tchangeToggle: function( e ) {\n\t\t\tvar settingModel = nfRadio.channel( 'actions' ).request( 'get:settingModel', 'active' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:setting', e, settingModel, this.model );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderToggle: function() {\n\t\t\t\t\tvar actionLabel = this.label;\n\t\t\t\t\tthis.label = '';\n\t\t\t\t\tthis.value = this.active;\n\t\t\t\t\tthis.name = this.id + '-active';\n\t\t\t\t\tvar html = _.template( jQuery( '#nf-tmpl-edit-setting-toggle' ).html() );\n\t\t\t\t\thtml = html( this );\n\t\t\t\t\tthis.label = actionLabel;\n\t\t\t\t\treturn html;\n\t\t\t\t},\n\n\t\t\t\trenderTypeNicename: function() {\n\t\t\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', this.type );\n\t\t\t\t\treturn type.get( 'nicename' );\n\t\t\t\t},\n\n\t\t\t\trenderTooltip: function() {\n\t\t\t\t\tif ( this.help ) {\n\t\t\t\t\t\treturn '<a class=\"nf-help\" href=\"#\"><span class=\"dashicons dashicons-admin-comments\"></span></a><div class=\"nf-help-text\">' + this.help + '</div>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\trenderMergeTags: function() {\n\t\t\t\t\tif ( this.use_merge_tags ) {\n\t\t\t\t\t\treturn '<span class=\"dashicons dashicons-list-view merge-tags\"></span>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/actions/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-content-actions-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().parent().removeClass( 'nf-actions-empty' );\n\t\t\t// jQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tjQuery( this.el ).parent().parent().addClass( 'nf-actions-empty' );\n\t\t\t// if ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t// \tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t// }\n\t\t\t// jQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\t// jQuery( this.el ).parent().droppable( {\n\t\t\t// \taccept: function( draggable ) {\n\t\t\t// \t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t// \t\t\treturn true;\n\t\t\t// \t\t}\n\t\t\t// \t},\n\t\t\t// \thoverClass: 'nf-droppable-hover',\n\t\t\t// \ttolerance: 'pointer',\n\t\t\t// \tover: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tout: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t// \t},\n\t\t\t// \tdrop: function( e, ui ) {\n\t\t\t// \t\tui.item = ui.draggable;\n\t\t\t// \t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t// \t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t// \t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t// \t},\n\t\t\t// } );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content view for our actions.\n *\n * TODO: make dynamic\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/actions/mainContent',['views/actions/actionItem', 'views/actions/mainContentEmpty'], function( actionView, emptyView ) {\n\tvar view = Marionette.CompositeView.extend({\n\t\ttemplate: '#nf-tmpl-action-table',\n\t\tchildView: actionView,\n\t\temptyView: emptyView,\n\n\t\tonRender: function() {\n\t\t\tjQuery( this.el ).droppable( {\n\t\t\t\taccept: '.nf-field-type-draggable',\n\t\t\t\tactiveClass: 'nf-droppable-active',\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'drop:actionType', e, ui );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( 'tbody' ).append( childView.el );\n\t\t},\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/mainHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-main-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/subHeader',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-sub-header-settings'\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/settingItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-form-setting-type',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:editActive', this.render );\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.model.on( 'change:editActive', this.render, this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'clickEdit'\n\t\t},\n\n\t\tclickEdit: function( e ) {\n\t\t\tnfRadio.channel( 'settings' ).trigger( 'click:edit', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\treturn {\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = 'nf-setting-wrap';\n\t    \t\t\tif ( this.editActive ) {\n\t    \t\t\t\tclasses += ' active';\n\t    \t\t\t}\n\t    \t\t\treturn classes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/advanced/mainContent',['views/advanced/settingItem'], function( settingItem ) {\n\tvar view = Marionette.CollectionView.extend({\n\t\tchildView: settingItem\n\t\t\n\t});\n\n\treturn view;\n} );\n","/**\n * Config file for our app domains.\n * \n * this.collection represents all of our app domain (fields, actions, settings) information.\n *\n * This doesn't store the current domain, but rather all the data about each.\n * \n * This data includes:\n * hotkeys\n * header view\n * subheader view\n * content view\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/domainConfig',[\n\t// Require our domain collection\n\t'models/app/domainCollection',\n\t// Require our fields domain files\n\t'views/fields/mainHeader',\n\t'views/fields/subHeader',\n\t'views/fields/mainContentFieldCollection',\n\t'views/fields/drawer/settingsTitle',\n\t// Require our actions domain files\n\t'views/actions/mainHeader', \n\t'views/actions/subHeader',\n\t'views/actions/mainContent',\n\t// Require our settings domain files\n\t'views/advanced/mainHeader',\n\t'views/advanced/subHeader',\n\t'views/advanced/mainContent',\n\t], \n\tfunction( \n\t\tappDomainCollection,\n\t\tfieldsMainHeaderView,\n\t\tfieldsSubHeaderView,\n\t\tfieldsMainContentFieldCollectionView,\n\t\tfieldsSettingsTitleView,\n\t\tactionsMainHeaderView,\n\t\tactionsSubHeaderView,\n\t\tactionsMainContentView,\n\t\tsettingsMainHeaderView,\n\t\tsettingsSubHeaderView,\n\t\tsettingsMainContentView\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Define our app domains\n\t\t\tthis.collection = new appDomainCollection( [\n\t\t\t\t{\n\t\t\t\t\tid: 'fields',\n\t\t\t\t\tnicename: 'Form Fields',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newField',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\t\t\t\t\tmobileDashicon: 'dashicons-menu',\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new fieldsSubHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Get the fieldContents view that should be used in our builder.\n\t\t\t\t\t * Uses two filters:\n\t\t\t\t\t * 1) One for our fieldContentsData\n\t\t\t\t\t * 2) One for our fieldContentsView\n\t\t\t\t\t *\n\t\t\t\t\t * If we don't have any view filters, we use the default fieldContentsView.\n\t\t\t\t\t * \n\t\t\t\t\t * @since  3.0\n\t\t\t\t\t * @return fieldContentsView backbone view.\n\t\t\t\t\t */\n\t\t\t\t\tgetMainContentView: function( collection ) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Temporary method for adding data to our formModel.\n\t\t\t\t\t\t * Can be removed once we start saving data for layouts.\n\t\t\t\t\t\t */ \n\t\t\t\t\t\t// nfRadio.channel( 'tmp' ).request( 'update:layoutCollection' );\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Get our field collection. We'll use this as the default if we don't have a defined fieldContentsData.\n\t\t\t\t\t\t */ \t\t\t\t\n\t\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Set our fieldContentsData to our form setting 'fieldContentsData'\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar fieldContentsData = nfRadio.channel( 'settings' ).request( 'get:setting', 'fieldContentsData' );\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If we don't have a filter for our fieldContentsData, default to fieldCollection.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar fieldContentsLoadFilters = nfRadio.channel( 'fieldContents' ).request( 'get:loadFilters' );\n\t\t\t\t\t\tif ( 0 != fieldContentsLoadFilters.length ) {\n\t\t\t\t\t\t\t/* \n\t\t\t\t\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tvar sortedArray = _.without( fieldContentsLoadFilters, undefined );\n\t\t\t\t\t\t\tvar callback = _.first( sortedArray );\n\t\t\t\t\t\t\tfieldContentsData = callback( fieldContentsData );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfieldContentsData = fieldCollection;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Set our default fieldContentsView.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar fieldContentsView = fieldsMainContentFieldCollectionView;\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\n\t\t\t\t\t\t * If we do, overwrite our default with the view returned from the filter.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar fieldContentsViewFilters = nfRadio.channel( 'fieldContents' ).request( 'get:viewFilters' );\n\t\t\t\t\t\tif ( 0 != fieldContentsViewFilters.length ) {\n\t\t\t\t\t\t\t/* \n\t\t\t\t\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t\tvar sortedArray = _.without( fieldContentsViewFilters, undefined );\n\t\t\t\t\t\t\tvar callback = _.first( sortedArray );\n\t\t\t\t\t\t\tfieldContentsView = callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If we don't have any fieldContentsData set yet, default to our field collection.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif ( 'undefined' == typeof fieldContentsData ) {\n\t\t\t\t\t\t\tfieldContentsData = fieldCollection;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnfRadio.channel( 'settings' ).request( 'update:setting', 'fieldContentsData', fieldContentsData, true );\n\t\t\t\t\t\treturn new fieldContentsView( { collection: fieldContentsData } );\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSettingsTitleView: function( data ) {\n\t\t\t\t\t\treturn new fieldsSettingsTitleView( data );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'actions',\n\t\t\t\t\tnicename: 'Emails & Actions',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+n'\t\t: 'add:newAction',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+s'\t\t: 'changeDomain:settings',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\t\t\t\t\tmobileDashicon: 'dashicons-external',\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new actionsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new actionsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n\t\t\t\t\t\treturn new actionsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'settings',\n\t\t\t\t\tnicename: 'Advanced',\n\t\t\t\t\thotkeys: {\n\t\t\t\t\t\t'Esc'\t\t\t\t: 'close:drawer',\n\t\t\t\t\t\t'Ctrl+Shift+f'\t\t: 'changeDomain:fields',\n\t\t\t\t\t\t'Ctrl+Shift+a'\t\t: 'changeDomain:actions',\n\t\t\t\t\t\t'Alt+Ctrl+t'\t\t: 'open:mergeTags',\n\t\t\t\t\t\t'up'\t\t\t\t: 'up:mergeTags',\n\t\t\t\t\t\t'down'\t\t\t\t: 'down:mergeTags',\n\t\t\t\t\t\t'Shift+return'\t\t: 'return:mergeTags'\n\t\t\t\t\t},\n\t\t\t\t\tmobileDashicon: 'dashicons-admin-generic',\n\n\t\t\t\t\tgetMainHeaderView: function() {\n\t\t\t\t\t\treturn new settingsMainHeaderView();\n\t\t\t\t\t},\n\n\t\t\t\t\tgetSubHeaderView: function() {\n\t\t\t\t\t\treturn new settingsSubHeaderView();\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgetMainContentView: function() {\n\t\t\t\t\t\tvar collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n\t\t\t\t\t\treturn new settingsMainContentView( { collection: collection } );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'preview',\n\t\t\t\t\tnicename: 'Preview Form',\n\t\t\t\t\tclasses: 'preview',\n\t\t\t\t\tdashicons: 'dashicons-visibility',\n\t\t\t\t\tmobileDashicon: 'dashicons-visibility',\n\t\t\t\t\turl: nfAdmin.previewurl\n\t\t\t\t}\n\t\t\t] );\n\n\t\t\t/*\n\t\t\t * Send out a radio message with our domain config collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).trigger( 'init:domainCollection', this.collection );\n\n\t\t\t/*\n\t\t\t * Respond to requests to get the app domain collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainCollection', this.getDomainCollection, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:domainModel', this.getDomainModel, this );\n\t\t},\n\n\t\tgetDomainCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetDomainModel: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our app data.\n * Listens for changes to the 'clean' attribute and triggers a radio message when the state changes.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/appModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tloading: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen to changes to our 'clean' attribute.\n\t\t\tthis.on( 'change:clean', this.changeStatus, this );\n\t\t},\n\n\t\tchangeStatus: function() {\n\t\t\t// Send out a radio message when the 'clean' attribute changes.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:clean', this.get( 'clean' ) );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Creates and stores a model that represents app-wide data. i.e. current domain, current drawer, clean, etc.\n *\n * clean is a boolean that represents whether or not changes have been made.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/data',['models/app/appModel'], function( appModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Get the collection that represents all the parts of our application.\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\t// Setup our initial model.\n\t\t\tthis.model = new appModel( {\n\t\t\t\tcurrentDrawer: false,\n\t\t\t\tcurrentDomain: appDomainCollection.get( 'fields' ),\n\t\t\t\tclean: true\n\t\t\t} );\n\n\t\t\t/*\n\t\t\t * Set the mobile setting used to track whether or not we're on a mobile device.\n\t\t\t */\n\t\t\tvar mobile = ( 1 == nfAdmin.mobile ) ? true : false;\n\t\t\tthis.model.set( 'mobile', mobile );\n\n\t\t\t/*\n\t\t\t * Respond to requests to see if we are on mobile.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'is:mobile', this.isMobile, this );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests for information about the state of our app.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:data', this.getData, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:setting', this.getSetting, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDomain', this.getCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:currentDrawer', this.getCurrentDrawer, this );\n\n\t\t\t/*\n\t\t\t * Respond to app channel requests to update app settings.\n\t\t\t */\t\t\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDomain', this.updateCurrentDomain, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:currentDrawer', this.updateCurrentDrawer, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:setting', this.updateSetting, this );\n\n\t\t},\n\n\t\tupdateCurrentDomain: function( model ) {\n\t\t\tthis.updateSetting( 'currentDomain', model );\n\t\t},\n\n\t\tupdateSetting: function( setting, value ) {\n\t\t\tthis.model.set( setting, value );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetSetting: function( setting ) {\n\t\t\treturn this.model.get( setting );\n\t\t},\n\n\t\tgetData: function() {\n\t\t\treturn this.model;\n\t\t},\n\n\t\tgetCurrentDomain: function() {\n\t\t\treturn this.model.get( 'currentDomain' );\n\t\t},\n\n\t\tupdateCurrentDrawer: function( drawerID ) {\n\t\t\tthis.updateSetting( 'currentDrawer', drawerID );\n\t\t\treturn true;\n\t\t},\n\n\t\tgetCurrentDrawer: function() {\n\t\t\tvar currentDrawerID = this.model.get( 'currentDrawer' );\n\t\t\treturn nfRadio.channel( 'app' ).request( 'get:drawer', currentDrawerID );\n\t\t},\n\n\t\tisMobile: function() {\n\t\t\treturn this.model.get( 'mobile' );\n\t\t}\n\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for click events to expand/collapse setting groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/drawerToggleSettingGroup',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for click events on our settings group.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:toggleSettingGroup', this.toggleSettingGroup );\n\t\t},\n\n\t\t/**\n\t\t * Set the 'display' attribute of our group model to true or false to toggle.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \tgroup setting model\n\t\t * @return void\n\t\t */\n\t\ttoggleSettingGroup: function( e, model ) {\n\t\t\tif ( model.get( 'display' ) ) {\n\t\t\t\t/*\n\t\t\t\t * Make sure that none of our settings have errors\n\t\t\t\t */\n\t\t\t\tvar errors = false;\n\t\t\t\t_.each( model.get( 'settings' ).models, function( setting ) {\n\t\t\t\t\tif ( setting.get( 'error' ) ) {\n\t\t\t\t\t\terrors = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( ! errors ) {\n\t\t\t\t\tmodel.set( 'display', false );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmodel.set( 'display', true );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our database with our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/updateDB',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the closing of the drawer and update when it's closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'closed', this.updateDB );\n\t\t\t// Respond to requests to update the database.\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:db', this.updateDB, this );\n\t\t},\n\n\t\t/**\n\t\t * Update our database.\n\t\t * If action isn't specified, assume we're updating the preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \taction preview or publish\n\t\t * @return void\n\t\t */\n\t\tupdateDB: function( action ) {\n\t\t\t// If our app is clean, dont' update.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Default action to preview.\n\t\t\taction = action || 'preview';\n\n\t\t\t// Setup our ajax actions based on the action we're performing\n\t\t\tif ( 'preview' == action ) {\n\t\t\t\tvar jsAction = 'nf_preview_update';\n\t\t\t} else if ( 'publish' == action ) {\n\t\t\t\tvar jsAction = 'nf_save_form';\n\t\t\t}\n\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t/*\n\t\t\t * The main content of our form is called the fieldContents.\n\t\t\t * In this next section, we check to see if any add-ons want to modify that contents before we save.\n\t\t\t * If there aren't any filters found, we default to the field collection.\n\t\t\t * \n\t\t\t */\n\t\t\tvar fieldContentsData = nfRadio.channel( 'settings' ).request( 'get:setting', 'fieldContentsData' );\n\t\t\tvar fieldContentsSaveDataFilters = nfRadio.channel( 'fieldContents' ).request( 'get:saveFilters' );\n\t\t\t\n\t\t\tif ( 0 != fieldContentsSaveDataFilters.length ) {\n\t\t\t\t/* \n\t\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t\t*/\n\t\t\t\tvar sortedArray = _.without( fieldContentsSaveDataFilters, undefined );\n\t\t\t\tvar callback = _.first( sortedArray );\n\t\t\t\t/*\n\t\t\t\t * Set our fieldContentsData to the callback specified in the filter, passing our current fieldContentsData.\n\t\t\t\t */\n\t\t\t\tfieldContentsData = callback( fieldContentsData );\n\t\t\t} else { // Default to our field collection.\n\t\t\t\tfieldContentsData = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t}\n\t\t\t/*\n\t\t\t * Update our fieldContentsData form setting.\n\t\t\t */\n\t\t\t// nfRadio.channel( 'settings' ).request( 'update:setting', 'fieldContentsData', fieldContentsData );\n\t\t\t\n\t\t\tif ( 'publish' == action && formModel.get( 'show_publish_options' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'newForm' );\n\t\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\t\tjQuery( builderEl ).addClass( 'disable-main' );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Get our form data\n\t\t\tvar formData = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\n\t\t\t// Turn our formData model into an object\n\t\t\tvar data = JSON.parse( JSON.stringify( formData ) );\n\t\t\tdata.settings.fieldContentsData = fieldContentsData;\n\t\t\t/**\n\t\t\t * Prepare fields for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the field IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'fields' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.fields is an array of objects like:\n\t\t\t * field.label = blah\n\t\t\t * field.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * field.settings.label = blah\n\t\t\t * field.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our fields and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.fields, function( field ) {\n\t\t\t\tvar id = field.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete field.id;\n\t\t\t\tdelete field.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our fields\n\t\t\t\tfor (var prop in field) {\n\t\t\t\t    if ( field.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = field[ prop ];\n\t\t\t\t        // Delete the property from the field.\n\t\t\t\t        delete field[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our field object.\n\t\t\t\tfield.settings = settings;\n\t\t\t\tfield.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_fields object so that we can know which fields were removed.\n\t\t\tdata.deleted_fields = removedIDs;\n\n\t\t\t/**\n\t\t\t * Prepare actions for submission.\n\t\t\t */\n\t\t\t\n\t\t\t// Get the action IDs that we've deleted.\n\t\t\tvar removedIDs = formData.get( 'actions' ).removedIDs;\n\n\t\t\t/*\n\t\t\t * data.actions is an array of objects like:\n\t\t\t * action.label = blah\n\t\t\t * action.label_pos = blah\n\t\t\t * etc.\n\t\t\t *\n\t\t\t * And we need that format to be:\n\t\t\t * action.settings.label = blah\n\t\t\t * action.settings.label_pos = blah\n\t\t\t *\n\t\t\t * So, we loop through our actions and create a field.settings object.\n\t\t\t */\n\t\t\t_.each( data.actions, function( action ) {\n\t\t\t\tvar id = action.id;\n\t\t\t\t// We dont' want to update id or parent_id\n\t\t\t\tdelete action.id;\n\t\t\t\tdelete action.parent_id;\n\t\t\t\tvar settings = {};\n\t\t\t\t// Loop through all the attributes of our actions\n\t\t\t\tfor (var prop in action) {\n\t\t\t\t    if ( action.hasOwnProperty( prop ) ) {\n\t\t\t\t    \t// Set our settings.prop value.\n\t\t\t\t        settings[ prop ] = action[ prop ];\n\t\t\t\t        // Delete the property from the action.\n\t\t\t\t        delete action[ prop ];\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\t// Update our action object.\n\t\t\t\taction.settings = settings;\n\t\t\t\taction.id = id;\n\t\t\t} );\n\n\t\t\t// Set our deleted_actions object so that we can know which actions were removed.\n\t\t\tdata.deleted_actions = removedIDs;\n\n\t\t\t// Turn our object into a JSON string.\n\t\t\tdata = JSON.stringify( data );\n\t\t\t// Run anything that needs to happen before we update.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'before:updateDB', data );\n\n\t\t\tif ( 'publish' == action ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', true );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\t\n\n\t\t\t\t// If we're on mobile, show a notice that we're publishing\n\t\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\t\tnfRadio.channel( 'notices' ).request( 'add', 'publishing', 'Your Changes Are Being Published', { autoClose: false } );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update\n\t\t\tjQuery.post( ajaxurl, { action: jsAction, form: data, security: nfAdmin.ajaxNonce }, function( response ) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse = JSON.parse( response );\n\t\t\t\t\tresponse.action = action;\n\t\t\t\t\t// Run anything that needs to happen after we update.\n\t\t\t\t\tnfRadio.channel( 'app' ).trigger( 'response:updateDB', response );\n\t\t\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'is:mobile' ) && 'preview' == action ) {\n\t\t\t\t\t\t// nfRadio.channel( 'notices' ).request( 'add', 'previewUpdate', 'Preview Updated'\t);\n\t\t\t\t\t}\n\t\t\t\t} catch( exception ) {\n\t\t\t\t\tconsole.log( 'Something went wrong!' );\n\t\t\t\t\tconsole.log( response );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/formModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tinitialize: function() {\n\t\t\tif ( ! jQuery.isNumeric( this.get( 'id' ) ) ) {\n\t\t\t\tthis.set( 'show_publish_options', true, { silent: true } );\n\t\t\t} else {\n\t\t\t\tthis.set( 'show_publish_options', false, { silent: true } );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Stores our form data and responds to requests for it.\n * Form data stores fields, actions, and settings.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/formData',['models/app/formModel'], function( formModel) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Instantiate Form Model\n\t\t\tthis.model = new formModel( { id: preloadedFormData.id } );\n\t\t\t// Set our field collection\n\t\t\tthis.model.set( 'fields', nfRadio.channel( 'fields' ).request( 'get:collection' ) );\n\t\t\t// Set our actions collection\n\t\t\tthis.model.set( 'actions', nfRadio.channel( 'actions' ).request( 'get:collection' ) );\n\t\t\t// Set our settings collection\n\t\t\tthis.model.set( 'settings', nfRadio.channel( 'settings' ).request( 'get:settings' ) );\n\t\t\t// Respond to requests for form data.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:formModel', this.getFormModel, this );\n\t\t},\n\n\t\t/**\n\t\t * Return form data model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return backbone.model\n\t\t */\n\t\tgetFormModel: function() {\n\t\t\treturn this.model;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles changing our preview link when we change the 'clean' state of our app.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/previewLink',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for events that would change our preview link\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:sendChanges', this.disablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:sendChanges', this.enablePreview, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.changePreviewNicename, this );\n\t\t},\n\n\t\t/**\n\t\t * Disable our preview link before we send data to update our preview.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tdisablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to true. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', true );\n\t\t},\n\n\t\t/**\n\t\t * Change the preview link text from \"Preview Form\" to \"Preview Changes\" or vice-versa\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  boolean \tclean app data state\n\t\t * @return void\n\t\t */\n\t\tchangePreviewNicename: function( clean ) {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\n\t\t\t// If we have unsaved changes, set our text to 'changes' otherwise, set it to 'form'\n\t\t\tif ( ! clean ) {\n\t\t\t\tvar nicename = 'Preview Changes';\n\t\t\t} else {\n\t\t\t\tvar nicename = 'Preview Form';\n\t\t\t}\n\n\t\t\tpreview.set( 'nicename', nicename );\n\t\t},\n\n\t\t/**\n\t\t * Enable our preview button.\n\t\t * This is triggered when we get a response from our preview update.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tenablePreview: function() {\n\t\t\t// Get our preview domain\n\t\t\tvar appDomains = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar preview = appDomains.get( 'preview' );\n\t\t\t// Set disabled to false. This will trigger the preview link view to redraw.\n\t\t\tpreview.set( 'disabled', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/menuButtons',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:publish', this.publish );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:viewChanges', this.viewChanges );\n\t\t},\n\n\t\tpublish: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db', 'publish' );\n\t\t},\n\n\t\tviewChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'viewChanges', { collection: changeCollection } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our change data.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisabled: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Holds all of our change models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/changeCollection',['models/app/changeModel'], function( domainModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: domainModel,\n\n\t\tcomparator: function( model ) {\n\t\t\tvar id = parseInt( model.cid.replace( 'c', '' ) );\n\t\t\treturn -id;\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Track settings changes across our app.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/trackChanges',['models/app/changeCollection', 'models/app/changeModel'], function( changeCollection, ChangeModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new changeCollection();\n\t\t\t// Respond to any requests to add a change directly.\n\t\t\tnfRadio.channel( 'changes' ).reply( 'register:change', this.registerChange, this );\n\t\t\t// Respond to requests for the change collection\n\t\t\tnfRadio.channel( 'changes' ).reply( 'get:collection', this.getCollection, this );\n\t\t\t// Listen for changes in our clean state. If it goes to clean, clear our collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:clean', this.maybeResetCollection );\n\t\t},\n\n\t\tregisterChange: function( action, model, changes, label, data ) {\n\t\t\tvar data = typeof data !== 'undefined' ? data : {};\n\t\t\tif ( 'undefined' == typeof label.dashicon ) {\n\t\t\t\tlabel.dashicon = 'admin-generic';\n\t\t\t}\n\t\t\tvar changeModel = new ChangeModel({\n\t\t\t\taction: action,\n\t\t\t\tmodel: model,\n\t\t\t\tchanges: changes,\n\t\t\t\tlabel: label,\n\t\t\t\tdata: data\t\t\n\t\t\t} );\n\t\t\tthis.collection.add( changeModel );\n\t\t\treturn changeModel;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tmaybeResetCollection: function( clean ) {\n\t\t\tif ( clean ) {\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'controllers/app/undoChanges',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoChanges', this.undoChanges, this );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:undoSingle', this.undoSingle, this );\n\t\t},\n\n\t\tundoChanges: function() {\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\tchangeCollection.sort();\n\t\t\tvar that = this;\n\t\t\t_.each( changeCollection.models, function( change ) {\n\t\t\t\tthat.undoSingle( change, true );\n\t\t\t} );\n\t\t\tchangeCollection.reset();\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\t\t\t\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t},\n\n\t\tundoSingle: function( change, undoAll ) {\n\t\t\tnfRadio.channel( 'changes' ).request( 'undo:' + change.get( 'action' ), change, undoAll );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for our update:db response and replaces tmp ids with new ids if we were performing the publish action.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/publishResponse',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our app channel for the updateDB response.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.publishResponse );\n\t\t},\n\n\t\tpublishResponse: function( response ) {\n\t\t\t// If we aren't performing a publish action, bail.\n\t\t\tif ( 'publish' !== response.action ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check to see if we have any new ids. \n\t\t\tif ( 'undefined' != typeof response.data.new_ids ) {\n\n\t\t\t\t// If we have any new fields, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.fields ) {\n\t\t\t\t\t_.each( response.data.new_ids.fields, function( newID, oldID ) {\n\t\t\t\t\t\tvar field = nfRadio.channel( 'fields' ).request( 'get:field', oldID );\n\t\t\t\t\t\tif ( field ) {\n\t\t\t\t\t\t\tfield.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have any new actions, update their models with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.actions ) {\n\t\t\t\t\t_.each( response.data.new_ids.actions, function( newID, oldID ) {\n\t\t\t\t\t\tvar action = nfRadio.channel( 'actions' ).request( 'get:action', oldID );\n\t\t\t\t\t\tif ( action ) {\n\t\t\t\t\t\t\taction.set( 'id', newID );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we have a new form id, update the model with the new id.\n\t\t\t\tif ( 'undefined' != typeof response.data.new_ids.forms ) {\n\t\t\t\t\t_.each( response.data.new_ids.forms, function( newID, oldID ) {\n\t\t\t\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t\t\t\tformModel.set( 'id', newID );\n\t\t\t\t\t\thistory.replaceState( '', '', 'admin.php?page=ninja-forms&form_id=' + newID );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'loading', false );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'change:loading' );\n\n\t\t\t// If we're on mobile, show a notice that we're publishing\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tnfRadio.channel( 'notices' ).request( 'close', 'publishing' );\n\t\t\t}\n\t\t\t// Add a notice that we've published.\n\t\t\tnfRadio.channel( 'notices' ).request( 'add', 'published', 'Changes Published' );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'app:published', response );\n\n\t\t\t// Mark our app as clean. This will disable the publish button and fire anything else that cares about the state.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t}\n\t\t\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for requests to change the current domain.\n *\n * The app menu and the main submenu both contain clickable links that change the current domain.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeDomain',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for both menu and submenu clicks.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:menu', this.changeAppDomain );\n\t\t\t// Reply to specific requests to change the domain\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:currentDomain', this.changeAppDomain, this );\n\n\t\t\t// Reply to requests to prevent our drawer from closing\n\t\t\tnfRadio.channel( 'app' ).reply( 'prevent:changeDomain', this.preventChange, this );\n\t\t\t// Reply to requests to enable drawer closing\n\t\t\tnfRadio.channel( 'app' ).reply( 'enable:changeDomain', this.enableChange, this );\n\n\t\t\t/*\n\t\t\t * Object that holds our array of 'prevent change' values.\n\t\t\t * We use an array so that registered requests can unregister and not affect each other.\n\t\t\t */\n\t\t\tthis.objPreventChange = {};\n\t\t},\n\n\t\tchangeAppDomain: function( e, model ) {\n\t\t\t/*\n\t\t\t * If we have disabled movement between domains, return false.\n\t\t\t */\n\t\t\tif ( this.maybePreventChange() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * If we are passed a model, use that model.\n\t\t\t * Otherwise, get the domain from the event target data.\n\t\t\t */ \n\t\t\tif ( 'undefined' == typeof model ) {\n\t\t\t\tvar domainID = jQuery( e.target ).data( 'domain' );\n\t\t\t\tvar model = nfRadio.channel( 'app' ).request( 'get:domainModel', domainID );\n\t\t\t}\n\t\t\t// If a drawer is open, close it.\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t/*\n\t\t\t * If we aren't dealing with an external url (such as preview), update our app data\n\t\t\t * and trigger a radio message saying we've changed the domain.\n\t\t\t */ \n\t\t\tif ( 0 == model.get( 'url' ).length ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:currentDomain', model );\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'change:currentDomain', model );\n\t\t\t}\n\t\t},\n\n\t\t/**\n         * Check to see if anything has registered a key to prevent changing the domain.\n         * \n         * @since  3.0\n         * @return boolean\n         */\n        maybePreventChange: function() {\n        \tif ( 0 == Object.keys( this.objPreventChange ).length ) {\n        \t\treturn false;\n        \t} else {\n        \t\treturn true;\n        \t}\n        },\n\n        /**\n         * Register a key to prevent changing the domain.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent change domain' setting.\n         * @return void\n         */\n        preventChange: function( key ) {\n        \tthis.objPreventChange[ key ] = true;\n        },\n\n        /**\n         * Remove a previously registered key that is preventing our domain from changing.\n         * \n         * @since  3.0\n         * @param  string \tkey unique id for our 'prevent change domain' setting.\n         * @return void\n         */\n        enableChange: function( key ) {\n        \tdelete this.objPreventChange[ key ];\n        },\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Modify the user's browser history when they click on a domain\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/pushstate',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:currentDomain', this.changePushState );\n\t\t},\n\n\t\tchangePushState: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\thistory.pushState( null, null, window.location.href + '&domain=' + currentDomain.get( 'id' ) );\n\t\t\tvar reExp = /domain=\\\\d+/;\n\t\t\tvar url = window.location.toString();\n\t\t\tvar newUrl = url.replace( reExp, '' );\n\t\t\tconsole.log( newUrl );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles our hotkey execution. Needs to be cleaned up and made more programmatic.\n * \n * Our hotkeys are defined by the domain that we're currently viewing. In each domain's model, there is a hotkey object.\n * \n * Currently too much hotkey data is hard-coded here.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/hotkeys',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we change our domain, change the hotkeys to those within that object.\n\t\t\tthis.listenTo( nfRadio.channel( 'main' ), 'render:main', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'opened', this.changeHotkeys );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'render:settingGroup', this.changeHotkeys );\n\t\t\t// Currently, these are the functions that run when the new field or new action hotkey is pressed.\n\t\t\t// TODO: move these into a config module or into something more programmatic and scalable.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newField', this.addNewField );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'add:newAction', this.addNewAction );\n\t\t\t// Same as above, these functions need to be moved into a more modular/programmatic solution.\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:fields', this.changeDomainFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:actions', this.changeDomainActions );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'changeDomain:settings', this.changeDomainSettings );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'close:drawer', this.closeDrawer );\n\t\t},\n\n\t\tchangeHotkeys: function() {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tjQuery( document ).off( '.nfDomainHotkeys' );\n\t\t\tjQuery( 'input' ).off( '.nfDomainHotkeys' );\n\t\t\tif ( currentDomain.get( 'hotkeys' ) ) {\n\t\t\t\tjQuery.each( currentDomain.get( 'hotkeys' ), function( hotkey, msg ) {\n\t\t\t\t\tjQuery( document ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'input' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t\tjQuery( 'textarea' ).on( 'keydown.nfDomainHotkeys', null, hotkey, function( e ) {\n\t\t\t\t\t\tnfRadio.channel( 'hotkeys' ).trigger( msg, e );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\taddNewField: function() {\n\t\t\tif ( 'addField' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addField' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\taddNewAction: function() {\n\t\t\tif ( 'addAction' != nfRadio.channel( 'app' ).request( 'get:currentDrawer' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'addAction' );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t}\n\t\t},\n\n\t\tchangeDomainFields: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar fieldsDomain = appDomainCollection.get( 'fields' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, fieldsDomain );\n\t\t},\n\n\t\tchangeDomainActions: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar actionsDomain = appDomainCollection.get( 'actions' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, actionsDomain );\n\t\t},\n\n\t\tchangeDomainSettings: function() {\n\t\t\tvar appDomainCollection = nfRadio.channel( 'app' ).request( 'get:domainCollection' );\n\t\t\tvar settingsDomain = appDomainCollection.get( 'settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'change:currentDomain', {}, settingsDomain );\n\t\t},\n\n\t\tcloseDrawer: function() {\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Change the clean state of our app when settings are changed.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cleanState',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Set an array of field model attributes to ignore.\n\t\t\t * This list will be filtered just before we ignore anything.\n\t\t\t */ \n\t\t\tthis.ignoreAttributes = [\n\t\t\t\t'editActive'\n\t\t\t];\n\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:setting', this.setAppClean );\n\t\t},\n\n\t\tsetAppClean: function( model ) {\n\t\t\tfor( var attr in model.changedAttributes() ) {\n\t\t\t\tvar changedAttr = attr;\n\t\t\t\tvar after = model.changedAttributes()[ attr ];\n\t\t\t}\n\n\t\t\tvar ignoreAttributes = nfRadio.channel( 'undo-' + model.get( 'type' ) ).request( 'ignore:attributes', this.ignoreAttributes ) || this.ignoreAttributes;\n\t\t\t\n\t\t\tif ( -1 != this.ignoreAttributes.indexOf( attr ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * All of the core undo functions. Listens on the 'changes' channel for an undo request.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/coreUndo',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:changeSetting', this.undoChangeSetting, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addObject', this.undoAddObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeObject', this.undoRemoveObject, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:duplicateObject', this.undoDuplicateObject, this );\n\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortFields', this.undoSortFields, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addListOption', this.undoAddListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removeListOption', this.undoRemoveListOption, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortListOptions', this.undoSortListOptions, this );\n\t\t},\n\n\t\t/**\n\t\t * Undo settings that have been changed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoChangeSetting: function( change, undoAll ) {\n\t\t\tvar fieldModel = change.get( 'model' );\n\t\t\tvar changes = change.get( 'changes' );\n\t\t\tvar attr = changes.attr;\n\t\t\tvar before = changes.before;\n\t\t\tfieldModel.set( attr, before );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoAddObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tdelete collection.newIDs[ objectModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tcollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\t\t\n\n\t\t/**\n\t\t * Undo adding a field or an action.\n\t\t * Loops through our change collection and removes any change models based upon the one we're removing.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoDuplicateObject: function( change, undoAll ) {\n\t\t\tvar objectModel = change.get( 'model' );\n\t\t\tvar objectCollection = change.get( 'data' ).collection;\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tvar results = changeCollection.where( { model: objectModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( model );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tobjectCollection.remove( objectModel );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo removing a field or an action.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoRemoveObject: function( change, undoAll ) {\n\t\t\tvar dataModel = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\n\t\t\tnfRadio.channel( dataModel.get( 'objectDomain' ) ).request( 'add', dataModel );\n\n\t\t\tdelete collection.removedIDs[ dataModel.get( 'id' ) ];\n\t\t\t\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\tcollection.trigger( 'reset', collection );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * Undo field sorting.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tundoAll are we in the middle of an undo all action?\n\t\t * @return void\n\t\t */\n\t\tundoSortFields: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar fields = data.fields;\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar fieldModel = changeModel.model;\n\t\t\t\tfieldModel.set( 'order', before );\n\t\t\t\t// console.log( 'set ' + fieldModel.get( 'label' ) + ' to ' + before );\n\t\t\t} );\n\t\t\t// console.log( fieldCollection.where( { label: 'Name' } ) );\n\t\t\t// console.log( fieldCollection.where( { label: 'Email' } ) );\n\n\n\t\t\tfieldCollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoAddListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\t\tif ( changeModel !== change ) {\n\t\t\t\t\t\tchangeCollection.remove( changeModel );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tmodel.collection.remove( model );\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemoveListOption: function( change, undoAll ) {\n\t\t\tvar model = change.get( 'model' );\n\t\t\tvar collection = change.get( 'data' ).collection;\n\t\t\tcollection.add( model );\n\n\t\t\tif ( ! undoAll ) {\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t\t_.each( results, function( model ) {\n\t\t\t\t\tif ( model !== change ) {\n\t\t\t\t\t\tmodel.set( 'disabled', false );\n\t\t\t\t\t}\n\t\t\t\t} );\t\t\t\t\n\t\t\t}\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoSortListOptions: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar collection = data.collection;\n\t\t\t\n\t\t\tvar objModels = data.objModels;\n\n\t\t\t_.each( objModels, function( changeModel ) {\n\t\t\t\tvar before = changeModel.before;\n\t\t\t\tvar optionModel = changeModel.model;\n\t\t\t\toptionModel.set( 'order', before );\n\t\t\t} );\t\t\t\t\n\n\n\t\t\tcollection.sort();\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\n\t\t * @return void\n\t\t */\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\n\t\t\tif ( ! undoAll ) {\n\t\t\t\t// Update preview.\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tchangeCollection.remove( change );\n\t\t\t\tif ( 0 == changeCollection.length ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns a clone of a backbone model with all the attributes looped through so that collections contained within are propely cloned.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/cloneModelDeep',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'app' ).reply( 'clone:modelDeep', this.cloneModelDeep, this );\n\t\t},\n\n\t\tcloneModelDeep: function( model ) {\n\t\t\t// Temporary value used to store any new collections.\n\t\t\tvar replace = {};\n\t\t\t// Loop over every model attribute and if we find a collection, clone each model and instantiate a new collection.\n\t\t\t_.each( model.attributes, function( val, key ) {\n\t\t\t\t// console.log( val );\n\t\t\t\tif( val instanceof Backbone.Collection ) { // Is this a backbone collection?\n\t\t\t\t\t// Clone each model.\n\t\t\t\t\tvar models = val.map( function( model ) { return model.clone(); } );\n\t\t\t\t\tvar options = _.clone( val.options );\n\t\t\t\t\tvar copy = new val.constructor( models, options );\n\t\t\t\t\treplace[ key ] = copy;\n\t\t\t\t} else if ( val instanceof Backbone.Model ) { // Is this a backbone model?\n\t\t\t\t\treplace[ key ] = val.clone();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Clone our original model\n\t\t\tvar newModel = model.clone();\n\t\t\t// Overwrite any collections we created above.\n\t\t\t_.each( replace, function( val, key ) {\n\t\t\t\tnewModel.set( key, val );\n\t\t\t} );\n\n\t\t\treturn newModel;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Returns the appropriate child view for our settings drawer.\n *\n * This enables settings types to register custom childviews for their settings.\n * The option-repeater setting for the list field is an example.\n * \n * @package Ninja Forms builder\n * @subpackage App - Edit Settings Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/getSettingChildView',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for field settings child views.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t},\n\n\t\t/**\n\t\t * Return the appropriate child setting view.\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  backbone.model\tmodel \tField setting\n\t\t * @return backbone.view\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\t// Get our setting type.\n\t\t\tvar type = model.get( 'type' );\n\t\t\t// Request a setting childview from our setting type channel. (Setting type, not field type)\n\t\t\tvar settingChildView = nfRadio.channel( type ).request( 'get:settingChildView', model ) || itemSettingView;\n\t\t\t\n\t\t\treturn settingChildView\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Updates our model when the user changes a setting.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeSettingDefault',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to update settings.\n\t\t\tnfRadio.channel( 'app' ).reply( 'change:setting', this.changeSetting, this );\n\n\t\t\t// Listen on our app channel for the change setting event. Fired by the setting view.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'change:setting', this.changeSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change our setting, update the model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tsettingModel model that holds our field type settings info\n\t\t * @param  backbone.model \tdataModel       model that holds our field settings\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( e, settingModel, dataModel ) {\n\t\t\tvar name = settingModel.get( 'name' );\n\t\t\tvar before = dataModel.get( name );\n\t\t\t// Sends out a request on the fields-type (fields-text, fields-checkbox, etc) channel to see if that field type needs to return a special value for saving.\n\t\t\tvar value = nfRadio.channel( settingModel.get( 'type' ) ).request( 'before:updateSetting', e, dataModel, name, settingModel );\n\t\t\t// If we didn't get a special field-type value, get the value from the event passed.\n\t\t\tif ( 'undefined' == typeof value ) {\n\t\t\t\tvalue = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t// Update our field model with the new setting value.\n\t\t\tdataModel.set( name, value, { settingModel: settingModel } );\n\t\t\t// Register our setting change with our change tracker\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, this is a very specific work-around. It should be more generalized.\n\t\t\t */\n\t\t\tif ( 'toggle' == settingModel.get( 'type' ) ) {\n\t\t\t\tif ( 1 == before ) {\n\t\t\t\t\tbefore = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tbefore = 'Off';\n\t\t\t\t}\n\n\t\t\t\tif ( 1 == after ) {\n\t\t\t\t\tafter = 'On';\n\t\t\t\t} else {\n\t\t\t\t\tafter = 'Off';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Changed ' + settingModel.get( 'label' ) + ' from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","define( 'views/app/drawer/typeSettingFieldset',['views/app/drawer/itemSetting'], function( itemSettingView ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: itemSettingView,\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.collection = this.model.get( 'settings' );\n\t\t\tthis.childViewOptions = { dataModel: data.dataModel };\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) !== this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\t    \t\trenderSetting: function(){\n\t\t\t\t\tvar setting = _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html() );\n\t\t\t\t\treturn setting( this );\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderError: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\treturn this.error;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-field-sub-settings' ).append( childView.el );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Model that represents our setting.\n *\n * When the model is created, we trigger the init event in two radio channels.\n *\n * This lets specific types of settings modify the model before anything uses it.\n *\n * Fieldset, for instance, uses this hook to instantiate its settings as a collection.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tsettings: false,\n\t\t\thide_merge_tags: false,\n\t\t\terror: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Send out two messages saying that we've initialized a setting model.\n\t\t\tnfRadio.channel( 'app' ).trigger( 'init:settingModel', this );\n\t\t\tnfRadio.channel( this.get( 'type' ) ).trigger( 'init:settingModel', this );\n\t\t\tnfRadio.channel( 'setting-name-' + this.get( 'name' ) ).trigger( 'init:settingModel', this );\n\t\t\tthis.on( 'change:error', this.maybePreventUI, this );\n\n\t\t\t/*\n\t\t\t * If we have an objectType set on our collection, then we're creating a model for the generic settings collection.\n\t\t\t * If we're using merge tags in this setting\n\t\t\t */\n\n\t\t\tif( 'undefined' == typeof this.collection ) return;\n\n\t\t\tif ( this.get( 'use_merge_tags' ) && 'undefined' != typeof this.collection.options.objectType ) {\n\t\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'update:fieldKey', this.updateKey );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a field key is updated, send out a radio message requesting that this setting be checked for the old key.\n\t\t * We want to send the message on the objectType channel.\n\t\t * This means that if this setting is for fields, it will trigger on the fields channel, actions, etc.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Backbone.Model \tkeyModel data model representing the field for which the key just changed\n\t\t * @return void\n\t\t */\n\t\tupdateKey: function( keyModel ) {\n\t\t\tnfRadio.channel( this.collection.options.objectType ).trigger( 'update:fieldKey', keyModel, this );\n\t\t},\n\n\t\tmaybePreventUI: function() {\n\t\t\tif ( this.get( 'error' ) ) {\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'prevent:close', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'prevent:changeDomain', 'setting-' + this.get( 'name' ) + '-error' );\t\t\t\t\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'drawer' ).request( 'enable:close', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'enable:changeDomain', 'setting-' + this.get( 'name' ) + '-error' );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collections of settings for each field type.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingCollection',['models/app/settingModel'], function( settingModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingModel,\n\n\t\tinitialize: function( models, options ) {\n\t\t\tthis.options = options || {};\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles actions related to field settings that use a fieldset\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/fieldset',['views/app/drawer/typeSettingFieldset','models/app/settingCollection'], function( fieldsetView, settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'fieldset' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t// When a list type field is initialized, create an option collection.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldset' ), 'init:settingModel', this.createSettingsCollection );\n\t\t},\n\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn fieldsetView;\n\t\t},\n\n\t\t/**\n\t\t * Instantiate settings collection when a fieldset type is initialized.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model being initialized\n\t\t * @return void\n\t\t */\n\t\tcreateSettingsCollection: function( model ) {\n\t\t\tmodel.set( 'settings', new settingCollection( model.get( 'settings' ) ) );\n\t\t},\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our toggle field.\n * When we change the toggle, the setting value will be 'on' or ''.\n * We need to change this to 1 or 0.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/toggleSetting',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// We don't want the RTE setting to re-render when the value changes.\n\t\t\tnfRadio.channel( 'setting-type-toggle' ).reply( 'renderOnChange', function(){ return false } );\n\n\t\t\t// Respond to requests for field setting filtering.\n\t\t\tnfRadio.channel( 'toggle' ).reply( 'before:updateSetting', this.updateSetting, this );\n\t\t},\n\n\t\t/**\n\t\t * Return either 1 or 0, depending upon the toggle position.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te                event\n\t\t * @param  backbone.model \tfieldModel       field model\n\t\t * @param  string \t\t\tname             setting name\n\t\t * @param  backbone.model \tsettingTypeModel field type model\n\t\t * @return int              1 or 0\n\t\t */\n\t\tupdateSetting: function( e, fieldModel, name, settingTypeModel ) {\n\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\tvar value = 1;\n\t\t\t} else {\n\t\t\t\tvar value = 0;\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens for clicks on our action item action buttons.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Main Sortable\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemControls',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for clicks to edit, delete, duplicate actions.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:edit', this.clickEdit );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:delete', this.clickDelete );\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:duplicate', this.clickDuplicate );\n\n\t\t\t// Listen for our drawer close and remove our active edit state\n\t\t},\n\n\t\t/**\n\t\t * Open a drawer with our action model for editing settings.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickEdit: function( e, model ) {\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tvar type = nfRadio.channel( currentDomainID ).request( 'get:type' , model.get( 'type' ) );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: type.get( 'settingGroups' ) } );\n\t\t},\n\n\t\t/**\n\t\t * Delete a action model from our collection\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDelete: function( e, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', dataModel );\n\n\t\t\t// Add our action deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: dataModel.collection\n\t\t\t};\n\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\tvar results = changeCollection.where( { model: dataModel } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tvar data = changeModel.get( 'data' );\n\t\t\t\tif ( 'undefined' != typeof data.fields ) {\n\t\t\t\t\t_.each( data.fields, function( field, index ) {\n\t\t\t\t\t\tif ( field.model == dataModel ) {\n\t\t\t\t\t\t\tdata.fields[ index ].model = newModel;\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'data', data );\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeObject', newModel, null, label, data );\n\t\t\t\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\t\t\tnfRadio.channel( currentDomainID ).request( 'delete', dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Duplicate a action within our collection, adding the word \"copy\" to the label.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te     \tevent\n\t\t * @param  backbone.model \tmodel \taction model\n\t\t * @return void\n\t\t */\n\t\tclickDuplicate: function( e, model ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\t\t\tvar currentDomain = nfRadio.channel( 'app' ).request( 'get:currentDomain' );\n\t\t\tvar currentDomainID = currentDomain.get( 'id' );\n\n\t\t\t// Change our label.\n\t\t\tnewModel.set( 'label', newModel.get( 'label' ) + ' Copy' );\n\t\t\t// Update our ID to the new tmp id.\n\t\t\tvar tmpID = nfRadio.channel( currentDomainID ).request( 'get:tmpID' );\n\t\t\tnewModel.set( 'id', tmpID );\n\t\t\t// Add new model.\n\t\t\tnfRadio.channel( currentDomainID ).request( 'add', newModel );\n\t\t\t\n\t\t\t// Add our action addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: model.get( 'objectType' ),\n\t\t\t\tlabel: model.get( 'label' ),\n\t\t\t\tchange: 'Duplicated',\n\t\t\t\tdashicon: 'admin-page'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( currentDomainID ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'duplicateObject', newModel, null, label, data );\n\t\t\t\n\t\t\tmodel.trigger( 'change:label', model );\n\n\t\t\t// Update preview.\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Config file for our merge tags.\n *\n * this.collection represents all of our registered merge tags.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/mergeTags',[\n\t'models/app/mergeTagCollection'\n\t], function(\n\tmergeTagCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.tagSectionCollection = new mergeTagCollection();\n\t\t\tvar that = this;\n\t\t\t_.each( mergeTags, function( tagSection ) {\n\t\t\t\tif ( tagSection.tags ) {\n\t\t\t\t\tvar tags = new mergeTagCollection( tagSection.tags );\n\t\t\t\t} else {\n\t\t\t\t\tvar tags = '';\n\t\t\t\t}\n\n\t\t\t\tthat.tagSectionCollection.add( {\n\t\t\t\t\tid: tagSection.id,\n\t\t\t\t\tlabel: tagSection.label,\n\t\t\t\t\ttags: tags,\n\t\t\t\t\tdefault_group: tagSection.default_group\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tvar fieldTags = this.tagSectionCollection.get( 'fields').get( 'tags' );\n\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t// TODO: Make this dynamic\n\t\t\t\tif ( 'submit' !== field.get( 'type' ) ) {\n\t\t\t\t\tfieldTags.add( {\n\t\t\t\t\t\tid: field.get( 'id' ),\n\t\t\t\t\t\tlabel: field.get( 'label' ),\n\t\t\t\t\t\ttag: that.getFieldKeyFormat( field.get( 'key' ) )\n\t\t\t\t\t} );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tvar calcTags = new mergeTagCollection();\n\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tvar calcCollection = formModel.get( 'settings' ).get( 'calculations' );\n\t\t\t_.each( calcCollection, function( calc ) {\n\t\t\t\tcalcTags.add( {\n\t\t\t\t\tlabel: calc.name,\n\t\t\t\t\ttag: '{calc:' + calc.name + '}'\n\t\t\t\t} );\t\t\t\t\t\n\t\t\t\t\n\t\t\t} );\n\n\t\t\tthis.tagSectionCollection.get( 'calcs' ).set( 'tags', calcTags );\n\n\t\t\tthis.currentElement = {};\n\t\t\tthis.settingModel = {};\n\t\t\tthis.open = false;\n\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'init', this.initMergeTags, this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'mergeTags' ), 'click:mergeTag', this.clickMergeTag );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.addFieldTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'delete:field', this.deleteFieldTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater-calculations' ), 'update:option', this.updateCalcTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater-calculations' ), 'remove:option', this.updateCalcTags );\n\n\t\t\t\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:currentElement', this.updateCurrentElement, this );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:currentSetting', this.updateCurrentSetting, this );\n\n\t\t\t// Listen for requests for our mergeTag collection.\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:collection', this.getCollection, this );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'get:mergeTag', this.getSectionModel, this );\n\n\t\t\t// When we edit a key, check for places that key might be used.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-key' ), 'update:setting', this.updateKey );\n\n\t\t\t// Reply to requests to check a data model for a field key when one is updated.\n\t\t\tnfRadio.channel( 'app' ).reply( 'replace:fieldKey', this.replaceFieldKey, this );\n\n\t\t\t// Reply to requests to check a data model for a field key when one is updated.\n\t\t\tnfRadio.channel( 'app' ).reply( 'get:fieldKeyFormat', this.getFieldKeyFormat, this );\n\n\t\t\t/*\n\t\t\t * TODO: Hotkey support for adding tags.\n\t\t\t *\n\t\t\t\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'open:mergeTags', this.openMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'up:mergeTags', this.upMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'down:mergeTags', this.downMergeTags );\n\t\t\tthis.listenTo( nfRadio.channel( 'hotkeys' ), 'return:mergeTags', this.returnMergeTags );\n\t\t\tnfRadio.channel( 'mergeTags' ).reply( 'update:open', this.updateOpen, this );\n\t\t\t*/\n\t\t},\n\n\t\t/**\n\t\t * Init merge tags within the passed view.\n\t\t * @since  3.0\n\t\t * @param  backbone.view view to be searched for merge tags.\n\t\t * @return void\n\t\t */\n\t\tinitMergeTags: function( view ) {\n\t\t\tvar mergeTagsView = nfRadio.channel( 'mergeTags' ).request( 'get:view' );\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * Apply merge tags jQuery plugin.\n\t\t\t *\n\t\t\t * Prevent jBox from being called multiple times on the same element\n\t\t\t */\n\t\t\tthis.jBoxes = {};\n\t\t\tvar that = this;\n\t\t\tjQuery( view.el ).find( '.merge-tags' ).each(function() {\n\t\t\t\tif ( 'undefined' == typeof jQuery( this ).data( 'jBox-id' ) ) {\n\t\t\t\t\tvar jBox = jQuery( this ).jBox( 'Tooltip', {\n\t\t\t\t\t\ttitle: 'Insert Merge Tag',\n\t\t\t\t\t\ttrigger: 'click',\n\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\tx: 'center',\n\t\t\t\t\t\t\ty: 'bottom'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcloseOnClick: 'body',\n\t\t\t\t\t\tcloseOnEsc: true,\n\t\t\t\t\t\ttheme: 'TooltipBorder',\n\t\t\t\t\t\tmaxHeight: 200,\n\n\t\t\t\t\t\tonOpen: function() {\n\t\t\t\t\t\t\tmergeTagsView.reRender( view.model );\n\t\t\t\t\t\t\tthis.setContent( jQuery( '.merge-tags-content' ) );\n\t\t\t\t\t\t\tvar currentElement = jQuery( this.target ).prev( '.setting' );\n\t\t\t\t\t\t\tif ( 0 == currentElement.length ) {\n\t\t\t\t\t\t\t\tcurrentElement = jQuery( view.el ).find( '.setting' );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthat.updateCurrentSetting( view.model );\n\t\t\t\t\t\t\tthat.updateCurrentElement( currentElement );\n\t\t\t\t\t\t\t// nfRadio.channel( 'drawer' ).request( 'prevent:close', 'merge-tags' );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonClose: function() {\n\t\t\t\t\t\t\t// nfRadio.channel( 'drawer' ).request( 'enable:close', 'merge-tags' );\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tjQuery( this ).data( 'jBox-id', jBox.id );\t\t\t\t\t\n\t\t\t\t}\n\t\t    });\n\t\t},\n\n\t\tclickMergeTag: function( e, tagModel ) {\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, the RTE is the only section that modifies how merge tags work,\n\t\t\t * but another type of setting might need to do this in the future.\n\t\t\t */\n\t\t\tif ( 'rte' != this.settingModel.get( 'type' ) ) {\n\t\t\t\tvar currentValue = jQuery( this.currentElement ).val();\n\t\t\t\tvar currentPos = jQuery( this.currentElement ).caret();\n\t\t\t\tvar newPos = currentPos + tagModel.get( 'tag' ).length;\n\t\t\t\tcurrentValue = currentValue.substr( 0, currentPos ) + tagModel.get( 'tag' ) + currentValue.substr( currentPos );\n\t\t\t\tjQuery( this.currentElement ).val( currentValue ).caret( newPos ).trigger( 'change' );\t\t\t\t\n\t\t\t} else { // We're in an RTE\n\t\t\t\tjQuery( this.currentElement ).summernote( 'insertText', tagModel.get( 'tag' ) );\n\t\t\t}\n\n\t\t},\n\n\t\taddFieldTags: function( fieldModel ) {\n\t\t\t// TODO: Make this dynamic\n\t\t\tif ( 'submit' !== fieldModel.get( 'type' ) ) {\n\t\t\t\tthis.tagSectionCollection.get( 'fields' ).get( 'tags' ).add( {\n\t\t\t\t\tid: fieldModel.get( 'id' ),\n\t\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\t\ttag: this.getFieldKeyFormat( fieldModel.get( 'key' ) )\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tdeleteFieldTags: function( fieldModel ) {\n\t\t\tvar fieldID = fieldModel.get( 'id' );\n\t\t\tvar tagModel = this.tagSectionCollection.get( 'fields' ).get( 'tags' ).get( fieldID );\n\t\t\tthis.tagSectionCollection.get( 'fields' ).get( 'tags' ).remove( tagModel );\n\t\t},\n\n\t\tupdateCalcTags: function( optionModel ) {\n\t\t\tvar calcTags = new mergeTagCollection();\n\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\tvar calcCollection = formModel.get( 'settings' ).get( 'calculations' );\n\n\t\t\t_.each( calcCollection.models, function( calc ) {\n\t\t\t\tcalcTags.add( {\n\t\t\t\t\tlabel: calc.get( 'name' ),\n\t\t\t\t\ttag: '{calc:' + calc.get( 'name' ) + '}'\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tthis.tagSectionCollection.get( 'calcs' ).set( 'tags', calcTags );\n\t\t},\n\n\t\topenMergeTags: function( e ) {\n\t\t\tif ( 'TEXTAREA' == jQuery( e.target )[0].tagName || 'INPUT' == jQuery( e.target )[0].tagName ) {\n\t\t\t\tjQuery( e.target ).parent().find( '.merge-tags' ).click();\n\t\t\t}\n\t\t},\n\n\t\treturnMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tif ( currentModel ) {\n\t\t\t\t\tthis.clickMergeTag( e, currentModel );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'up' );\n\t\t\t}\n\t\t},\n\n\t\tdownMergeTags: function( e ) {\n\t\t\tif ( this.open ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.changeActiveTag( 'down' );\n\t\t\t}\n\t\t},\n\n\t\tchangeActiveTag: function( dir ) {\n\t\t\tif ( 'down' == dir ) {\n\t\t\t\tvar inc = 1;\n\t\t\t} else {\n\t\t\t\tvar inc = -1\n\t\t\t}\n\t\t\t// First, check to see if a field is currently active.\n\t\t\tif( 0 < this.fields.where( { 'active': true } ).length ) {\n\t\t\t\tvar currentModel = this.fields.where( { 'active': true } )[0];\n\t\t\t\tvar currentIndex = this.fields.indexOf( currentModel );\n\t\t\t\tcurrentModel.set( 'active', false );\n\n\t\t\t\tvar nextModel = this.fields.models[ currentIndex + inc ];\n\t\t\t\tif ( nextModel ) {\n\t\t\t\t\tnextModel.set( 'active', true );\n\t\t\t\t} else {\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if ( 0 < this.fields.where( { 'active': true } ) ) { // There aren't any active fields. Check for active system tags.\n\t\t\t\tconsole.log( 'system' );\n\t\t\t} else if ( 0 < this.userInfo.where( { 'active': true } ) ) { // No active user info LIs.\n\t\t\t\tconsole.log( 'userinfo' );\n\t\t\t} else { // No active LIs. We haven't made any active yet, or we've gotten to the bottom of the list.\n\t\t\t\t// Make sure that we have fields\n\t\t\t\tif ( 0 < this.fields.models.length ) {\n\t\t\t\t\t// Set our first field to active.\n\t\t\t\t\tthis.fields.models[0].set( 'active', true );\n\t\t\t\t} else {\n\t\t\t\t\t// Set our first system model to active.\n\t\t\t\t\tthis.system.models[0].set( 'active', true );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tupdateCurrentElement: function( element ) {\n\t\t\tthis.currentElement = element;\n\t\t},\n\n\t\tupdateCurrentSetting: function( settingModel ) {\n\t\t\tthis.settingModel = settingModel;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.tagSectionCollection;\n\t\t},\n\n\t\tgetSectionModel: function( id ) {\n\t\t\treturn this.tagSectionCollection.get( id );\n\t\t},\n\n\t\tupdateOpen: function( open ) {\n\t\t\tthis.open = open;\n\t\t\t_.each( this.tagSectionCollection.get( 'fields' ).models, function( model ) {\n\t\t\t\tmodel.set( 'active', false );\n\t\t\t} );\n\t\t},\n\n\t\tupdateKey: function( fieldModel ) {\n\t\t\tvar newKey = fieldModel.get( 'key' );\n\t\t\tvar oldTag = this.tagSectionCollection.get( 'fields' ).get( 'tags' ).get( fieldModel.get( 'id' ) );\n\t\t\tif ( 'undefined' != typeof oldTag ) {\n\t\t\t\toldTag.set( 'tag', this.getFieldKeyFormat( newKey ) );\t\t\t\t\n\t\t\t}\n\n\t\t},\n\n\t\tgetFieldKeyFormat: function( key ) {\n\t\t\treturn '{field:' + key + '}';\n\t\t},\n\n\t\treplaceFieldKey: function( dataModel, keyModel, settingModel ) {\n\t\t\tvar oldKey = this.getFieldKeyFormat( keyModel._previousAttributes[ 'key' ] );\n\t\t\tvar newKey = this.getFieldKeyFormat( keyModel.get( 'key' ) );\n\t\t\tvar settingName = settingModel.get( 'name' );\n\t\t\tvar oldVal = dataModel.get( settingName );\n\t\t\tif ( 'string' == typeof oldVal ) {\n\t\t\t\tvar re = new RegExp( oldKey, 'g' );\n\t\t\t\tnewVal = oldVal.replace( re, newKey );\n\t\t\t\tdataModel.set( settingName, newVal );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're about to render a setting model that's a select and has 'fields' as the 'fill' setting, add all our field models to its options.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/itemSettingFill',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel ) {\n\t\t\tif ( 'fields' == settingModel.get( 'fill' ) ) {\n\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Modify the user's browser history when they click on a domain\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/confirmPublish',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:confirmPublish', this.confirmPublish );\n\t\t},\n\n\t\tconfirmPublish: function() {\n\t\t\tvar formModel = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\t\t\t// Check to see if we need to add a submit button.\n\t\t\tif ( 1 == formModel.get( 'settings' ).get( 'add_submit' ) ) {\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'add', { type: 'submit', label: 'Submit', order: 9999 } );\n\t\t\t}\n\t\t\tformModel.set( 'show_publish_options', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db', 'publish' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to settings that utilise the Rich Text Editor\n *\n * @package Ninja Forms builder\n * @subpackage App - Settings Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/rte',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// We don't want the RTE setting to re-render when the value changes.\n\t\t\tnfRadio.channel( 'setting-type-rte' ).reply( 'renderOnChange', function(){ return false } );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'rte' ), 'init:settingModel', this.initSettingModel );\n\n\t\t\t// When an RTE setting is shown, re-render RTE.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'render:setting', this.renderSetting );\n\n\t\t\t// When an RTE setting view is destroyed, remove our RTE.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'destroy:setting', this.destroySetting );\n\n\t\t\t// When an element within the RTE is clicked, check to see if we should insert a link.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-rte' ), 'click:extra', this.clickExtra );\n\n\t\t\t// Instantiates the variable that holds the media library frame.\n\t\t\tthis.meta_image_frame;\n\n\t\t\tjQuery.summernote.options.icons = {\n\t\t        'align': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignCenter': 'dashicons dashicons-editor-aligncenter',\n\t\t        'alignJustify': 'dashicons dashicons-editor-justify',\n\t\t        'alignLeft': 'dashicons dashicons-editor-alignleft',\n\t\t        'alignRight': 'dashicons dashicons-editor-alignright',\n\t\t        'indent': 'dashicons dashicons-editor-indent',\n\t\t        'outdent': 'dashicons dashicons-editor-outdent',\n\t\t        // 'arrowsAlt': 'dashicons fa-arrows-alt',\n\t\t        'bold': 'dashicons dashicons-editor-bold',\n\t\t        'caret': 'dashicons dashicons-arrow-down',\n\t\t        // 'circle': 'dashicons fa-circle',\n\t\t        'close': 'dashicons dashicons-dismiss',\n\t\t        'code': 'dashicons dashicons-editor-code',\n\t\t        'eraser': 'dashicons dashicons-editor-removeformatting',\n\t\t        // 'font': 'dashicons fa-font',\n\t\t        // 'frame': 'dashicons fa-frame',\n\t\t        'italic': 'dashicons dashicons-editor-italic',\n\t\t        'link': 'dashicons dashicons-admin-links',\n\t\t        'unlink': 'dashicons dashicons-editor-unlink',\n\t\t        'magic': 'dashicons dashicons-editor-paragraph',\n\t\t        // 'menuCheck': 'dashicons fa-check',\n\t\t        'minus': 'dashicons dashicons-minus',\n\t\t        'orderedlist': 'dashicons dashicons-editor-ol',\n\t\t        // 'pencil': 'dashicons fa-pencil',\n\t\t        // 'picture': 'dashicons fa-picture-o',\n\t\t        // 'question': 'dashicons fa-question',\n\t\t        'redo': 'dashicons dashicons-redo',\n\t\t        'square': 'dashicons fa-square',\n\t\t        // 'strikethrough': 'dashicons fa-strikethrough',\n\t\t        // 'subscript': 'dashicons fa-subscript',\n\t\t        // 'superscript': 'dashicons fa-superscript',\n\t\t        'table': 'dashicons dashicons-editor-table',\n\t\t        // 'textHeight': 'dashicons fa-text-height',\n\t\t        // 'trash': 'dashicons fa-trash',\n\t\t        'underline': 'dashicons dashicons-editor-underline',\n\t\t        'undo': 'dashicons dashicons-undo',\n\t\t        'unorderedlist': 'dashicons dashicons-editor-ul',\n\t\t        // 'video': 'dashicons fa-youtube-play'\n\t\t      }\n\n\t\t      this.currentContext = {};\n\t\t},\n\n\t\tinitSettingModel: function( settingModel ) {\n\t\t\tsettingModel.set( 'hide_merge_tags', true );\n\t\t},\n\n\t\tinitRTE: function( settingModel, dataModel, settingView ) {\n\t\t\t/*\n\t\t\t * Custom Button for links\n\t\t\t */\n\t\t\tvar that = this;\n\t\t\t// var linkButton = this.linkButton();\n\t\t\tvar linkButton = function( context ) {\n\t\t\t\treturn that.linkButton( context );\n\t\t\t}\n\t\t\tvar mediaButton = function( context ) {\n\t\t\t\treturn that.mediaButton( context );\n\t\t\t}\n\t\t\tvar mergeTags = this.mergeTags();\n\n\t\t\tvar toolbar = [\n\t\t\t\t[ 'paragraphStyle', ['style'] ],\n\t\t\t\t[ 'fontStyle', [ 'bold', 'italic', 'underline','clear' ] ],\n\t\t\t\t[ 'lists', [ 'ul', 'ol' ] ],\n\t\t\t    [ 'paragraph', [ 'paragraph' ] ],\n\t\t\t    [ 'customGroup', [ 'linkButton', 'unlink' ] ],\n\t\t\t    [ 'table', [ 'table' ] ],\n\t\t\t    [ 'actions', [ 'undo', 'redo' ] ],\n\t\t\t    [ 'tools', [ 'mediaButton', 'mergeTags', 'codeview' ] ]\n\t\t\t];\n\n\t\t\tjQuery( settingView.el ).find( 'div.setting' ).summernote( {\n\t\t\t\ttoolbar: toolbar,\n\t\t\t\tbuttons: {\n\t\t\t\t\tlinkButton: linkButton,\n\t\t\t\t\tmergeTags: mergeTags,\n\t\t\t\t\tmediaButton: mediaButton\n\t\t\t\t},\n\t\t\t\theight: 150,   //set editable area's height\n\t\t\t\tcodemirror: { // codemirror options\n\t\t\t\t    theme: 'monokai',\n\t\t\t\t    lineNumbers: true,\n\t\t\t\t    callbacks: {\n\t\t\t\t    \tonBlur: function( editor ) {\n\t\t\t\t    \t\tvar value = editor.getValue();\n\t\t\t\t    \t\tthat.updateDataModel( settingModel, dataModel, value );\n\t\t\t\t    \t}\n\t\t\t\t    }\n\t\t\t\t},\n\t\t\t\tprettifyHtml: true,\n\t\t\t\tcallbacks: {\n\t\t\t\t\tonBlur: function() {\n\t\t\t\t\t\tvar value = jQuery( this ).summernote( 'code' );\n\t\t\t\t\t\tthat.updateDataModel( settingModel, dataModel, value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tupdateDataModel: function( settingModel, dataModel, value ) {\n\t\t\tvar name = settingModel.get( 'name' );\n\t\t\tvar before = dataModel.get( name );\n\t\t\tvar after = value;\n\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Changed ' + settingModel.get( 'label' ) + ' from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', dataModel, changes, label );\n\n\t\t\tdataModel.set( settingModel.get( 'name' ), after );\n\t\t},\n\n\t\trenderSetting: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.initRTE( settingModel, dataModel,settingView );\n\t\t},\n\n\t\tdestroySetting: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.removeRTE( settingModel, dataModel, settingView );\n\t\t},\n\n\t\tremoveRTE: function( settingModel, dataModel, settingView ) {\n\t\t\tjQuery( settingView.el ).find( 'div.setting' ).summernote( 'destroy' );\n\t\t},\n\n\t\tdrawerOpened: function( settingModel, dataModel, settingView ) {\n\t\t\tthis.initRTE( settingModel, dataModel, settingView );\n\t\t},\n\n\t\tlinkButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar linkButton = _.template( jQuery( '#nf-tmpl-rte-link-button' ).html() );\n\t\t\tvar linkDropdown = _.template( jQuery( '#nf-tmpl-rte-link-dropdown' ).html() );\n\t\t\treturn ui.buttonGroup([\n\t\t\t\tui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: linkButton({}),\n\t            tooltip: 'Insert Link',\n\t            click: function( e ) {\n\t            \tthat.clickLinkButton( e, context );\n\t            },\n\t            data: {\n\t              toggle: 'dropdown'\n\t            }\n\t          }),\n\t\t\t\tui.dropdown([\n\t            ui.buttonGroup({\n\t              children: [\n\t                ui.button({\n\t                  contents: linkDropdown({}),\n\t                  tooltip: ''\n\t                }),\n\t              ]\n\t            })\n\t          ])\n\t\t\t]).render();\n\t\t},\n\n\t\tmergeTags: function( context ) {\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mergeTagsButton = _.template( jQuery( '#nf-tmpl-rte-merge-tags-button' ).html() );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mergeTagsButton({}),\n\t            tooltip: 'Merge Tags'\n\t          }).render();\n\t\t},\n\n\t\tmediaButton: function( context ) {\n\t\t\tvar that = this;\n\t\t\tvar ui = jQuery.summernote.ui;\n\t\t\tvar mediaButton = _.template( jQuery( '#nf-tmpl-rte-media-button' ).html() );\n\t\t\treturn ui.button({\n\t            className: 'dropdown-toggle',\n\t            contents: mediaButton({}),\n\t            tooltip: 'Insert Media',\n\t            click: function( e ) {\n\t            \tthat.openMediaManager( e, context );\n\t            }\n\t          }).render();\n\t\t},\n\n\t\topenMediaManager: function( e, context ) {\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\t// If the frame already exists, re-open it.\n\t\t\tif ( this.meta_image_frame ) {\n\t\t\t\tthis.meta_image_frame.open();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Sets up the media library frame\n\t\t\tthis.meta_image_frame = wp.media.frames.meta_image_frame = wp.media({\n\t\t\t\ttitle: 'Select a file',\n\t\t\t\tbutton: { text:  'insert' }\n\t\t\t});\n\n\t\t\tvar that = this;\n\n\t\t\t// Runs when an image is selected.\n\t\t\tthis.meta_image_frame.on('select', function(){\n\n\t\t\t\t// Grabs the attachment selection and creates a JSON representation of the model.\n\t\t\t\tvar media_attachment = that.meta_image_frame.state().get('selection').first().toJSON();\n\t\t\t\tthat.insertMedia( media_attachment, context );\n\t\t\t});\n\n\t\t\t// Opens the media library frame.\n\t\t\tthis.meta_image_frame.open();\n\t\t},\n\n\t\tclickLinkButton: function ( e, context ) {\n\t\t\tvar range = context.invoke( 'editor.createRange' );\n\t\t\tcontext.invoke( 'editor.saveRange' );\n\t\t\tvar text = range.toString()\n\t\t\tthis.currentContext = context;\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('hide.bs.dropdown', function ( e ) {\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tjQuery( e.target ).closest( '.note-customGroup > .note-btn-group' ).on ('shown.bs.dropdown', function ( e ) {\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-text' ).val( text );\n\t\t\t\tjQuery( e.target ).parent().parent().find( '.link-url' ).focus();\n\t\t\t});\n\t\t},\n\n\t\tclickExtra: function( e, settingModel, dataModel, settingView ) {\n\t\t\tvar textEl = jQuery( e.target ).parent().find( '.link-text' );\n\t\t\tvar urlEl = jQuery( e.target ).parent().find( '.link-url' );\n\t\t\tvar isNewWindowEl = jQuery( e.target ).parent().find( '.link-new-window' );\n\t\t\tthis.currentContext.invoke( 'editor.restoreRange' );\n\t\t\tif ( jQuery( e.target ).hasClass( 'insert-link' ) ) {\n\t\t\t\tvar text = textEl.val();\n\t\t\t\tvar url = urlEl.val();\n\t\t\t\tvar isNewWindow = ( isNewWindowEl.prop( 'checked' ) ) ? true: false;\n\t\t\t\tif ( 0 != text.length && 0 != url.length ) {\n\t\t\t\t\tthis.currentContext.invoke( 'editor.createLink', { text:text, url: url, isNewWindow: isNewWindow } );\n\t\t\t\t}\n\t\t\t}\n\t\t\ttextEl.val( '' );\n\t\t\turlEl.val( '' );\n\t\t\tisNewWindowEl.prop( 'checked', false );\n\t\t\tjQuery( e.target ).closest( 'div.note-btn-group.open' ).removeClass( 'open' );\n\t\t},\n\n\t\tinsertMedia: function( media, context ) {\n\t\t\tcontext.invoke( 'editor.restoreRange' );\n\t\t\tif ( 'image' == media.type ) {\n\t\t\t\tcontext.invoke( 'editor.insertImage', media.url );\n\t\t\t} else {\n\t\t\t\tcontext.invoke( 'editor.createLink', { text: media.filename, url: media.url } );\n\t\t\t}\n\n\t\t}\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Listens to our app channel for the app to start.\n *\n * If the form is a new form, then highlight the Add New submenu item.\n * Otherwise, append an Edit Form submenu for context.\n *\n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/changeMenu',[], function() {\n    var controller = Marionette.Object.extend({\n\n        editFormText: '',\n\n        initialize: function () {\n            this.editFormText = nfAdmin.editFormText || 'Edit Form';\n            this.listenTo(nfRadio.channel('app'), 'after:appStart', this.changeMenu);\n            this.listenTo( nfRadio.channel( 'app' ), 'response:updateDB', this.formPublish );\n        },\n\n        changeMenu: function () {\n            var form = nfRadio.channel( 'app' ).request( 'get:formModel' );\n\n            if ( this.isNewForm( form.id ) ) {\n                this.highlightAddNew();\n            } else {\n                this.appendEditForm();\n            }\n        },\n\n        isNewForm: function( form_id ) {\n            return isNaN( form_id );\n        },\n\n        highlightAddNew: function() {\n            jQuery( '.wp-submenu li' ).removeClass( 'current' );\n            jQuery( 'a[href=\"admin.php?page=ninja-forms&form_id=new\"]' ).parent().addClass( 'current' );\n        },\n\n        appendEditForm: function() {\n            var html = '<li class=\"current\"><a href=\"#\">' + this.editFormText + '</a></li>';\n            if ( jQuery( 'li a:contains(\"' + this.editFormText + '\")' ).length == 0 ) {\n                jQuery( '.wp-submenu li' ).removeClass( 'current' );\n                jQuery( 'a[href=\"admin.php?page=ninja-forms&form_id=new\"]' ).parent().after( html );\n            }\n        },\n\n        formPublish: function( response ) {\n            if ( 'publish' !== response.action ) return false;\n            this.changeMenu();\n        }\n    });\n\n    return controller;\n});\n","/**\n * When we click on a domain link, close the mobile menu.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/mobile',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for clicks on our app menu.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'click:menu', this.closeMobileMenu );\n\t\t},\n\n\t\tcloseMobileMenu: function() {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tjQuery( builderEl ).removeClass( 'nf-menu-expand' );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Add a jBox notice to the screen.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/notices',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'notices' ).reply( 'add', this.addNotice, this );\n\t\t\tnfRadio.channel( 'notices' ).reply( 'close', this.closeNotice, this );\n\t\t\tthis.notices = {};\n\t\t},\n\n\t\taddNotice: function( key, msg, options ) {\n\n\t\t\tvar appDefaults = {\n\t\t\t\tcontent: msg,\n\t\t\t\tcolor: 'green',\n\t\t\t\tzIndex:12000,\n\t\t\t\tconstructOnInit: true,\n\t\t\t\tstack: true,\n\t\t\t\tanimation: {\n\t\t\t\t\topen: 'flip',\n\t\t\t\t\tclose: 'flip'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar mobileDefaults = {\n\t\t\t\tposition: {\n\t\t\t\t\tx: 'center',\n\t\t\t\t\ty: 'top'\n\t\t\t\t},\n\t\t\t\tanimation: {\n\t\t\t\t\topen:'slide:top',\n\t\t\t\t\tclose:'slide:left'\n\t\t\t\t},\n\t\t\t\tautoClose: 2000,\n\t\t\t\toffset: {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 55\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar desktopDefaults = {\n\t\t\t\tattributes: {\n\t\t\t\t\tx: 'left',\n\t\t\t\t\ty: 'bottom'\n\t\t\t\t},\n\t\t\t\tautoClose: 4000\n\t\t\t};\n\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tvar defaults = mobileDefaults;\t\n\t\t\t} else {\n\t\t\t\tvar defaults = desktopDefaults;\n\t\t\t}\n\t\t\tdefaults = jQuery.extend( defaults, appDefaults );\n\n\t\t\tvar options = jQuery.extend( defaults, options );\n\t\t\t// console.log( options );\n\t\t\tthis.notices[ key ] = new jBox( 'Notice', options );\n\t\t},\n\n\t\tcloseNotice: function( key ) {\n\t\t\tif ( 'undefined' != typeof this.notices[ key ] ) {\n\t\t\t\tthis.notices[ key ].close();\n\t\t\t}\n\t\t},\n\n\t\topenNotice: function( key ) {\n\t\t\tif ( 'undefined' != typeof this.notices[ key ] ) {\n\t\t\t\tthis.notices[ key ].open();\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Prompt the user to save if they attempt to leave the page with unsaved changes.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/unloadCheck',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tjQuery( window ).bind( 'beforeunload', this.maybePrompt );\n\t\t},\n\n\t\tmaybePrompt: function( model ) {\n\t\t\t// If our app is clean, don't show a warning.\n\t\t\tif ( ! nfRadio.channel( 'app' ).request( 'get:setting', 'clean' ) ) {\n\t\t\t\treturn 'You have unsaved changes.';\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Before we save data to the database (on preview update or publish), we check to see if we have anyone\n * that wants to update the 'fieldContents' form setting. This setting is used on the front-end to allow\n * for custom display of form fields. i.e. layout rows.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/fieldContentsFilters',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Init our fieldContents view filter array.\n\t\t\t */\n\t\t\tthis.viewFilters = [];\n\t\t\tthis.saveFilters = [];\n\t\t\tthis.loadFilters = [];\n\n\t\t\t/*\n\t\t\t * Listen for requests to add new fieldContent filters. \n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:viewFilter', this.addViewFilter, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:saveFilter', this.addSaveFilter, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'add:loadFilter', this.addLoadFilter, this );\n\n\t\t\t/*\n\t\t\t * Listen for requests to get our fieldContent filters.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:viewFilters', this.getViewFilters, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:saveFilters', this.getSaveFilters, this );\n\t\t\tnfRadio.channel( 'fieldContents' ).reply( 'get:loadFilters', this.getLoadFilters, this );\n\t\t},\n\n\t\taddViewFilter: function( callback, priority ) {\n\t\t\tthis.viewFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetViewFilters: function() {\n\t\t\treturn this.viewFilters;\n\t\t},\n\n\t\taddSaveFilter: function( callback, priority ) {\n\t\t\tthis.saveFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetSaveFilters: function() {\n\t\t\treturn this.saveFilters;\n\t\t},\n\n\t\taddLoadFilter: function( callback, priority ) {\n\t\t\tthis.loadFilters[ priority ] = callback;\n\t\t},\n\n\t\tgetLoadFilters: function() {\n\t\t\treturn this.loadFilters;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our field type\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field type models. \n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/typeCollection',['models/app/typeModel'], function( typeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tdisplay: false\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection of our type settings groups.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/settingGroupCollection',['models/app/settingGroupModel'], function( settingGroupModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: settingGroupModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Model that represents our field type section on the add new field drawer.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tclasses: ''\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/typeSectionCollection',['models/fields/typeSectionModel'], function( typeSectionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: typeSectionModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Creates and stores a collection of field types. This includes all of the settings shown when editing a field.\n *\n * 1) Create our settings sections config\n * 2) Loops over our preloaded data and adds that to our field type collection\n *\n * Also responds to requests for data about field types\n *\n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t'models/fields/typeSectionCollection'\n\t], function(\n\tfieldTypeCollection,\n\tsettingCollection,\n\tfieldTypeSettingGroupCollection,\n\tfieldTypeSectionCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new fieldTypeCollection();\n\t\t\t// Config for our settings sections\n\t\t\tthis.fieldTypeSections = new fieldTypeSectionCollection( fieldTypeSections );\n\n\t\t\t// Since we want to access the \"this\" context later, we assign it to that so it isn't overwritten\n\t\t\tvar that = this;\n\n\t\t\t// Loop through the field type data variable and add it to the field type collection array\n\t\t\t_.each( fieldTypeData, function ( type ) {\n\t\t\t\tvar settingGroups = new fieldTypeSettingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Add our field type to the appropriate drawer section.\n\t\t\t\tif ( 'undefined' != typeof that.fieldTypeSections.get( type.section ) ) {\n\t\t\t\t\tthat.fieldTypeSections.get( type.section ).get( 'fieldTypes' ).push( type.id );\n\t\t\t\t}\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar fieldType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\ttype: type.type,\n\t\t\t\t\tnicename: type.nicename,\n                    icon: type.icon,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tparentType: type.parentType,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults\n\t\t\t\t}\n\t\t\t\t// Add tmp object to our field type collection\n\t\t\t\tthat.collection.add( fieldType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:type', this.getFieldType, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeCollection', this.getTypeCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:typeSections', this.getTypeSections, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:savedFields', this.getSavedFields, this );\n\t\t\t// Listen to clicks on field types\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:fieldType', this.addStagedField );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetFieldType: function( id ) {\n        \treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the entire field type collection\n         *\n         * @since  3.0\n         * @param  string \t\t\t\tid \t[description]\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetTypeCollection: function( id ) {\n        \treturn this.collection;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        },\n\n        /**\n         * Return our saved fields\n         *\n         * @since  3.0\n         * @return backbone.collection\n         */\n        getSavedFields: function() {\n        \tthis.fieldTypeSections.get( 'saved' );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles the logic for our field type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldTypeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addField' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the dragging of our field staging area\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the start and stop of our field staging dragging\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.stopDrag );\n\t\t},\n\n\t\t/**\n\t\t * When the user starts dragging the staging area, we have to:\n\t\t * set the overflow property of the drawer to visible !important. If we don't, the button goes underneath the main section.\n\t\t * set the overflow proerty of the main to visible !important. If we don't, the dragged element goes underneath the drawer.\n\t\t * replace our helper with the stacked \"x fields\" template.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\tvar html = _.template( jQuery( '#nf-tmpl-staged-fields-drag' ).html() );\n\t\t\tjQuery( ui.helper ).html( html( { num: stagedFields.models.length } ) );\n\t\t\tjQuery( ui.helper ).prop( 'id', 'nf-staged-fields-drag' );\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.7' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging the staging area, we have to set the overflow property to hidden !important\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t context jQuery UI Draggable\n\t\t * @param  Object\t ui      jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles most things related to our staging area:\n * 1) Creates a collection\n * 2) Listens for requests to CRUD items from the collection\n * 3) Adds our staged fields to the fields sortable when the drawer is closed\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/staging',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our staged fields collection\n\t\t\tthis.collection = new stagingCollection();\n\t\t\t// Respond to requests related to our staging area.\n\t\t    nfRadio.channel( 'fields' ).reply( 'add:stagedField', this.addStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'remove:stagedField', this.removeStagedField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:staging', this.getStagingCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:staging', this.sortStagedFields, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:staging', this.clearStagedFields, this );\n\t\t\t// Listen to our remove staged field click event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'click:removeStagedField', this.removeStagedField );\n\t\t\t// Listen to our event that fires just before a drawer is closed.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'before:closeDrawer', this.beforeCloseDrawer );\n\t\t},\n\n\t\tgetStagingCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our staging area\n\t\t * \n\t\t * @since 3.0\n\t\t * @param string type Type of field we're adding\n\t\t * @return tmpID\n\t\t */\n\t\taddStagedField: function( type, silent ) {\n\t\t\tvar silent = silent || false;\n\t\t\t// Get our type model from the string.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t// Our tmp ID is a string with the time appended to make it unique.\n\t\t\tvar tmpID = 'nf-staged-field-' + jQuery.now();\n\t\t\t// Object that will be added to our staging collection.\n\t\t\tvar data = {\n\t\t\t\tid: tmpID,\n\t\t\t\t// i.e. firstname, textbox, etc.\n\t\t\t\tslug: fieldType.get( 'type' ),\n\t\t\t\t// i.e. First Name, Textbox, etc.\n\t\t\t\tnicename: fieldType.get( 'nicename' ),\n\t\t\t\t// i.e. calendar, envelope, etc.\n\t\t\t\ticon: fieldType.get( 'icon' )\n\t\t\t}\n\t\t\t// \n\t\t\tvar model = this.collection.add( data );\n\n\t\t\tif( ! silent ) nfRadio.channel( 'fields').trigger( 'add:stagedField', model );\n\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * Remove a field from staging\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \t\t\te     \tEvent\n\t\t * @param  Backbone.model \tmodel \tstaged field model to remove\n\t\t * @return void\n\t\t */\n\t\tremoveStagedField: function( e, model ) {\n\t\t\tthis.collection.remove( model );\n\t\t},\n\n\t\t/**\n\t\t * Adds our staged fields to the main fields sortable before the drawer is closed.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tbeforeCloseDrawer: function() {\n\t\t\tif ( 0 != this.collection.models.length ) { // Make sure that we have models\n\t\t\t\t// Get our field collection.\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\n\t\t\t\tvar fields = [];\n\t\t\t\t// Loop through our staging collection\n\t\t\t\t_.each( this.collection.models, function( model ) {\n\t\t\t\t\t// Get a tmp ID for our new field.\n\t\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpID' );\n\t\t\t\t\t// Create an object that can be added as a model.\n\t\t\t\t\tvar tmpField = { id: tmpID, label: model.get( 'nicename' ), type: model.get( 'slug' ) };\n\t\t\t\t\t// Add our new field.\n\t\t\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  tmpField, false );\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Field',\n\t\t\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: fieldCollection\n\t\t\t\t\t}\n\t\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\t\t} );\n\t\t\t\t// Trigger a reset on our field collection so that our view re-renders\n\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t// Empty the staging collection\n\t\t\t\tthis.collection.reset();\n\t\t\t}\n\t\t\t// Sort our fields.\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\t\t},\n\n\t\t/**\n\t\t * Sort our staging area by the 'order' attribute.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tsortStagedFields: function() {\n\t\t\t// Get our staged fields sortable.\n\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t// Get the current order using jQuery sortable. Will be an array of IDs: [tmp-blah, tmp-blah]\n\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t// Loop through our models\n\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t// Search our order array for this field.\n\t\t\t\tvar search = field.get( 'id' );\n\t\t\t\tvar pos = order.indexOf( search );\n\t\t\t\t// Update our staged field model with the new order.\n\t\t\t\tfield.set( 'order', pos );\n\t\t\t} );\n\t\t\t// Sort our staging collection.\n\t\t\tthis.collection.sort();\n\t\t},\n\n\t\tclearStagedFields: function() {\n\t\t\tthis.collection.reset();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles actions related to our staged fields sortable.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/stagingSortable',['models/fields/stagingCollection'], function( stagingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our field type draggables\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// Listen to our sortable events\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'receive:stagedFields', this.receiveStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'over:stagedFields', this.overStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'out:stagedFields', this.outStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'start:stagedFields', this.startStagedFields );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stop:stagedFields', this.stopStagedFields );\n\t\t},\n\n\t\t/**\n\t\t * Change our dropped field type helper so that it matches the other items in our sortable.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI item\n\t\t * @return void\n\t\t */\n\t\treceiveStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\tnfRadio.channel( 'drawer-addField' ).trigger( 'drop:fieldType', type );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add an active class to our sortable when a field type item is dragged\n\t\t * \n\t\t * @since 3.0\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).addClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable when the field type item is dropped.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar stagedFieldsEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\tjQuery( stagedFieldsEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * When the field type item is dragged over our sortable, we change the helper to match the sortable items.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \te  event\n\t\t * @param  Object \tui jQuery UI Element\n\t\t * @return void\n\t\t */\n\t\toverStagedFields: function( e, ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\tvar nicename = fieldType.get( 'nicename' );\n\t\t\t\tthis.currentHelper = ui.helper \n\t\t\t\tjQuery( ui.helper ).html( nicename + '<span class=\"dashicons dashicons-dismiss\"></span>' );\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-field-type-button' ).addClass( 'nf-item-dock' ).css( { 'opacity': '0.8', 'width': '', 'height': '' } );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a field type item is moved away from our sortable, we change the helper to its previous appearance\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutStagedFields: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\t\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-item-dock' ).addClass( 'nf-field-type-button' );\n\t\t\t\tvar sortableEl = nfRadio.channel( 'app' ).request( 'get:stagedFieldsEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t},\n\n\t\t/**\n\t\t * When a user starts to drag a sortable item, we need to set a few properties on the item and the helper.\n\t\t * These keep the original item in place while dragging and changes the opacity of the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).show();\n\t\t\tjQuery( ui.item ).css( { 'display': 'inline', 'opacity': '0.7' } );\n\t\t\tjQuery( ui.helper ).css( 'opacity', '0.5' );\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging a sortable item, remove our opacity setting and remove the helper item.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopStagedFields: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\tjQuery( ui.helper ).remove();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Filters our field type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/filterTypes',['models/fields/typeSectionCollection'], function( fieldTypeSectionCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'change:filter', this.filterFieldTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our field types in the add new field drawer\n\t\t * \n\t\t * Takes a search string and finds any field types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterFieldTypes: function( search, e ) {\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n        \t\tvar filtered = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filtered array.\n        \t\t */\n        \t\t_.each( this.filterCollection( search ), function( model ) {\n        \t\t\tfiltered.push( model.get( 'id' ) );\n        \t\t} );\n\n        \t\t// Create a new Field Type Section collection with the filtered array.\n        \t\tvar filteredSectionCollection = new fieldTypeSectionCollection( [\n\t\t\t\t{ \n\t\t\t\t\tid: 'filtered',\n\t\t\t\t\tnicename: 'Filtered Fields',\n\t\t\t\t\tfieldTypes: filtered\n\t\t\t\t}\n\t\t\t\t] );\n\n        \t\t// Request that our field types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:fieldTypes', filteredSectionCollection );\n        \t\t// If we've pressed the 'enter' key, add the field to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < filtered.length ) {\n        \t\t\t\tnfRadio.channel( 'fields' ).request( 'add:stagedField', filtered[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our field type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search ) {\n        \tsearch = search.toLowerCase();\n        \t// Get our list of field types\n        \tvar collection = nfRadio.channel( 'fields' ).request( 'get:typeCollection' );\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'type' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles all the actions/functions related to our main field sortable.\n * All of the actual logic for our sortable is held here; the view just calls it using nfRadio.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/sortable',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When our field type buttons are dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:type', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:type', this.removeActiveClass );\n\t\t\t// When our field staging is dragged, we need to add or remove the active (blue) class.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'startDrag:fieldStaging', this.addActiveClass );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addField' ), 'stopDrag:fieldStaging', this.removeActiveClass );\n\t\t\t/*\n\t\t\t * Handles all the events fired by our sortable:\n\t\t\t * receive - dropped from type button or staging\n\t\t\t * over - dragging within or over the sortable\n\t\t\t * out - leaving the sortable\n\t\t\t * stop - stopped sorting/dragging\n\t\t\t * start - started sorting/dragging\n\t\t\t * update - stopped sorting/dragging and order has changed\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).reply( 'receive:fieldsSortable', this.receiveFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'over:fieldsSortable', this.overfieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'out:fieldsSortable', this.outFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'stop:fieldsSortable', this.stopFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'start:fieldsSortable', this.startFieldsSortable, this );\n\t\t\tnfRadio.channel( 'app' ).reply( 'update:fieldsSortable', this.updateFieldsSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Add the active class to our sortable so that its border is blue.\n\t\t * \n\t\t * @since 3.0\n\t\t * @return void\n\t\t */\n\t\taddActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-active' );\t\n\t\t},\n\n\t\t/**\n\t\t * Remove the active class from our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tremoveActiveClass: function() {\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-active' );\n\t\t},\n\n\t\t/**\n\t\t * Fires when we drop a field type button or staging onto our sortable\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\treceiveFieldsSortable: function( ui ) {\n\t\t\t/*\n\t\t\t * We have to do different things if we're dealing with a field type button or staging area.\n\t\t\t */ \n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) ) { // Field Type Button\n\t\t\t\t// Get our type string\n\t\t\t\tvar type = jQuery( ui.item ).data( 'id' );\n\t\t\t\t// Add a field (returns the tmp ID )\n\t\t\t\tvar tmpID = this.addField( type, false );\n\t\t\t\t/*\n\t\t\t\t * Update our helper id to the tmpID.\n\t\t\t\t * We do this so that when we sort, we have the proper ID.\n\t\t\t\t */ \n\t\t\t\tjQuery( ui.helper ).prop( 'id', tmpID );\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\t\t\t\t// Remove the helper. Gets rid of a weird type artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t\t// Trigger a drop field type event.\n\t\t\t\tnfRadio.channel( 'fields' ).trigger( 'drop:fieldType', type, tmpID );\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Later, we want to reference 'this' context, so we define it here.\n\t\t\t\tvar that = this;\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\t\t// Get our current field order.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Sortable isn't empty\n\t\t\t\t\t// If we're dealing with a sortable that isn't empty, get the order.\n\t\t\t\t\tvar order = jQuery( sortableEl ).sortable( 'toArray' );\n\t\t\t\t} else { // Sortable is empty\n\t\t\t\t\t// Sortable is empty, all we care about is our staged field draggable.\n\t\t\t\t\tvar order = ['nf-staged-fields-drag'];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Get the index of our droped element.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\n\t\t\t\t// Loop through each staged fields model and insert a field.\n\t\t\t\tvar tmpIDs = [];\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\tvar tmpID = that.addField( field.get( 'slug' ) );\n\t\t\t\t\t// Add this newly created field to our order array.\n\t\t\t\t\torder.splice( insertedAt + index, 0, tmpID );\n\t\t\t\t} );\n\n\t\t\t\t// Remove our dropped element from our order array.\n\t\t\t\tvar insertedAt = order.indexOf( 'nf-staged-fields-drag' );\n\t\t\t\torder.splice( insertedAt, 1 );\n\t\t\t\t// Sort our fields\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', order );\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t\t// Remove our helper. Fixes a weird artifact.\n\t\t\t\tjQuery( ui.helper ).remove();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Add a field.\n\t\t * Builds the object necessary to add a field to the field model collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \ttype   field type\n\t\t * @param  boolean \tsilent add silently\n\t\t * @return string \ttmpID\n\t\t */\n\t\taddField: function( type, silent ) {\n\t\t\t// Default to false\n\t\t\tsilent = silent || false;\n\t\t\t// Get our field type model\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type ); \n\t\t\t// Get our tmp ID\n\t\t\tvar tmpID = nfRadio.channel( 'fields' ).request( 'get:tmpID' );\n\t\t\t// Add our field\n\t\t\tvar newModel = nfRadio.channel( 'fields' ).request( 'add',  { id: tmpID, label: fieldType.get( 'nicename' ), type: type }, silent );\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'fields' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\t\n\t\t\treturn tmpID;\n\t\t},\n\n\t\t/**\n\t\t * When the user drags a field type or staging over our sortable, we need to modify the helper.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toverfieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) ) { // Field Type\n\t\t\t\t// String type\n\t\t\t\tvar type = jQuery( ui.helper ).data( 'id' );\n\t\t\t\t// Get our field type model.\n\t\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\t\t\t\t// Get our field type nicename.\n\t\t\t\tvar label = fieldType.get( 'nicename' );\n\t\t\t\t// Get our sortable element.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t// Get our fieldwidth.\n\t\t\t\tvar fieldWidth = jQuery( sortableEl ).width();\n\t\t\t\t// Set our currentHelper to an object var so that we can access it later.\n\t\t\t\tthis.currentHelper = ui.helper;\n\t\t\t\t// Update our helper label.\n\t\t\t\tjQuery( ui.helper ).html( label );\n\t\t\t\t// Remove the field type draggable classes and add sortable classes.\n\t\t\t\tjQuery( ui.helper ).removeClass( 'nf-field-type-button' ).addClass( 'nf-field-wrap' ).css( { 'width': fieldWidth, 'height': '50px' } );\t\t\t\t\t\t\n\t\t\t\t// Add our hover class if our sortable has been initialized.\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// Get our sortable, and if it's initialized add our hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).addClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When the user moves a draggable outside of the sortable, we need to change the helper.\n\t\t * This returns the item to its pre-over state.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\toutFieldsSortable: function( ui ) {\n\t\t\tif( jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) ) { // Field Type\n\t\t\t\t/*\n\t\t\t\t * Get our helper clone.\n\t\t\t\t * This will let us access the previous label and classes of our helper.\n\t\t\t\t */ \n\t\t\t\tvar helperClone = nfRadio.channel( 'drawer-addField' ).request( 'get:typeHelperClone' );\n\t\t\t\t// Set our helper label, remove our sortable class, and add the type class back to the type draggable.\n\t\t\t\tjQuery( this.currentHelper ).html( jQuery( helperClone ).html() );\n\t\t\t\tjQuery( this.currentHelper ).removeClass( 'nf-field-wrap' ).addClass( 'nf-field-type-button' ).css( { 'width': '', 'height': '' } );\n\t\t\t\t// Get our sortable and if it has been intialized, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.item ).hasClass( 'nf-stage' ) ) { // Staging\n\t\t\t\t// If we've initialized our sortable, remove the droppable hover class.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) {\n\t\t\t\t\tjQuery( sortableEl ).removeClass( 'nf-droppable-hover' );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging in the sortable:\n\t\t * remove our opacity setting\n\t\t * remove our ui helper\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopFieldsSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' )\n\t\t\tjQuery( ui.helper ).remove();\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'sortable:stop', ui );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging in the sortable:\n\t\t * add an opacity setting of 0.5\n\t\t * show our item (jQuery hides the original item by default)\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartFieldsSortable: function( ui ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t\t}\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'sortable:start', ui );\n\t\t},\n\n\t\t/**\n\t\t * Sort our fields when we change the order.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object \tui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tupdateFieldsSortable: function( ui ) {\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields' );\n\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\n\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\tvar dragFieldID = jQuery( ui.item ).prop( 'id' ).replace( 'field-', '' );\n\t\t\t\tvar dragModel = fieldCollection.get( dragFieldID );\n\n\t\t\t\t// Add our change event to the change tracker.\n\t\t\t\tvar data = { fields: [] };\n\t\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\t\tvar oldPos = field._previousAttributes.order;\n\t\t\t\t\tvar newPos = field.get( 'order' );\n\t\t\t\t\t\n\t\t\t\t\tdata.fields.push( {\n\t\t\t\t\t\tmodel: field,\n\t\t\t\t\t\tattr: 'order',\n\t\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\t\tafter: newPos\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t\tvar label = {\n\t\t\t\t\tobject: 'Field',\n\t\t\t\t\tlabel: dragModel.get( 'label' ),\n\t\t\t\t\tchange: 'Re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\t\tdashicon: 'sort'\n\t\t\t\t};\n\n\t\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortFields', dragModel, null, label, data );\n\t\t\t}\n\n\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model that represents our form fields.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Field',\n\t\t\tobjectDomain: 'fields',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.on( 'change', this.changeSetting, this );\n\n\t\t\t// Get our parent field type.\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', this.get( 'type' ) );\n\t\t\tvar parentType = fieldType.get( 'parentType' );\n\n\t\t\t// Loop through our field type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( fieldType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( 'undefined' == typeof that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val, { silent: true } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * fields\n\t\t\t * fields-parentType\n\t\t\t * field-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'fields' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + parentType ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'fields-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * Fires an event on the fieldSetting-{name} channel saying we've updated a setting.\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( model, options ) {\n\t\t\tnfRadio.channel( 'fieldSetting-' + _.keys( model.changedAttributes() )[0] ).trigger( 'update:setting', this, options.settingModel ) ;\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'update:setting', this, options.settingModel );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this, options.settingModel );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our field models. \n * This is the actual field data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new fields or removed fields property.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/fields/fieldCollection',['models/fields/fieldModel'], function( fieldModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: fieldModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addField, this );\n\t\t\tthis.on( 'remove', this.removeField, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new fields property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddField: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed fields property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveField: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our field collection.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/data',['models/fields/fieldCollection', 'models/fields/fieldModel'], function( fieldCollection, fieldModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our field collection from our localized form data\n\t\t\tthis.collection = new fieldCollection( preloadedFormData.fields );\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a field is removed so that we can add it to our 'deleted_fields' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about fields and to update/change/delete fields from our collection.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:collection', this.getFieldCollection, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:field', this.getField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:tmpID', this.getTmpFieldID, this );\n\n\t\t\tnfRadio.channel( 'fields' ).reply( 'add', this.addField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'delete', this.deleteField, this );\n\t\t\tnfRadio.channel( 'fields' ).reply( 'sort:fields', this.sortFields, this );\n\t\t},\n\n\t\tgetFieldCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetField: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a field to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \tfield data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddField: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tif ( 'undefined' == typeof ( data.id ) ) {\n\t\t\t\t\tdata.id = this.getTmpFieldID();\n\t\t\t\t}\n\t\t\t\tvar model = new fieldModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * TODO: Add an nfRadio message filter for the model variable.\n\t\t\t * Currently, we manually replace for saved fields; this should be moved to a separate controller.\n\t\t\t * \n\t\t\t * If we're adding a saved field, make sure that we set the type to the parentType.\n\t\t\t */\n\n\t\t\tif ( jQuery.isNumeric( model.get( 'type' ) ) ) {\n\t\t\t\tvar savedType = nfRadio.channel( 'fields' ).request( 'get:type', model.get( 'type' ) );\n\t\t\t\tmodel.set( 'type', savedType.get( 'parentType' ) );\n\t\t\t}\n\n\t\t\tvar newModel = this.collection.add( model, { silent: silent } );\n\t\t\t\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'add:field', model );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Update a field setting by ID\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  int \t\tid    field id\n\t\t * @param  string \tname  setting name\n\t\t * @param  mixed \tvalue setting value\n\t\t * @return void\n\t\t */\n\t\tupdateFieldSetting: function( id, name, value ) {\n\t\t\tvar fieldModel = this.collection.get( id );\n\t\t\tfieldModel.set( name, value );\n\t\t},\n\n\t\t/**\n\t\t * Get our fields sortable EL\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Array \torder optional order array like: [field-1, field-4, field-2]\n\t\t * @return void\n\t\t */\n\t\tsortFields: function( order, ui, updateDB ) {\n\t\t\tif ( null == updateDB ) {\n\t\t\t\tupdateDB = true;\n\t\t\t}\n\t\t\t// Get our sortable element\n\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\tif ( jQuery( sortableEl ).hasClass( 'ui-sortable' ) ) { // Make sure that sortable is enabled\n\t\t\t\t// JS ternerary for setting our order\n\t\t\t\tvar order = order || jQuery( sortableEl ).sortable( 'toArray' );\n\n\t\t\t\t// Loop through all of our fields and update their order value\n\t\t\t\t_.each( this.collection.models, function( field ) {\n\t\t\t\t\t// Get our current position.\n\t\t\t\t\tvar oldPos = field.get( 'order' );\n\t\t\t\t\tvar id = field.get( 'id' );\n\t\t\t\t\tif ( jQuery.isNumeric( id ) ) {\n\t\t\t\t\t\tvar search = 'field-' + id;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar search = id;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Get the index of our field inside our order array\n\t\t\t\t\tvar newPos = order.indexOf( search ) + 1;\n\t\t\t\t\tfield.set( 'order', newPos );\n\t\t\t\t} );\n\t\t\t\tthis.collection.sort();\n\n\t\t\t\tif ( updateDB ) {\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Delete a field from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tfield model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteField: function( model ) {\n\t\t\tnfRadio.channel( 'fields' ).trigger( 'delete:field', model );\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\t\t/**\n\t\t * Return a new tmp id for our fields.\n\t\t * Gets the field collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpFieldID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our repeater option.\n * \n * @package Ninja App builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/optionRepeaterModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\terrors: {},\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// When we add errors to the option row, run a function.\n\t\t\tthis.on( 'change:errors', this.changeErrors, this );\n\t\t},\n\n\t\t/**\n\t\t * When we change the errors on our model, check to see if we should add or remove \n\t\t * the error from the setting that this option is a part of.\n\t\t *\n\t\t * Adding an error to the setting model simply disables the drawer and other\n\t\t * navigation. As long as we have one option with an error, it should be set to true.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeErrors: function( model ) {\n\t\t\t/*\n\t\t\t * The errors attribute will be an object, so if we don't have any keys, it's empty.\n\t\t\t * If we have an empty object, check to see if we can remove the error from our setting model.\n\t\t\t */\n\n\t\t\tif ( 0 == _.size( model.get( 'errors' ) ) ) {\n\t\t\t\t/*\n\t\t\t\t * Loop through our collection to see if we have any other errors.\n\t\t\t\t */\n\t\t\t\tvar errorsFound = false;\n\t\t\t\t_.each( model.collection.models, function( opt ) {\n\t\t\t\t\tif ( 0 != _.size( opt.get( 'errors' ) ) ) {\n\t\t\t\t\t\terrorsFound = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( ! errorsFound ) {\n\t\t\t\t\tmodel.collection.settingModel.set( 'error', false );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * We have errors, so make sure that the setting model has an error set.\n\t\t\t\t */\n\t\t\t\tmodel.collection.settingModel.set( 'error', true );\n\t\t\t}\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Model that represents our list options.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/app/optionRepeaterCollection',['models/app/optionRepeaterModel'], function( listOptionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: listOptionModel,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ) {\n\t\t\t// Listen to the 'sort' event\n\t\t\tthis.on( 'sort', this.changeCollection, this );\n\t\t\t// Listen to the 'add' event\n\t\t\tthis.on( 'add', this.addOption, this );\n\t\t\tthis.settingModel = options.settingModel;\n\t\t},\n\n\t\tchangeCollection: function() {\n\t\t\t// Trigger a 'sort:options' event so that our field model can update\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'sort:options', this );\n\t\t\tnfRadio.channel( 'option-repeater-' + this.settingModel.get( 'name' ) ).trigger( 'sort:options', this );\n\t\t},\n\n\t\taddOption: function( model, collection ) {\n\t\t\tmodel.set( 'settingModel', this.settingModel );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","define( 'views/app/drawer/optionRepeaterError',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'nf-error',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-error'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/optionRepeaterOption',['views/app/drawer/optionRepeaterError'], function( ErrorView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\tclassName: 'nf-table-row',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-default-row',\n\t\tid: function() {\n\t\t\treturn this.model.cid;\n\t\t},\n\n\t\tregions: {\n\t\t\terror: '.nf-option-error'\n\t\t},\n\n\t\tinitialize: function( data ) {\n\t\t\tthis.settingModel = data.settingModel;\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.collection = data.collection;\n\t\t\tthis.columns = data.columns;\n\t\t\tthis.model.on( 'change:errors', this.renderErrors, this );\n\n\t\t\tif ( 'undefined' != typeof this.settingModel.get( 'tmpl_row' ) ) {\n\t\t\t\tthis.template = '#' + this.settingModel.get( 'tmpl_row' );\n\t\t\t}\n\n\t\t\tthis.hasErrors = false;\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tthis.model.off( 'change:errors', this.renderErrors );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.settingModel.get( 'name' ) + '-option' ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( this.model.get( 'new' ) ) {\n\t\t\t\tjQuery( this.el ).find( 'input:first' ).focus();\n\t\t\t\tthis.model.set( 'new', false );\n\t\t\t}\n\t\t},\n\n\t\tevents: {\n\t\t\t'change .setting': 'changeOption',\n\t\t\t'click .nf-delete': 'deleteOption',\n\t\t\t'keyup': 'keyupOption'\n\t\t},\n\n\t\tchangeOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'change:option', e, this.model, this.dataModel, this.settingModel );\n\t\t},\n\n\t\tdeleteOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:deleteOption', this.model, this.collection, this.dataModel );\n\t\t},\n\n\t\tkeyupOption: function( e ) {\n\t\t\tthis.maybeAddOption( e );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'keyup:option', e, this.model, this.dataModel, this.settingModel )\n\t\t\tnfRadio.channel( 'option-repeater-' + this.settingModel.get( 'name' ) ).trigger( 'keyup:option', e, this.model, this.dataModel, this.settingModel )\n\t\t},\n\n\t\tmaybeAddOption: function( e ) {\n\t\t\tif ( 13 == e.keyCode ) {\n\t\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t\t}\n\t\t},\n\n\t\trenderErrors: function() {\n\t\t\tif ( jQuery.isEmptyObject( this.model.get( 'errors' ) ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t/*\n\t\t\t * We don't want to redraw the entire row, which would remove focus from the eq textarea,\n\t\t\t * so we add and remove error classes manually.\n\t\t\t */\n\t\t\tif ( 0 == Object.keys( this.model.get( 'errors' ) ) && this.hasErrors ) {\n\t\t\t\tthis.error.empty();\n\t\t\t\tjQuery( this.el ).removeClass( 'nf-error' );\n\t\t\t} else {\n\t\t\t\tthis.hasErrors = true;\n\t\t\t\tthis.error.show( new ErrorView( { model: this.model } ) );\n\t\t\t\tjQuery( this.el ).addClass( 'nf-error' );\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tgetColumns: function() {\n\t\t\t\t\treturn that.columns;\n\t\t\t\t},\n\t\t\t\trenderOptions: function( column, value ) {\n\n\t\t\t\t\tif( 'undefined' == typeof that.options.columns[ column ] ) return;\n\n\t\t\t\t\tvar html = '';\n\t\t\t\t\t_.each( that.options.columns[ column ].options, function( option ){\n\t\t\t\t\t\tvar selected = ( value == option.value ) ? ' selected' : '';\n\t\t\t\t\t\thtml += '<option value=\"' + option.value + '\"' +  selected + '>' + option.label + '</option>';\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn html;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n\n","define( 'views/app/drawer/optionRepeaterEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'tr',\n\t\ttemplate: '#nf-tmpl-edit-setting-option-repeater-empty'\n\t});\n\n\treturn view;\n} );\n","define( 'views/app/drawer/optionRepeaterComposite',['views/app/drawer/optionRepeaterOption', 'views/app/drawer/optionRepeaterEmpty', 'models/app/optionRepeaterCollection'], function( listOptionView, listEmptyView, listOptionCollection ) {\n\tvar view = Marionette.CompositeView.extend( {\n\t\ttemplate: '#nf-tmpl-edit-setting-wrap',\n\t\tchildView: listOptionView,\n\t\temptyView: listEmptyView,\n\t\treorderOnSort: false,\n\n\t\tinitialize: function( data ) {\n\n\t\t\t/*\n\t\t\t * Our options are stored in our database as objects, not collections.\n\t\t\t * Before we attempt to render them, we need to convert them to a collection if they aren't already one.\n\t\t\t */ \n\t\t\tvar optionCollection = data.dataModel.get( this.model.get( 'name' ) );\n\n\t\t\tif ( false == optionCollection instanceof Backbone.Collection ) {\n\t\t\t\toptionCollection = new listOptionCollection( [], { settingModel: this.model } );\n\t\t\t\toptionCollection.add( data.dataModel.get( this.model.get( 'name' ) ) );\n\t\t\t\tdata.dataModel.set( this.model.get( 'name' ), optionCollection, { silent: true } );\n\t\t\t}\n\n\t\t\tthis.collection = optionCollection;\n\t\t\tthis.dataModel = data.dataModel;\n\t\t\tthis.childViewOptions = { settingModel: this.model, collection: this.collection, dataModel: data.dataModel, columns: this.model.get( 'columns' ) };\n\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor ( var name in deps ) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.on( 'change:' + name, this.render, this );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tvar deps = this.model.get( 'deps' );\n\t\t\tif ( deps ) {\n\t\t\t\tfor (var name in deps) {\n\t\t\t\t    if ( deps.hasOwnProperty( name ) ) {\n\t\t\t\t    \tthis.dataModel.off( 'change:' + name, this.render );\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tonRender: function() {\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\n\t\t\t// this.$el = this.$el.children();\n\t\t\t// this.$el.unwrap();\n\t\t\t// this.setElement( this.$el );\n\t\t\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.nf-list-options-tbody' ).sortable( {\n\t\t\t\thandle: '.handle',\n\t\t\t\thelper: 'clone',\n\t\t\t\tplaceholder: 'nf-list-options-sortable-placeholder',\n\t\t\t\tforcePlaceholderSize: true,\n\t\t\t\topacity: 0.95,\n\t\t\t\ttolerance: 'pointer',\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'start:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'stop:optionSortable', ui );\n\t\t\t\t},\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'option-repeater' ).request( 'update:optionSortable', ui, this, that );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\n\t\t\t/*\n\t\t\t * Send out a radio message.\n\t\t\t */\n\t\t\tnfRadio.channel( 'setting-' + this.model.get( 'name' ) ).trigger( 'render:setting', this.model, this.dataModel, this );\n\t\t},\n\n\t\ttemplateHelpers: function () {\n\t\t\tvar that = this;\n\t    \treturn {\n\t    \t\trenderHeaders: function() {\n\t    \t\t\tvar columns = '<div>&nbsp;</div>';\n\t    \t\t\t_.each( this.columns, function( col ) {\n\t    \t\t\t\tcolumns += '<div>' + col.header + '</div>';\n\t    \t\t\t} );\n\t    \t\t\tcolumns += '<div>&nbsp;</div>';\n\t\t\t\t\treturn columns;\n\t\t\t\t},\n\n\t    \t\trenderSetting: function() {\n\t\t\t\t\tvar setting = _.template( jQuery( '#nf-tmpl-edit-setting-' + this.type ).html() );\n\t\t\t\t\treturn setting( this );\n\t\t\t\t},\n\n\t\t\t\trenderClasses: function() {\n\t\t\t\t\tvar classes = '';\n\t\t\t\t\tif ( 'undefined' != typeof this.width ) {\n\t\t\t\t\t\tclasses += this.width;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclasses += ' one-half';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\tclasses += ' nf-error';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn classes;\n\t\t\t\t},\n\n\t\t\t\trenderVisible: function() {\n\t\t\t\t\tif ( this.deps ) {\n\t\t\t\t\t\tfor (var name in this.deps) {\n\t\t\t\t\t\t    if ( this.deps.hasOwnProperty( name ) ) {\n\t\t\t\t\t\t        if ( that.dataModel.get( name ) !== this.deps[ name ] ) {\n\t\t\t\t\t\t        \treturn 'style=\"display:none;\"';\n\t\t\t\t\t\t        }\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t    \t\t\treturn '';\n\t    \t\t},\n\n\t\t\t\trenderError: function() {\n\t\t\t\t\tif ( this.error ) {\n\t\t\t\t\t\treturn this.error;\n\t\t\t\t\t}\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\n\t\t\t\trenderFieldsetClasses: function() {\n\t\t\t\t\treturn that.model.get( 'name' );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\tattachHtml: function( collectionView, childView ) {\n\t\t\tjQuery( collectionView.el ).find( '.nf-list-options-tbody' ).append( childView.el );\n\t\t\tnfRadio.channel( 'mergeTags' ).request( 'init', this );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-add-new': 'clickAddOption'\n\t\t},\n\n\t\tclickAddOption: function( e ) {\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'click:addOption', this.collection, this.dataModel );\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Handles tasks associated with our option-repeater.\n * \n * Return our repeater child view.\n *\n * Also listens for changes to the options settings.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/app/optionRepeater',['models/app/optionRepeaterModel', 'models/app/optionRepeaterCollection', 'views/app/drawer/optionRepeaterComposite'], function( listOptionModel, listOptionCollection, listCompositeView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests for the childView for list type fields.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'get:settingChildView', this.getSettingChildView, this );\n\t\t\t\n\t\t\t// Listen for changes to our list options.\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'change:option', this.changeOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:addOption', this.addOption );\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater' ), 'click:deleteOption', this.deleteOption );\n\n\t\t\t// Respond to requests related to our list options sortable.\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'update:optionSortable', this.updateOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'stop:optionSortable', this.stopOptionSortable, this );\n\t\t\tnfRadio.channel( 'option-repeater' ).reply( 'start:optionSortable', this.startOptionSortable, this );\n\t\t},\n\n\t\t/**\n\t\t * Update an option value in our model.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t\t\te          event\n\t\t * @param  backbone.model \tmodel      option model\n\t\t * @param  backbone.model \tdataModel\n\t\t * @return void\n\t\t */\n\t\tchangeOption: function( e, model, dataModel, settingModel ) {\n\t\t\tvar name = jQuery( e.target ).data( 'id' );\n\t\t\tif ( 'selected' == name ) {\n\t\t\t\tif ( jQuery( e.target ).attr( 'checked' ) ) {\n\t\t\t\t\tvar value = 1;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar value = jQuery( e.target ).val();\n\t\t\t}\n\t\t\t\n\t\t\tvar before = model.get( name );\n\n\t\t\tmodel.set( name, value );\n\t\t\t// Triger an update on our dataModel\n\t\t\tthis.triggerDataModel( model, dataModel );\n\n\t\t\tvar after = value;\n\t\t\t\n\t\t\tvar changes = {\n\t\t\t\tattr: name,\n\t\t\t\tbefore: before,\n\t\t\t\tafter: after\n\t\t\t}\n\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + model.get( 'label' ) + ' ' + name + ' changed from ' + before + ' to ' + after\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'changeSetting', model, changes, label );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'update:option', model, dataModel, settingModel );\n\t\t\tnfRadio.channel( 'option-repeater-' + settingModel.get( 'name' ) ).trigger( 'update:option', model, dataModel, settingModel );\n\t\t},\n\n\t\t/**\n\t\t * Add an option to our list\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\taddOption: function( collection, dataModel ) {\n\t\t\tvar modelData = {\n\t\t\t\torder: collection.length,\n\t\t\t\tnew: true,\n\t\t\t\toptions: {}\n\t\t\t};\n\t\t\t_.each( collection.settingModel.get( 'columns' ), function( col, key ) {\n\t\t\t\tmodelData[ key ] = col.default;\n\n\t\t\t\tif( 'undefined' != typeof col.options ){\n\t\t\t\t\tmodelData.options[ key ] = col.options;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tvar model = new listOptionModel( modelData );\n\t\t\tcollection.add( model );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addListOption', model, null, label );\n\t\t\tnfRadio.channel( 'option-repeater-' + collection.settingModel.get( 'name' ) ).trigger( 'add:option', model );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'add:option', model );\n\t\t\tthis.triggerDataModel( model, dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Delete an option from our list\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.model \t\tmodel       list option model\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\tdeleteOption: function( model, collection, dataModel ) {\n\t\t\tvar newModel = nfRadio.channel( 'app' ).request( 'clone:modelDeep', model );\n\n\t\t\t// Add our field deletion to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: dataModel.get( 'objectType' ),\n\t\t\t\tlabel: dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + newModel.get( 'label' ) + ' Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: collection\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'removeListOption', newModel, null, label, data );\n\t\t\t\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\tvar results = changeCollection.where( { model: model } );\n\n\t\t\t_.each( results, function( changeModel ) {\n\t\t\t\tif ( 'object' == typeof changeModel.get( 'data' ) ) {\n\t\t\t\t\t_.each( changeModel.get( 'data' ), function( dataModel ) {\n\t\t\t\t\t\tif ( dataModel.model == dataModel ) {\n\t\t\t\t\t\t\tdataModel.model = newModel;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tchangeModel.set( 'model', newModel );\n\t\t\t\tchangeModel.set( 'disabled', true );\n\t\t\t} );\n\n\t\t\tcollection.remove( model );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'remove:option', model );\n\t\t\tnfRadio.channel( 'option-repeater-' + collection.settingModel.get( 'name' ) ).trigger( 'remove:option', model );\n\t\t\tthis.triggerDataModel( model, dataModel );\n\t\t},\n\n\t\t/**\n\t\t * Creates an arbitrary value on our collection, then clones and updates that collection.\n\t\t * This forces a change event to be fired on the dataModel where the list option collection data is stored.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param backbone.collection \tcollection \tlist option collection\n\t\t * @param backbone.model \t\tdataModel\n\t\t * @return void\n\t\t */\n\t\ttriggerDataModel: function( model, dataModel ) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', model );\t\n\t\t},\n\n\t\t/**\n\t\t * Return our list composite view to the setting collection view.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \tsettings model\n\t\t * @return void\n\t\t */\n\t\tgetSettingChildView: function( model ) {\n\t\t\treturn listCompositeView;\n\t\t},\n\n\t\t/**\n\t\t * When we sort our list options, change the order in our option model and trigger a change.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object\t \t\tsortable \tjQuery UI element\n\t\t * @param  backbone.model \tsetting  \tSetting model\n\t\t * @return void\n\t\t */\n\t\tupdateOptionSortable: function( ui, sortable, setting ) {\n\t\t\t\n\t\t\tvar newOrder = jQuery( sortable ).sortable( 'toArray' );\n\t\t\tvar dragModel = setting.collection.get( { cid: jQuery( ui.item ).prop( 'id' ) } );\n\t\t\tvar data = {\n\t\t\t\tcollection: setting.collection,\n\t\t\t\tobjModels: []\n\t\t\t};\n\n\t\t\t_.each( newOrder, function( cid, index ) {\n\t\t\t\tvar optionModel = setting.collection.get( { cid: cid } );\n\t\t\t\tvar oldPos = optionModel.get( 'order' );\n\t\t\t\toptionModel.set( 'order', index );\n\t\t\t\tvar newPos = index;\n\n\t\t\t\tdata.objModels.push( {\n\t\t\t\t\tmodel: optionModel,\n\t\t\t\t\tattr: 'order',\n\t\t\t\t\tbefore: oldPos,\n\t\t\t\t\tafter: newPos\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t\n\t\t\tsetting.collection.sort( { silent: true } );\n\t\t\t\n\t\t\tvar label = {\n\t\t\t\tobject: setting.dataModel.get( 'objectType' ),\n\t\t\t\tlabel: setting.dataModel.get( 'label' ),\n\t\t\t\tchange: 'Option ' + dragModel.get( 'label' ) + ' re-ordered from ' + dragModel._previousAttributes.order + ' to ' + dragModel.get( 'order' ),\n\t\t\t\tdashicon: 'sort'\n\t\t\t};\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'sortListOptions', dragModel, null, label, data );\n\t\t\tthis.triggerDataModel( dragModel, setting.dataModel );\n\t\t\tnfRadio.channel( 'option-repeater' ).trigger( 'sort:option', dragModel, setting );\n\t\t\tnfRadio.channel( 'option-repeater-' + setting.get( 'name' ) ).trigger( 'sort:option', dragModel, setting );\n\t\t},\n\n\t\t/**\n\t\t * When we stop sorting our list options, reset our item opacity.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Object ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstopOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t},\n\n\t\t/**\n\t\t * When we start sorting our list options, remove containing divs and set our item opacity to 0.5\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  Objects ui jQuery UI element\n\t\t * @return void\n\t\t */\n\t\tstartOptionSortable: function( ui ) {\n\t\t\tjQuery( ui.placeholder ).find( 'div' ).remove();\n\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a field currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - Edit Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n            _.each( fieldCollection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( fieldSettings, { objectType: 'fields' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'fields' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel to add the individual Credit Card Fields.\n *\n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldCreditCard',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'fields' ), 'drop:fieldType', this.dropCreditCardField );\n            this.listenTo( nfRadio.channel( 'fields' ), 'add:stagedField', this.stageCreditCardField );\n        },\n\n        dropCreditCardField: function( type, tmpID ) {\n\n            if( 'creditcard' == type ) {\n\n                var model = nfRadio.channel( 'fields').request( 'get:field', tmpID );\n\n                var order = model.get( 'order' );\n\n                nfRadio.channel( 'fields' ).request( 'delete', model );\n\n                _.each( [ 'creditcardfullname', 'creditcardnumber', 'creditcardcvc', 'creditcardexpiration', 'creditcardzip'], function( type ) {\n\n                    var fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\n                    var newField = {\n                        id: nfRadio.channel( 'fields' ).request( 'get:tmpID' ),\n                        type: type,\n                        label: fieldType.get( 'nicename' ),\n                        order: order\n                    };\n\n                    nfRadio.channel('fields').request('add', newField );\n                });\n            }\n\n        },\n\n        stageCreditCardField: function( model ) {\n\n            if( 'creditcard' == model.get( 'slug' ) ) {\n\n                nfRadio.channel( 'fields' ).request( 'remove:stagedField', '', model );\n\n                _.each( [ 'creditcardfullname', 'creditcardnumber', 'creditcardcvc', 'creditcardexpiration', 'creditcardzip'], function( type ) {\n                    nfRadio.channel('fields').request('add:stagedField', type );\n                });\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","/**\n * Listens to our app channel to add the individual Credit Card Fields.\n *\n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldPassword',[], function() {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'fields' ), 'drop:fieldType', this.dropField );\n            this.listenTo( nfRadio.channel( 'fields' ), 'add:stagedField', this.stageField );\n        },\n\n        dropField: function( type, tmpID ) {\n\n            if( 'password' == type ) {\n\n                var model = nfRadio.channel( 'fields').request( 'get:field', tmpID );\n\n                var order = model.get( 'order' );\n\n                nfRadio.channel( 'fields' ).request( 'delete', model );\n\n                _.each( [ 'password', 'passwordconfirm' ], function( type ) {\n\n                    var fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type );\n\n                    var newField = {\n                        id: nfRadio.channel( 'fields' ).request( 'get:tmpID' ),\n                        type: type,\n                        label: fieldType.get( 'nicename' ),\n                        order: order\n                    };\n\n                    nfRadio.channel('fields').request('add', newField );\n                });\n            }\n\n        },\n\n        stageField: function( model ) {\n\n            var field_slug = model.get( 'slug' );\n\n            if( 'password' == field_slug ) {\n\n                nfRadio.channel( 'fields' ).request( 'remove:stagedField', '', model );\n\n                _.each( [ 'password', 'passwordconfirm' ], function( type ) {\n\n                    var silent = ( type == field_slug );\n                    nfRadio.channel('fields').request('add:stagedField', type, silent );\n                });\n            }\n        }\n\n    });\n\n    return controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldQuantity',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel, view ) {\n\t\t\tif ( 'product_assignment' == settingModel.get( 'name' ) ) {\n\t\t\t\tvar productFields = this.getProductFields( settingModel );\n\t\t\t\tsettingModel.set( 'options', productFields );\n\t\t\t}\n\t\t},\n\n\t\tgetProductFields: function( settingModel ) {\n\t\t\tvar productFields = [ settingModel.get( 'select_product' ) ];\n\t\t\t// Update our dataModel with all of our product fields.\n\t\t\tvar fields = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields.models, function( field ) {\n\t\t\t\tif ( 'product' == field.get( 'type' ) ) {\n\t\t\t\t\tproductFields.push( { label: field.get( 'label' ), value: field.get( 'id' ) } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn productFields;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldShipping',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-shipping_options' ), 'render:setting', this.addMask );\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-shipping_options-option' ), 'render:setting', this.addMask );\n\t\t},\n\n\t\taddMask: function( settingModel, dataModel, view ) {\n\t\t\tjQuery( view.el ).find( '[data-id=\"value\"]' ).each( function() {\n\t\t\t\tjQuery( this ).autoNumeric({\n\t\t\t\t\taSign: '$', // TODO: Use form setting\n\t\t\t\t\taSep: thousandsSeparator,\n\t\t\t\t\taDec: decimalPoint\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * When we add a new field, update its key.\n *\n * When we change the key, update any refs to the key.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/key',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// When we add a field, update its key.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.newFieldKey );\n\n\t\t\t// When we edit a label, update our key.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-label' ), 'update:setting', this.updateLabel );\n\n\t\t\t// When we edit a key, check for places that key might be used.\n\t\t\tthis.listenTo( nfRadio.channel( 'fieldSetting-key' ), 'update:setting', this.updateKey );\n\n\t\t\t// When we type inside the admin key field, we need to save our manual_key setting.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-key' ), 'keyup:setting', this.keyUp );\n\t\t},\n\n\t\t/**\n\t\t * Add a key to our new field model.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param backbone.model model new field model\n\t\t * @return void\n\t\t */\n\t\tnewFieldKey: function( model ) {\n\t\t\tvar key = this.keyExists( model.get( 'type' ) );\n\t\t\tmodel.set( 'key', key, { silent: true } );\n\n\t\t\tif( 'undefined' == model.get( 'manual_key' ) ) {\n\t\t\t\tmodel.set('manual_key', false, {silent: true});\n\t\t\t}\n\t\t},\n\n\t\tupdateLabel: function( model ) {\n\n\t\t\t/*\n\t\t\t * If we haven't entered a key manually, update our key when our label changes.\n\t\t\t */\n\t\t\tif ( ! model.get( 'manual_key' ) && 0 != jQuery.trim( model.get( 'label' ) ).length ) {\n\t\t\t\t/*\n\t\t\t\t * When we're editing settings, we expect the edits to fire one at a time.\n\t\t\t\t * Since we're calling this in the middle of our label update, anything that inquires about what has changed after we set our key will see both label and key.\n\t\t\t\t * We need to remove the label from our model.changed property so that all that has changed is the key.\n\t\t\t\t * \n\t\t\t\t */\n\t\t\t\tdelete model.changed.label;\n\t\t\t\tvar key = this.keyExists( model.get( 'label' ) );\n\t\t\t\tmodel.set( 'key', key );\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * When a field key is updated, find any merge tags using the key and update them.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model model field model\n\t\t * @return void\n\t\t */\n\t\tupdateKey: function( dataModel ) {\n\t\t\tvar key = dataModel.get( 'key' );\n\t\t\tthis.settingModel = nfRadio.channel( 'fields' ).request( 'get:settingModel', 'key' );\n\t\t\tthis.setError( key, dataModel );\n\t\t},\n\n\t\tkeyUp: function( e, settingModel, dataModel ) {\n\t\t\tdataModel.set( 'manual_key', true );\n\t\t\tthis.settingModel = settingModel;\n\t\t\tvar key = jQuery( e.target ).val();\n\t\t\tthis.setError( key, dataModel );\n\t\t},\n\n\t\tsetError: function( key, dataModel ) {\n\t\t\tvar error = false;\n\t\t\tif ( '' == jQuery.trim( key ) ) {\n\t\t\t\terror = 'Field keys can\\'t be empty. Please enter a key.';\n\t\t\t} else if ( key != this.keyExists( key, dataModel ) ) {\n\t\t\t\terror = 'Field keys must be unique. Please enter another key.'\n\t\t\t}\n\n\t\t\tif ( error ) {\n\t\t\t\tthis.settingModel.set( 'error', error );\n\t\t\t} else {\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'update:fieldKey', dataModel );\n\t\t\t\tthis.settingModel.set( 'error', false );\n\t\t\t}\n\t\t},\n\n\t\tkeyExists: function( key, dataModel ) {\n\t\t\tkey = jQuery.slugify( key, { separator: '_' } );\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tvar x = 1;\n\t\t\tvar testKey = key;\n\t\t\t_.each( fieldCollection.models, function( field ) {\n\t\t\t\tif ( dataModel != field && testKey == field.get( 'key' ) ) {\n\t\t\t\t\ttestKey = key + '_' + x;\n\t\t\t\t\tx++;\n\t\t\t\t}\n\t\t\t} );\n\t\t\tkey = testKey;\n\n\t\t\treturn key;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates notices for our fields domain.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/notices',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:stagedField', this.addStagedField );\n\t\t},\n\n\t\taddStagedField: function( model ) {\n\t\t\tnfRadio.channel( 'notices' ).request( 'add', 'addStagedField', model.get( 'nicename' ) + ' added to staging' );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles mobile-specific JS for our fields domain.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/mobile',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for the start of our sorting.\n\t\t\t// this.listenTo( nfRadio.channel( 'app' ), 'render:fieldsSortable', this.initWiggle );\n\t\t\t// Listen for when we start sorting.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'sortable:start', this.startWiggle );\n\t\t\t// Listen for when we stop sorting.\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'sortable:stop', this.stopWiggle );\n\t\t},\n\n\t\tinitWiggle: function( view ) {\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( view.el ).find( '.nf-field-wrap' ).on( 'taphold', function() {\n\t\t\t\t\tjQuery( this ).ClassyWiggle( 'start', { degrees: ['.65', '1', '.65', '0', '-.65', '-1', '-.65', '0'], delay: 50 } );\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tstartWiggle: function( ui ) {\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( ui.item ).removeClass( 'ui-sortable-helper' ).ClassyWiggle( 'stop' );\n\t\t\t\tjQuery( ui.helper ).css( 'opacity', '0.75' ).ClassyWiggle( 'start', { degrees: ['.5', '1', '.5', '0', '-.5', '-1', '-.5', '0'] } );\n\t\t\t}\n\t\t},\n\n\t\tstopWiggle: function( ui ) {\n\t\t\tif ( nfRadio.channel( 'app' ).request( 'is:mobile' ) ) {\n\t\t\t\tjQuery( ui.helper ).ClassyWiggle( 'stop' );\n\t\t\t\tjQuery( ui.item ).removeClass( 'ui-sortable-helper drag-selected' );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * If we add a saved field to our form and then update it, set the \"isSaved\" flag to false.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/savedFields',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tignoreAttributes: [\n\t\t\t'editActive',\n\t\t\t'order',\n\t\t\t'isSaved',\n\t\t\t'jBox'\n\t\t],\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'update:setting', this.updateField );\n\t\t\t// Listen to clicks on our add saved field button.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'click:addSavedField', this.clickAddSavedField, this );\n\t\t},\n\n\t\tupdateField: function( dataModel ) {\n\t\t\tif ( dataModel.get( 'isSaved' ) ) {\n\t\t\t\t\n\t\t\t\tvar modified = false;\n\t\t\t\tvar changedAttributes = _.keys( dataModel.changedAttributes() );\n\t\t\t\tvar that = this;\n\t\t\t\t_.each( changedAttributes, function( changed ) {\n\t\t\t\t\tif ( -1 == that.ignoreAttributes.indexOf( changed ) ) {\n\t\t\t\t\t\tmodified = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\t\n\t\t\t\tif ( modified ) {\n\t\t\t\t\tdataModel.set( 'isSaved', false );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tclickAddSavedField: function( e, dataModel ) {\n\t\t\tvar modelClone = nfRadio.channel( 'app' ).request( 'clone:modelDeep', dataModel );\n\n\t\t\tvar fieldData = modelClone.attributes;\n\t\t\tfieldData.isSaved = true;\n\n\t\t\tdelete fieldData.jBox;\n\t\t\tdelete fieldData.editActive;\n\t\t\tdelete fieldData.created_at;\n\t\t\tdelete fieldData.order;\n\t\t\tdelete fieldData.id;\n\t\t\tdelete fieldData.formID;\n\t\t\tdelete fieldData.parent_id;\n\t\t\t\n\t\t\tvar type = nfRadio.channel( 'fields' ).request( 'get:type', fieldData.type );\n\t\t\tvar newType = _.clone( type.attributes );\n\n\t\t\tvar nicename = jQuery( e.target ).parent().parent().find( 'input' ).val();\n\t\t\tconsole.log( nicename );\n\t\t\tnewType.nicename = nicename;\n\t\t\tfieldData.label = nicename;\n\t\t\tfieldData.nicename = nicename;\n\t\t\tdataModel.set( 'addSavedLoading', true );\n\t\t\tvar newTypeDefaults = JSON.stringify( fieldData );\n\n\t\t\tjQuery.post( ajaxurl, { action: 'nf_create_saved_field', field: newTypeDefaults, security: nfAdmin.ajaxNonce }, function( response ) {\n\t\t\t\tresponse = JSON.parse( response );\n\t\t\t\tnewType.id = response.data.id;\n\t\t\t\tnewType.nicename = nicename;\n\t\t\t\tnewType.settingDefaults = fieldData;\n\n\t\t\t\tvar typeCollection = nfRadio.channel( 'fields' ).request( 'get:typeCollection' );\n\t\t\t\tvar newModel = typeCollection.add( newType );\n\n\t\t\t\tvar typeSections = nfRadio.channel( 'fields' ).request( 'get:typeSections' );\n\t\t\t\ttypeSections.get( 'saved' ).get( 'fieldTypes' ).push( newType.id );\n\n\t\t\t\t// dataModel.set( 'type', response.data.id );\n\t\t\t\tdataModel.set( 'addSavedLoading', false );\n\t\t\t\tdataModel.unset( 'addSavedLoading', { silent: true } );\n\t\t\t\tdataModel.get( 'jBox' ).close();\n\t\t\t\t// dataModel.set( 'isSaved', true );\n\n\t\t\t\tnfRadio.channel( 'notices' ).request( 'add', 'addSaved', 'Saved Field Added' );\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a datepicker setting, add our datepicker.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldDatepicker',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-type-datepicker' ), 'render:setting', this.addDatepicker );\n\t\t},\n\n\t\taddDatepicker: function( settingModel, dataModel, view ) {\n\t\t\tvar dateObject = pikadayResponsive( jQuery( view.el ).find( '.setting' )[0] );\t\t\t\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listens to our app channel for settings views being rendered.\n *\n * If we're rendering a product_assignment setting, add our products to the data model.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/fields/fieldDisplayCalc',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen for messages that are fired before a setting view is rendered.\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-calc_var' ), 'before:renderSetting', this.beforeRenderSetting );\n\t\t},\n\n\t\tbeforeRenderSetting: function( settingModel, dataModel, view ) {\n\t\t\t// console.log( 'render!' );\n\t\t},\n\n\t\tgetProductFields: function( settingModel ) {\n\t\t\tvar productFields = [ settingModel.get( 'select_product' ) ];\n\t\t\t// Update our dataModel with all of our product fields.\n\t\t\tvar fields = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t_.each( fields.models, function( field ) {\n\t\t\t\tif ( 'product' == field.get( 'type' ) ) {\n\t\t\t\t\tproductFields.push( { label: field.get( 'label' ), value: field.get( 'id' ) } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\treturn productFields;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Creates and stores a collection of action types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our action type collection\n *\n * Also responds to requests for data about action types\n *\n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.installedActions = new typeCollection();\n\t\t\tthis.installedActions.slug = 'installed';\n\t\t\tthis.installedActions.nicename = 'Installed';\n\t\t\tthis.availableActions = new typeCollection();\n\t\t\tthis.availableActions.slug = 'available';\n\t\t\tthis.availableActions.nicename = 'Available';\n\n\t\t\tvar that = this;\n\t\t\t_.each( actionTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar actionType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\timage: type.image,\n\t\t\t\t\tlink: type.link,\n\t\t\t\t\tsection: type.section\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat[ type.section + 'Actions' ].add( actionType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:installedActions', this.getInstalledActions, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:availableActions', this.getAvailableActions, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\t// Search our installed actions first\n\t\t\tvar type = this.installedActions.get( id );\n\t\t\tif ( ! type ) {\n\t\t\t\ttype = this.availableActions.get( id );\n\t\t\t}\n        \treturn type;\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetInstalledActions: function() {\n        \treturn this.installedActions;\n        },\n\n        /**\n         * Return the available action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetAvailableActions: function() {\n        \treturn this.availableActions;\n        },\n\n        /**\n         * Add a field type to our staging area when the field type button is clicked.\n         *\n         * @since 3.0\n         * @param Object e event\n         * @return void\n         */\n        addStagedField: function( e ) {\n        \tvar type = jQuery( e.target ).data( 'id' );\n        \tnfRadio.channel( 'fields' ).request( 'add:stagedField', type );\n        },\n\n        /**\n         * Return our field type settings sections\n         *\n         * @since  3.0\n         * @return backbone.collection field type settings sections\n         */\n        getTypeSections: function() {\n            return this.fieldTypeSections;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form action.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Action',\n\t\t\tobjectDomain: 'actions',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.on( 'change', this.changeSetting, this );\n\n\t\t\t// Get our parent field type.\n\t\t\tvar actionType = nfRadio.channel( 'actions' ).request( 'get:type', this.get( 'type' ) );\n\n\t\t\t// Loop through our action type \"settingDefaults\" and add any default settings.\n\t\t\tvar that = this;\n\t\t\t_.each( actionType.get( 'settingDefaults' ), function( val, key ) {\n\t\t\t\tif ( ! that.get( key ) ) {\n\t\t\t\t\tthat.set( key, val, { silent: true } );\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\t\t\t/*\n\t\t\t * Trigger an init event on three channels:\n\t\t\t * \n\t\t\t * actions\n\t\t\t * action-type\n\t\t\t *\n\t\t\t * This lets specific field types modify model attributes before anything uses them.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'actions' ).trigger( 'init:fieldModel', this );\n\t\t\tnfRadio.channel( 'actions-' + this.get( 'type' ) ).trigger( 'init:fieldModel', this );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( model, options ) {\n            nfRadio.channel( 'actionSetting-' + _.keys( this.changedAttributes() )[0] ).trigger( 'update:setting', this, options.settingModel ) ;\n\t\t\tnfRadio.channel( 'actions').trigger( 'update:setting', this, options.settingModel );\n            nfRadio.channel( 'app' ).trigger( 'update:setting', this, options.settingModel );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action models. \n * This is the actual action data created by the user.\n *\n * We listen to the add and remove events so that we can push the new id to either the new action or removed action property.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/actionCollection',['models/actions/actionModel'], function( actionModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionModel,\n\t\tcomparator: 'order',\n\t\ttmpNum: 1,\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'add', this.addAction, this );\n\t\t\tthis.on( 'remove', this.removeAction, this );\n\t\t\tthis.newIDs = [];\n\t\t},\n\n\t\t/**\n\t\t * When we add a field, push the id onto our new action property.\n\t\t * This lets us tell the server that this is a new field to be added rather than a field to be updated.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\taddAction: function( model ) {\n\t\t\tthis.newIDs.push( model.get( 'id' ) );\n\t\t},\n\n\t\t/**\n\t\t * When we remove a field, push the id onto our removed action property.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param void\n\t\t */\n\t\tremoveAction: function( model ) {\n\t\t\tthis.removedIDs[ model.get( 'id' ) ] = model.get( 'id' );\n\t\t}\n\t} );\n\treturn collection;\n} );\n","/**\n * Handles interactions with our actions collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/data',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.collection = new actionCollection( preloadedFormData.actions );\n\t\t\tthis.collection.tmpNum = 1;\n\n\t\t\tif ( 0 != this.collection.models.length ) {\n\t\t\t\tvar that = this;\n\t\t\t\t_.each( this.collection.models, function( action ) {\n\t\t\t\t\tif ( ! jQuery.isNumeric( action.get( 'id' ) ) ) {\n\t\t\t\t\t\tthat.collection.tmpNum++;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// Set our removedIDs to an empty object. This will be populated when a action is removed so that we can add it to our 'deleted_actions' object.\n\t\t\tthis.collection.removedIDs = {};\n\n\t\t\t// Respond to requests for data about actions and to update/change/delete actions from our collection.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:collection', this.getCollection, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:action', this.getAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:tmpID', this.getTmpID, this );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add', this.addAction, this );\n\t\t\tnfRadio.channel( 'actions' ).reply( 'delete', this.deleteAction, this );\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\tgetAction: function( id ) {\n\t\t\treturn this.collection.get( id );\n\t\t},\n\n\t\t/**\n\t\t * Add a action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( data, silent ) {\n\t\t\tsilent = silent || false;\n\n\t\t\tif ( false === data instanceof Backbone.Model ) {\n\t\t\t\tvar model = new actionModel( data );\n\t\t\t} else {\n\t\t\t\tvar model = data;\n\t\t\t}\n\n\t\t\tthis.collection.add( model, { silent: silent } );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\n\t\t\treturn model;\n\t\t},\n\n\t\t/**\n\t\t * Delete a action from our collection.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tmodel \taction model to be deleted\n\t\t * @return void\n\t\t */\n\t\tdeleteAction: function( model ) {\n\t\t\tthis.collection.remove( model );\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t},\n\n\n\t\t/**\n\t\t * Return a new tmp id for our actions.\n\t\t * Gets the action collection length, adds 1, then returns that prepended with 'tmp-'.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return string\n\t\t */\n\t\tgetTmpID: function() {\n\t\t\tvar tmpNum = this.collection.tmpNum;\n\t\t\tthis.collection.tmpNum++;\n\t\t\treturn 'tmp-' + tmpNum;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/actionSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( actionSettings, { objectType: 'actions' } );\n\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'get:settingModel', this.getSettingModel, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from a action currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - Edit Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our actions.\n\t\t\tnfRadio.channel( 'actions' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our actions collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var actionCollection = nfRadio.channel( 'actions' ).request( 'get:collection' );\n            _.each( actionCollection.models, function( action ) {\n\t\t\t\taction.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles clicks and dragging for our action types.\n * \n * @package Ninja Forms builder\n * @subpackage Fields - New Field Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/addActionTypes',['models/actions/actionCollection', 'models/actions/actionModel'], function( actionCollection, actionModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'actions' ), 'click:addAction', this.addAction );\n\n\t\t\tnfRadio.channel( 'actions' ).reply( 'add:actionType', this.addAction, this );\n\t\t},\n\n\t\t/**\n\t\t * Add an action to our collection. If silent is passed as true, no events will trigger.\n\t\t * \n\t\t * @since 3.0\n\t\t * @param Object \tdata \taction data to insert\n\t\t * @param bool \t\tsilent \tprevent events from firing as a result of adding\t \t\n\t\t */\n\t\taddAction: function( type ) {\n\t\t\tvar data = {\n\t\t\t\tid: nfRadio.channel( 'actions' ).request( 'get:tmpID' ),\n\t\t\t\ttype: type.get( 'id' ),\n\t\t\t\tlabel: type.get( 'nicename' )\n\t\t\t}\n\t\t\tvar newModel = nfRadio.channel( 'actions' ).request( 'add', data );\n\t\t\tvar label = {\n\t\t\t\tobject: 'Action',\n\t\t\t\tlabel: newModel.get( 'label' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: nfRadio.channel( 'actions' ).request( 'get:collection' )\n\t\t\t}\n\n\t\t\tnfRadio.channel( 'changes' ).request( 'register:change', 'addObject', newModel, null, label, data );\n\t\t\tnfRadio.channel( 'app' ).trigger( 'click:edit', {}, newModel );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type draggables.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/typeDrag',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our action type draggables and run the appropriate function.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'startDrag:type', this.startDrag );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'stopDrag:type', this.stopDrag );\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'drawer-addAction' ).reply( 'get:typeHelperClone', this.getCurrentDraggableHelperClone, this );\n\t\t},\n\n\t\t/**\n\t\t * When we start dragging:\n\t\t * get our drawer element\n\t\t * set its overflow property to visible !important -> forces the type drag element to be on at the top of the z-index.\n\t\t * get our main element\n\t\t * est its overflow propery to visible !important -> forces the type drag element to be on top of the z-index.\n\t\t * set our dragging helper clone\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return void\n\t\t */\n\t\tstartDrag: function( context, ui ) {\n\t\t\tthis.drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tthis.mainEl = nfRadio.channel( 'app' ).request( 'get:mainEl' );\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'visible', 'important' );\n\n\t\t\tthis.draggableHelperClone = jQuery( ui.helper ).clone();\n\n\t\t},\n\n\t\t/**\n\t\t * When we stop dragging, reset our overflow property to hidden !important.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  object context \tThis function is going to be called from a draggable. Context is the \"this\" reference to the draggable.\n\t\t * @param  object ui      \tObject sent by jQuery UI draggable.\n\t\t * @return {[type]}         [description]\n\t\t */\n\t\tstopDrag: function( context, ui ) {\n\t\t\tjQuery( this.drawerEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t\tjQuery( this.mainEl )[0].style.setProperty( 'overflow', 'hidden', 'important' );\n\t\t},\n\n\t\tgetCurrentDraggableHelperClone: function() {\n\t\t\treturn this.draggableHelperClone;\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles the logic for our action type droppable.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/droppable',[], function( ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Respond to requests for our helper clone.\n\t\t\t * This is used by other parts of the application to modify what the user is dragging in real-time.\n\t\t\t */ \n\t\t\tnfRadio.channel( 'app' ).reply( 'drop:actionType', this.dropActionType, this );\n\t\t},\n\n\t\tdropActionType: function( e, ui ) {\n\t\t\tvar type_slug = jQuery( ui.helper ).data( 'type' );\n\t\t\tvar type = nfRadio.channel( 'actions' ).request( 'get:type', type_slug );\n\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', type );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Model for our action type\n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Collection that holds our action type models. \n * \n * @package Ninja Forms builder\n * @subpackage Actions\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/actions/typeCollection',['models/actions/typeModel'], function( actionTypeModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: actionTypeModel\n\t} );\n\treturn collection;\n} );\n","/**\n * Filters our action type collection.\n * \n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/filterTypes',['models/actions/typeCollection'], function( typeCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Listen to our change filter event.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-addAction' ), 'change:filter', this.filterActionTypes );\n\t\t},\n\n\t\t/**\n\t\t * Filter our action types in the add new action drawer\n\t\t * \n\t\t * Takes a search string and finds any action types that match either the name or alias.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string\t search \tstring being searched for\n\t\t * @param  object \t e      \tKeyup event\n\t\t * @return void\n\t\t */\n\t\tfilterActionTypes: function( search, e ) {\n\n\t\t\t// Make sure that we aren't dealing with an empty string.\n\t\t\tif ( '' != jQuery.trim( search ) ) {\n\n        \t\tvar filteredInstalled = [];\n        \t\t/**\n        \t\t * Call the function that actually filters our collection,\n        \t\t * and then loop through our collection, adding each model to our filteredInstalled array.\n        \t\t */\n\t\t\t\tvar installedActions = nfRadio.channel( 'actions' ).request( 'get:installedActions' );\n        \t\t_.each( this.filterCollection( search, installedActions ), function( model ) {\n        \t\t\tfilteredInstalled.push( model );\n        \t\t} );\n\n        \t\tvar filteredAvailable = [];\n        \t\tvar availableActions = nfRadio.channel( 'actions' ).request( 'get:availableActions' );\n        \t\t_.each( this.filterCollection( search, availableActions ), function( model ) {\n        \t\t\tfilteredAvailable.push( model );\n        \t\t} );\n\n        \t\t// Create a new Action Type Section collection with the filtered array.\n        \t\tvar newInstalled = new typeCollection( filteredInstalled );\n        \t\tnewInstalled.slug = 'installed';\n        \t\tnewInstalled.nicename = 'Installed';\n\n        \t\tvar newAvailable = new typeCollection( filteredAvailable );\n        \t\tnewAvailable.slug = 'available';\n        \t\tnewAvailable.nicename = 'Available';\n\n        \t\t// Request that our action types filter be applied, passing the collection we created above.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'filter:actionTypes', newInstalled, newAvailable );\n        \t\t// If we've pressed the 'enter' key, add the action to staging and clear the filter.\n        \t\tif ( e.addObject ) {\n        \t\t\tif ( 0 < newInstalled.length ) {\n        \t\t\t\tnfRadio.channel( 'actions' ).request( 'add:actionType', newInstalled.models[0] );\n        \t\t\t\tnfRadio.channel( 'drawer' ).request( 'clear:filter' );\n        \t\t\t}\n        \t\t}\n        \t} else {\n        \t\t// Clear our filter if the search text is empty.\n        \t\tnfRadio.channel( 'drawer' ).trigger( 'clear:filter' );\n        \t}\n        },\n\n        /**\n         * Search our action type collection for the search string.\n         * \n         * @since  3.0\n         * @param  string\t search \tstring being searched for\n         * @return backbone.collection\n         */\n        filterCollection: function( search, collection ) {\n        \tsearch = search.toLowerCase();\n        \t/*\n        \t * Backbone collections have a 'filter' method that loops through every model,\n        \t * waiting for you to return true or false. If you return true, the model is kept.\n        \t * If you return false, it's removed from the filtered result.\n        \t */\n\t\t\tvar filtered = collection.filter( function( model ) {\n\t\t\t\tvar found = false;\n\t\t\t\t\n\t\t\t\t// If we match either the ID or nicename, return true.\n\t\t\t\tif ( model.get( 'id' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t} else if ( model.get( 'nicename' ).toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * TODO: Hashtag searching. Doesn't really do anything atm.\n\t\t\t\t */\n\t\t\t\tif ( model.get( 'tags' ) && 0 == search.indexOf( '#' ) ) {\n\t\t\t\t\t_.each( model.get( 'tags' ), function( tag ) {\n\t\t\t\t\t\tif ( search.replace( '#', '' ).length > 1 ) {\n\t\t\t\t\t\t\tif ( tag.toLowerCase().indexOf( search.replace( '#', '' ) ) != -1 ) {\n\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t// If we match any of the aliases, return true.\n\t\t\t\tif ( model.get( 'alias' ) ) {\n\t\t\t\t\t_.each( model.get( 'alias' ), function( alias ) {\n\t\t\t\t\t\tif ( alias.toLowerCase().indexOf( search ) != -1 ) {\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn found;\n\t\t\t} );\n\n\t\t\t// Return our filtered collection.\n\t\t\treturn filtered;\n        }\n\t});\n\n\treturn controller;\n} );\n","/**\n * @package Ninja Forms builder\n * @subpackage Actions - New Action Drawer\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/actions/newsletterList',[], function( ) {\n    var controller = Marionette.Object.extend( {\n        initialize: function() {\n            this.listenTo( nfRadio.channel( 'setting-newsletter_list' ),             'show:setting',      this.defaultFields );\n            this.listenTo( nfRadio.channel( 'setting-type-newsletter_list' ),        'click:extra',       this.clickListUpdate );\n            this.listenTo( nfRadio.channel( 'actionSetting-newsletter_list' ),       'update:setting',    this.maybeRenderFields );\n            this.listenTo( nfRadio.channel( 'actionSetting-newsletter_list' ),       'update:setting',    this.maybeRenderGroups );\n            this.listenTo( nfRadio.channel( 'setting-name-newsletter_list_fields' ), 'init:settingModel', this.registerFieldsListener );\n            this.listenTo( nfRadio.channel( 'setting-name-newsletter_list_groups' ), 'init:settingModel', this.registerGroupsListener );\n        },\n\n        defaultFields: function( settingModel, dataModel ) {\n            this.maybeRenderFields( dataModel, settingModel );\n            this.maybeRenderGroups( dataModel, settingModel );\n        },\n\n        registerFieldsListener: function ( model ) {\n            model.listenTo( nfRadio.channel( 'newsletter_list_fields' ), 'update:fieldMapping', this.updateFieldMapping, model );\n        },\n\n        registerGroupsListener: function ( model ) {\n            model.listenTo( nfRadio.channel( 'newsletter_list_groups' ), 'update:interestGroups', this.updateInterestGroups, model );\n        },\n\n        clickListUpdate: function( e, settingModel, dataModel, settingView ) {\n\n            var data = {\n                action: 'nf_' + dataModel.attributes.type + '_get_lists',\n                security: nfAdmin.ajaxNonce\n            };\n\n            var that = this;\n            jQuery( e.srcElement ).addClass( 'spin' );\n            jQuery.post( ajaxurl, data, function( response ){\n                var response = JSON.parse( response );\n                that.updateLists( settingModel, response.lists, settingView, dataModel );\n                dataModel.set( 'newsletter_list', response.lists[0].value, { settingModel: settingModel } );\n            }).always( function() {\n                jQuery( e.srcElement ).removeClass( 'spin' );\n            });\n        },\n\n        updateLists: function( settingModel, lists, settingView, dataModel ) {\n            settingModel.set( 'options', lists );\n            settingView.render();\n        },\n\n        maybeRenderFields: function( dataModel, settingModel ) {\n\n            if( 'undefined' == typeof settingModel ) return;\n\n            var selectedList = dataModel.get( 'newsletter_list' );\n            var lists = settingModel.get( 'options' );\n            _.each( lists, function( list ) {\n                if ( selectedList == list.value ) {\n                    nfRadio.channel( 'newsletter_list_fields').trigger( 'update:fieldMapping', list.fields );\n                }\n            } );\n\n            dataModel.set( 'newsletter_list_fields', 0 );\n        },\n\n        maybeRenderGroups: function( dataModel, settingModel ) {\n            if( 'undefined' == typeof settingModel ) return;\n\n            var selectedList = dataModel.get( 'newsletter_list' );\n            var lists = settingModel.get( 'options' );\n            _.each( lists, function( list ) {\n                if ( selectedList == list.value ) {\n                    nfRadio.channel( 'newsletter_list_groups').trigger( 'update:interestGroups', list.groups );\n                }\n            } );\n\n            dataModel.set( 'newsletter_list_fields', 0 );\n        },\n\n        updateFieldMapping: function( fields ) {\n           var settings = this.get( 'settings' );\n            settings.reset();\n            _.each( fields, function( field ){\n\n                settings.add({\n                    name: field.value,\n                    type: 'textbox',\n                    label: field.label,\n                    width: 'full',\n                    use_merge_tags: { exclude: [ 'user', 'post', 'system', 'querystrings' ] }\n                });\n            });\n            this.set( 'settings', settings );\n        },\n\n        updateInterestGroups: function( groups ) {\n            var settings = this.get( 'settings' );\n            settings.reset();\n            _.each( groups, function( group ){\n\n                settings.add({\n                    name: group.value,\n                    type: 'toggle',\n                    label: group.label,\n                    width: 'full',\n                });\n            });\n            this.set( 'settings', settings );\n        },\n\n    });\n\n    return controller;\n} );\n\n","/**\n * Creates and stores a collection of form setting types. This includes all of the settings shown when editing a field.\n *\n * Loops over our preloaded data and adds that to our form setting type collection\n *\n * Also responds to requests for data about form setting types\n *\n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/types',[\n\t'models/app/typeCollection',\n\t'models/app/settingCollection',\n\t'models/app/settingGroupCollection',\n\t], function(\n\ttypeCollection,\n\tsettingCollection,\n\tsettingGroupCollection\n\t) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Create our field type collection\n\t\t\tthis.collection = new typeCollection();\n\n\t\t\tvar that = this;\n\t\t\t_.each( formSettingTypeData, function( type ) {\n\t\t\t\tvar settingGroups = new settingGroupCollection();\n\t\t\t\t// Loop through the settings groups within this field type and create an object to add to the groups collection.\n\t\t\t\t_.each( type.settingGroups, function( group ) {\n\t\t\t\t\tvar groupTmp = {\n\t\t\t\t\t\tlabel: group.label,\n\t\t\t\t\t\tdisplay: group.display,\n\t\t\t\t\t\tsettings: new settingCollection( group.settings ),\n\t\t\t\t\t}\n\t\t\t\t\t// Add the tmp object to our setting groups collection\n\t\t\t\t\tsettingGroups.add( groupTmp );\n\t\t\t\t} );\n\n\t\t\t\t// Build an object for this type that we can add to our field type collection\n\t\t\t\tvar settingType = {\n\t\t\t\t\tid: type.id,\n\t\t\t\t\tnicename: type.nicename,\n\t\t\t\t\talias: type.alias,\n\t\t\t\t\tsettingGroups: settingGroups,\n\t\t\t\t\tsettingDefaults: type.settingDefaults,\n\t\t\t\t\teditActive: false\n\t\t\t\t}\n\n\t\t\t\t// Add tmp object to the appropriate collection (either installed or available)\n\t\t\t\tthat.collection.add( settingType );\n\t\t\t} );\n\n\t\t\t// Respond to requests to get field type, collection, settings, and sections\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:type', this.getType, this );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:typeCollection', this.getCollection, this );\n\t\t},\n\n\t\t/**\n\t\t * Return a field type by id\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\tid \tfield type\n\t\t * @return backbone.model    \tfield type model\n\t\t */\n\t\tgetType: function( id ) {\n\t\t\treturn this.collection.get( id );\n        },\n\n        /**\n         * Return the installed action type collection\n         *\n         * @since  3.0\n         * @return backbone.collection    \tfield type collection\n         */\n\t\tgetCollection: function() {\n        \treturn this.collection;\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Model that represents our form settings.\n * \n * @package Ninja Forms builder\n * @subpackage Form Settings\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/advanced/settingsModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tobjectType: 'Form Setting',\n\t\t\teditActive: false\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t// Listen for model attribute changes\n\t\t\tthis.bind( 'change', this.changeSetting, this );\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * Check to see if we have any setting defaults to set.\n\t\t\t */\n\t\t\tvar formSettings = nfRadio.channel( 'settings' ).request( 'get:collection' );\n\t\t\t_.each( formSettings.models, function( settingModel ) {\n\t\t\t\tif ( 'undefined' == typeof that.get( settingModel.get( 'name' ) ) ) {\n\t\t\t\t\tthat.set( settingModel.get( 'name' ), settingModel.get( 'value' ), { silent: true } );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'update:fieldKey', this.updateFieldKey );\n\t\t},\n\n\t\t/**\n\t\t * When we change the model attributes, fire an event saying we've changed something.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tchangeSetting: function( model, options) {\n\t\t\tnfRadio.channel( 'app' ).trigger( 'update:setting', this, options.settingModel );\n\t\t},\n\n\t\tupdateFieldKey: function( keyModel, settingModel ) {\n\t\t\tnfRadio.channel( 'app' ).request( 'replace:fieldKey', this, keyModel, settingModel );\n\t\t}\n\t} );\n\t\n\treturn model;\n} );\n","/**\n * Handles interactions with our form settings collection.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/data',['models/advanced/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Load our action collection from our localized form data\n\t\t\tthis.model = new settingsModel( preloadedFormData.settings );\n\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settings', this.getSettings, this );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:setting', this.getSetting, this );\n\t\t\tnfRadio.channel( 'settings' ).reply( 'update:setting', this.updateSetting, this );\n\t\t},\n\n\t\tgetSettings: function() {\n\t\t\treturn this.model;\n\t\t},\n\n\t\tupdateSetting: function( name, value, silent ) {\n\t\t\tsilent = silent || false;\n\t\t\tthis.model.set( name, value, { silent: silent } );\n\t\t},\n\n\t\tgetSetting: function( name ) {\n\t\t\treturn this.model.get( name );\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Fetches settings models so that we can get setting information\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/formSettings',['models/app/settingCollection'], function( settingCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.collection = new settingCollection( formSettings, { objectType: 'settings' } );\n\t\t\t\t\t\n\t\t\t// Responds to requests for settings models.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:settingModel', this.getSettingModel, this );\n\n\t\t\t// Responds to requests for our setting collection\n\t\t\tnfRadio.channel( 'settings' ).reply( 'get:collection', this.getSettingCollection, this );\n\t\t},\n\n\t\tgetSettingModel: function( name ) {\n\t\t\treturn this.collection.findWhere( { name: name } );\n\t\t},\n\n\t\tgetSettingCollection: function() {\n\t\t\treturn this.collection;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles adding and removing the active class from form settings currently being edited.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/editActive',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Respond to requests to remove the active class from all our fields.\n\t\t\tnfRadio.channel( 'settings' ).reply( 'clear:editActive', this.clearEditActive, this );\n\t\t\t// Listen for the closing drawer so that we can remove all of our active classes.\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer-editSettings' ), 'before:closeDrawer', this.clearEditActive );\n\t\t},\n\n\t\t/**\n\t\t * Loops through our fields collection and sets editActive to false.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n        clearEditActive: function() {\n            var collection = nfRadio.channel( 'settings' ).request( 'get:typeCollection' );\n            _.each( collection.models, function( field ) {\n\t\t\t\tfield.set( 'editActive', false );\n            } );\n        }\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Listens for clicks on our form settings sections.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/clickEdit',['models/advanced/settingsModel'], function( settingsModel ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'settings' ), 'click:edit', this.clickEdit );\n\t\t},\n\n\t\tclickEdit: function( e, typeModel ) {\n\t\t\tvar model = nfRadio.channel( 'settings' ).request( 'get:settings' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: typeModel.get( 'settingGroups' ) } );\n\t\t\tvar preventClose = nfRadio.channel( 'drawer' ).request( 'get:preventClose' );\n\t\t\tif ( ! preventClose ) {\n\t\t\t\ttypeModel.set( 'editActive', true );\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/**\n * Makes sure that calculations don't reference calculations with a lower order.\n *\n * For example, our first caclulation can't reference the second, but the second can reference the first.\n * \n * @package Ninja Forms builder\n * @subpackage Advanced\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/advanced/calculations',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * When someone types in the \"name\" or \"eq\" portion of our calculation, we need to make sure\n\t\t\t * that they haven't duplicated a name or made a bad EQ reference.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater-calculations' ), 'keyup:option', this.keyUp );\n\t\t\t/*\n\t\t\t * Same thing for when our calculation option is updated\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater-calculations' ), 'update:option', this.updateCalc );\n\t\t\t/*\n\t\t\t * When we sort our calcluations, we need to make sure that we don't get any bad EQ\n\t\t\t * references.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'option-repeater-calculations' ), 'sort:option', this.sortCalc );\n\t\t},\n\n\t\tkeyUp: function( e, optionModel ) {\n\t\t\t// Get our current value\n\t\t\tvar value = jQuery( e.target ).val();\n\t\t\t// Check to see if we're editing a name or eq\n\t\t\tif( 'name' == jQuery( e.target ).data( 'id' ) ) { // We are editing the name field\n\t\t\t\t// Check to see if our name already exists.\n\t\t\t\tthis.checkName( value, optionModel );\n\t\t\t\tthis.checkEQ( optionModel.get( 'eq' ), optionModel );\n\t\t\t} else { // We're editing the eq\n\t\t\t\t// Check to see if there are any calcs referenced in our eq\n\t\t\t\tthis.checkEQ( value, optionModel );\n\t\t\t}\n\t\t},\n\n\t\tupdateCalc: function( optionModel ) {\n\t\t\tthis.checkName( optionModel.get( 'name' ), optionModel );\n\t\t\tthis.checkEQ( optionModel.get( 'eq' ), optionModel );\n\t\t},\n\n\t\tsortCalc: function( optionModel, setting ) {\n\t\t\tthis.checkAllCalcs( setting.collection );\n\t\t},\n\n\t\t/**\n\t\t * Check to see if a calc name exists.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  string \t\t\tname        calc name to check\n\t\t * @param  backbone.model \toptionModel \n\t\t * @return void\n\t\t */\n\t\tcheckName: function( name, optionModel ) {\n\t\t\toptionModel.set( 'name', name );\n\t\t\t// Get our current errors, if any.\n\t\t\tvar errors = optionModel.get( 'errors' );\n\t\t\t// Search our calc collection for our name\n\t\t\tvar found = optionModel.collection.where( { name: name } );\n\n\t\t\t// If the name that was passed is the same as our current name, return false.\n\t\t\tif ( name == optionModel.get( 'name' ) ) {\n\t\t\t\tfound = [];\n\t\t\t}\n\n\t\t\t// If our name exists, add an errors to the option model\n\t\t\tif ( 0 != found.length ) {\n\t\t\t\terrors.nameExists = 'Calculation names must be unique. Please enter another name.';\n\t\t\t} else {\n\t\t\t\tdelete errors.nameExists;\n\t\t\t}\n\n\t\t\toptionModel.set( 'errors', errors );\n\t\t\toptionModel.trigger( 'change:errors', optionModel );\n\t\t},\n\n\t\t/**\n\t\t * Check to see if an eq contains a reference to a calc at a lower priority.\n\t\t *\n\t\t * @since  3.0\n\t\t * @param  string \t\t\teq          our equation\n\t\t * @param  backbone.model \toptionModel\n\t\t * @return void\n\t\t */\n\t\tcheckEQ: function( eq, optionModel ) {\n\t\t\t// Get any current errors on our optionModel\n\t\t\tvar errors = optionModel.get( 'errors' );\n\t\t\t/*\n\t\t\t * We're looking for two errors:\n\t\t\t * - Calculations that are below the current one can't be processed.\n\t\t\t * - Calculations can't refer to themselves.\n\t\t\t */ \n\t\t\tvar errorSelfRef = false;\n\t\t\tvar errorFutureCalc = false;\n\t\t\t// Regex that searches for {calc:key}\n\t\t\tvar calcs = eq.match( new RegExp( /{calc:(.*?)}/g ) );\n\t\t\t/*\n\t\t\t * Calcs will be an array like:\n\t\t\t * ['{calc:test}'], ['{calc:another}']\n\t\t\t * \n\t\t\t * If we have any calcs in the eq, loop through them and search for the errors.\n\t\t\t */\n\t\t\tif ( calcs ) {\n\t\t\t\tvar calculations = optionModel.collection;\n\t\t\t\t// Maps a function to each item in our calcs array.\n\t\t\t\tcalcs = calcs.map( function( calc ) {\n\t\t\t\t\t// calc will be {calc:name}\n\t\t\t\t\tvar name = calc.replace( '}', '' ).replace( '{calc:', '' );\n\t\t\t\t\t// Get our optionModel from our calculations collection.\n\t\t\t\t\tvar targetCalc = calculations.findWhere( { name: name } );\n\t\t\t\t\tif ( name == optionModel.get( 'name' ) ) {\n\t\t\t\t\t\t// If we already have a calc with this name, set an error.\n\t\t\t\t\t\terrors.selfRef = 'A calculation can\\'t reference itself!';\n\t\t\t\t\t\terrorSelfRef = true;\n\t\t\t\t\t} else if ( targetCalc && targetCalc.get( 'order' ) > optionModel.get( 'order' ) ) {\n\t\t\t\t\t\t// If the calc is after this one, set an error. \n\t\t\t\t\t\terrorFutureCalc = true;\n\t\t\t\t\t\terrors.futureCalc = 'Can\\'t reference a future calculation!';\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// If we didn't find any self ref errors, remove the key.\n\t\t\tif ( ! errorSelfRef ) {\n\t\t\t\tdelete errors.selfRef;\n\t\t\t}\n\n\t\t\t// If we didn't find any future calc errors, remove the key.\n\t\t\tif ( ! errorFutureCalc ) {\n\t\t\t\tdelete errors.futureCalc;\n\t\t\t}\n\n\t\t\t// Set errors and trigger our optionModel change.\n\t\t\toptionModel.set( 'errors', errors );\n\t\t\toptionModel.trigger( 'change:errors', optionModel );\n\n\t\t},\n\n\t\tcheckAllCalcs: function( collection ) {\n\t\t\tvar that = this;\n\t\t\tcollection.models.map( function( opt ) {\n\t\t\t\tthat.checkName( opt.get( 'name' ), opt );\n\t\t\t\tthat.checkEQ( opt.get( 'eq' ), opt );\n\t\t\t} );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Loads all of our controllers using Require JS.\n * \n * @package Ninja Forms builder\n * @subpackage Fields\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine(\n\t'controllers/loadControllers',[\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\t'controllers/app/remote',\n\t\t'controllers/app/drawer',\n\t\t'controllers/app/drawerConfig',\n\t\t'controllers/app/domainConfig',\n\t\t'controllers/app/data',\t\t\n\t\t'controllers/app/drawerToggleSettingGroup',\n\t\t'controllers/app/updateDB',\n\t\t'controllers/app/formData',\n\t\t'controllers/app/previewLink',\n\t\t'controllers/app/menuButtons',\n\t\t'controllers/app/trackChanges',\n\t\t'controllers/app/undoChanges',\n\t\t'controllers/app/publishResponse',\n\t\t'controllers/app/changeDomain',\n\t\t'controllers/app/pushstate',\n\t\t'controllers/app/hotkeys',\n\t\t'controllers/app/cleanState',\n\t\t'controllers/app/coreUndo',\n\t\t'controllers/app/cloneModelDeep',\n\t\t'controllers/app/getSettingChildView',\n\t\t'controllers/app/changeSettingDefault',\n\t\t'controllers/app/fieldset',\n\t\t'controllers/app/toggleSetting',\n\t\t'controllers/app/itemControls',\n\t\t'controllers/app/mergeTags',\n\t\t'controllers/app/itemSettingFill',\n\t\t'controllers/app/confirmPublish',\n\t\t'controllers/app/rte',\n\t\t'controllers/app/changeMenu',\n\t\t'controllers/app/mobile',\n\t\t'controllers/app/notices',\n\t\t'controllers/app/unloadCheck',\n\t\t'controllers/app/fieldContentsFilters',\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\t'controllers/fields/types',\n\t\t'controllers/fields/fieldTypeDrag',\n\t\t'controllers/fields/stagingDrag',\n\t\t'controllers/fields/staging',\n\t\t'controllers/fields/stagingSortable',\n\t\t'controllers/fields/filterTypes',\n\t\t'controllers/fields/sortable',\n\t\t'controllers/fields/data',\n\t\t'controllers/app/optionRepeater',\n\t\t'controllers/fields/editActive',\n\t\t'controllers/fields/fieldSettings',\n\t\t'controllers/fields/fieldCreditCard',\n\t\t'controllers/fields/fieldPassword',\n\t\t'controllers/fields/fieldQuantity',\n\t\t'controllers/fields/fieldShipping',\n\t\t'controllers/fields/key',\n\t\t'controllers/fields/notices',\n\t\t'controllers/fields/mobile',\n\t\t'controllers/fields/savedFields',\n\t\t'controllers/fields/fieldDatepicker',\n\t\t'controllers/fields/fieldDisplayCalc',\n\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\t'controllers/actions/types',\n\t\t'controllers/actions/data',\n\t\t'controllers/actions/actionSettings',\n\t\t'controllers/actions/editActive',\n\t\t'controllers/actions/addActionTypes',\n\t\t'controllers/actions/typeDrag',\n\t\t'controllers/actions/droppable',\n\t\t'controllers/actions/filterTypes',\n\t\t'controllers/actions/newsletterList',\n\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\t'controllers/advanced/types',\n\t\t'controllers/advanced/data',\n\t\t'controllers/advanced/formSettings',\n\t\t'controllers/advanced/editActive',\n\t\t'controllers/advanced/clickEdit',\n\t\t'controllers/advanced/calculations'\n\t],\n\tfunction(\n\t\t/*\n\t\t * Application controllers\n\t\t */\n\t\tRemote,\n\t\tDrawer,\n\t\tDrawerConfig,\n\t\tDomainConfig,\n\t\tAppData,\n\t\tDrawerToggleSettingGroup,\n\t\tUpdateDB,\n\t\tFormData,\n\t\tPreviewLink,\n\t\tAppMenuButtons,\n\t\tAppTrackChanges,\n\t\tAppUndoChanges,\n\t\tAppPublishResponse,\n\t\tAppChangeDomain,\n\t\tPushstate,\n\t\tHotkeys,\n\t\tCleanState,\n\t\tCoreUndo,\n\t\tCloneModelDeep,\n\t\tDrawerSettingChildView,\n\t\tChangeSettingDefault,\n\t\tFieldset,\n\t\tToggleSetting,\n\t\tItemControls,\n\t\tMergeTags,\n\t\tItemSettingFill,\n\t\tConfirmPublish,\n\t\tRTE,\n\t\tChangeMenu,\n\t\tAppMobile,\n\t\tAppNotices,\n\t\tAppUnloadCheck,\n\t\tFieldContentsFilters,\n\t\t/*\n\t\t * Fields domain controllers\n\t\t */\n\t\tFieldTypes,\n\t\tFieldTypeDrag,\n\t\tFieldStagingDrag,\n\t\tStagedFieldsData,\n\t\tStagedFieldsSortable,\n\t\tDrawerFilterFieldTypes,\n\t\tMainContentFieldsSortable,\n\t\tFieldData,\n\t\tOptionRepeater,\n\t\tFieldsEditActive,\n\t\tFieldSettings,\n\t\tFieldCreditCard,\n\t\tFieldPassword,\n\t\tFieldQuantity,\n\t\tFieldShipping,\n\t\tFieldKey,\n\t\tNotices,\n\t\tFieldsMobile,\n\t\tSavedFields,\n\t\tFieldDatepicker,\n\t\tFieldDisplayCalc,\n\t\t/*\n\t\t * TODO: Actions domain controllers\n\t\t */\n\t\tActionTypes,\n\t\tActionData,\n\t\tActionSettings,\n\t\tActionEditActive,\n\t\tActionAddTypes,\n\t\tActionTypeDrag,\n\t\tActionDroppable,\n\t\tActionFilterTypes,\n\t\tActionNewsletterList,\n\t\t/*\n\t\t * TODO: Settings domain controllers\n\t\t */\n\t\tSettingTypes,\n\t\tSettingData,\n\t\tFormSettings,\n\t\tSettingsEditActive,\n\t\tSettingsClickEdit,\n\t\tAdvancedCalculations\n\t\t\n\t) {\n\t\tvar controller = Marionette.Object.extend( {\n\t\t\tinitialize: function() {\n\t\t\t\t/*\n\t\t\t\t * Application controllers\n\t\t\t\t */\n\t\t\t\tnew Hotkeys();\n\t\t\t\tnew Remote();\n\t\t\t\tnew Drawer();\n\t\t\t\tnew DrawerConfig();\n\t\t\t\tnew DomainConfig();\n\t\t\t\tnew DrawerToggleSettingGroup();\n\t\t\t\tnew UpdateDB();\n\t\t\t\tnew PreviewLink();\n\t\t\t\tnew AppMenuButtons();\n\t\t\t\tnew AppTrackChanges();\n\t\t\t\tnew AppUndoChanges();\n\t\t\t\tnew AppPublishResponse();\n\t\t\t\tnew AppChangeDomain();\n\t\t\t\tnew CleanState();\n\t\t\t\tnew CoreUndo();\n\t\t\t\tnew CloneModelDeep();\n\t\t\t\tnew ItemControls();\n\t\t\t\tnew ConfirmPublish();\n\t\t\t\tnew RTE();\n\t\t\t\tnew ChangeMenu();\n\t\t\t\tnew AppMobile();\n\t\t\t\tnew AppNotices();\n\t\t\t\tnew AppUnloadCheck();\n\t\t\t\tnew FieldContentsFilters();\n\t\t\t\t// new Pushstate();\n\t\t\t\t/*\n\t\t\t\t * Fields domain controllers\n\t\t\t\t * \n\t\t\t\t * Field-specific controllers should be loaded before our field type controller.\n\t\t\t\t * This ensures that any 'init' hooks are properly registered.\n\t\t\t\t */\n\t\t\t\tnew Fieldset();\n\t\t\t\tnew OptionRepeater();\n\n\t\t\t\tnew FieldTypes();\n\t\t\t\tnew FieldTypeDrag();\n\t\t\t\tnew FieldStagingDrag();\n\t\t\t\tnew StagedFieldsData();\n\t\t\t\tnew StagedFieldsSortable();\n\t\t\t\tnew DrawerFilterFieldTypes();\n\t\t\t\tnew MainContentFieldsSortable();\n\t\t\t\tnew ChangeSettingDefault();\n\t\t\t\tnew ToggleSetting();\n\t\t\t\tnew DrawerSettingChildView();\n\t\t\t\tnew FieldsEditActive();\n\t\t\t\tnew FieldSettings();\n\t\t\t\tnew FieldCreditCard();\n\t\t\t\tnew FieldPassword;\n\t\t\t\tnew FieldQuantity();\n\t\t\t\tnew FieldShipping();\n\t\t\t\tnew FieldKey();\n\t\t\t\tnew Notices();\n\t\t\t\tnew FieldsMobile();\n\t\t\t\tnew SavedFields();\n\t\t\t\tnew FieldDatepicker();\n\t\t\t\tnew FieldDisplayCalc();\n\t\t\t\t/*\n\t\t\t\t * TODO: Actions domain controllers\n\t\t\t\t */\n\t\t\t\tnew ActionNewsletterList();\n\t\t\t\tnew ActionTypes();\n\t\t\t\tnew ActionData();\n\t\t\t\tnew ActionSettings();\n\t\t\t\tnew ActionEditActive();\n\t\t\t\tnew ActionAddTypes();\n\t\t\t\tnew ActionTypeDrag();\n\t\t\t\tnew ActionDroppable();\n\t\t\t\tnew ActionFilterTypes();\n\t\t\t\t/*\n\t\t\t\t * TODO: Settings domain controllers\n\t\t\t\t */\n\t\t\t\tnew SettingTypes();\n\t\t\t\tnew FormSettings();\n\t\t\t\tnew SettingData();\n\t\t\t\tnew SettingsEditActive();\n\t\t\t\tnew SettingsClickEdit();\n\t\t\t\tnew AdvancedCalculations();\n\t\t\t\t/*\n\t\t\t\t * Data controllers need to be set after every other controller has been setup, even if they aren't domain-specific.\n\t\t\t\t * AppData() was after FormData();\n\t\t\t\t */\n\t\t\t\tnew AppData();\n\t\t\t\tnew FieldData();\n\t\t\t\tnew FormData();\n\t\t\t\tnew MergeTags();\n\t\t\t\tnew ItemSettingFill();\n\t\t\t}\n\t\t});\n\n\t\treturn controller;\n} );\n\n","/**\n * Return views that might be used in extensions.\n * These are un-instantiated views.\n * \n * @package Ninja Forms builder\n * @subpackage Main App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/loadViews',['views/fields/fieldItem'], function( fieldItemView ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t// Reply to requests for our field item view.\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:fieldItem', this.getFieldItem );\n\t\t},\n\n\t\tgetFieldItem: function( model ) {\n\t\t\treturn fieldItemView;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","var nfRadio = Backbone.Radio;\n\njQuery( document ).ready( function( $ ) {\n\trequire( ['views/app/builder', 'controllers/loadControllers', 'views/loadViews'], function( BuilderView, LoadControllers, LoadViews ) {\n\n\t\tvar NinjaForms = Marionette.Application.extend( {\n\n\t\t\tinitialize: function( options ) {\n\t\t\t\t// Trigger an event before we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'before:loadControllers', this );\n\t\t\t\t// Load our controllers.\n\t\t\t\tvar loadControllers = new LoadControllers();\n\t\t\t\t// Trigger an event after we load our controllers.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadControllers', this );\n\n\t\t\t\t// Trigger an event before we load un-instantiated views\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'before:loadViews', this );\n\t\t\t\tvar loadViews = new LoadViews();\n\t\t\t\t// Trigger an event after we load un-instantiated views.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:loadViews', this );\n\t\t\t},\n\n\t\t\tonStart: function() {\n\t\t\t\tvar builderView = new BuilderView();\n\t\t\t\t// Trigger our after start event.\n\t\t\t\tnfRadio.channel( 'app' ).trigger( 'after:appStart', this );\n\t\t\t}\n\t\t} );\n\t\n\t\tvar ninjaForms = new NinjaForms();\n\t\tninjaForms.start();\n\t} );\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}